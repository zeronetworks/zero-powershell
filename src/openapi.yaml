openapi: 3.0.1
info:
  title: Zero Networks
  version: 1.0.8
  description: APIs for Zero Networks
  contact:
    name: Support
    url: https://support.zeronetworks.com
    email: support@zeronetworks.com
servers:
  - url: 'https://{accountName}.zeronetworks.com/api/v1'
    description: The production API server
    variables:
      accountName:
        description: this value is per customer / partner
        default: portal
paths:
  /active-directory/domains:
    get:
      operationId: ActiveDirectoryDomains_List
      summary: List Active Directory domains
      description: Returns a list of AD domains.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/adDomainsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Environment
  /activities/logon:
    get:
      operationId: LogonActivities_List
      summary: List Logon Activities
      description: Returns a list of logon activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/distinctField/{fieldName}:
    get:
      operationId: LogonActivitiesDistinctValues_List
      summary: List Logon Activities Distinct Values
      description: Returns a list of distinct values for a field in logon activities.
      parameters:
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/export:
    post:
      operationId: LogonActivities_Export
      summary: Export logon activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/export/csv/{exportId}:
    get:
      operationId: LogonActivitiesExport_Get
      summary: Download logon activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/filters:
    get:
      operationId: LogonActivitiesFilters_List
      summary: Get logon activity filters
      description: Returns the filters that can be used for logon activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/user-filters:
    get:
      operationId: LogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: LogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/user-filters/{filterId}:
    get:
      operationId: LogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: LogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: LogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network:
    get:
      operationId: NetworkActivities_List
      summary: List Network Activities
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/distinctField/{fieldName}:
    get:
      operationId: NetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/export:
    post:
      operationId: NetworkActivities_Export
      summary: Export network activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/export/csv/{exportId}:
    get:
      operationId: NetworkActivitiesExport_Get
      summary: Download network activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/filters:
    get:
      operationId: NetworkActivitiesFilters_List
      summary: Get network activity filters
      description: Returns the filters that can be used for network activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/user-filters:
    get:
      operationId: NetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: NetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/user-filters/{filterId}:
    get:
      operationId: NetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: NetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: NetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc:
    get:
      operationId: RPCActivities_List
      summary: List RPC Activities
      description: Returns a list of RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/export:
    post:
      operationId: RPCActivities_Export
      summary: Export RPC activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/export/csv/{exportId}:
    get:
      operationId: RPCActivitiesExport_Get
      summary: Download RPC activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters:
    get:
      operationId: RPCActivitiesFilters_List
      summary: Get RPC activity filters
      description: Returns the filters that can be used for RPC activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/interface-candidates:
    get:
      operationId: RPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters
      description: Returns the interface name filters that can be used for RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/op-candidates:
    get:
      operationId: RPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters
      description: Returns the operation filters that can be used for RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/user-filters:
    get:
      operationId: RPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: RPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/user-filters/{filterId}:
    get:
      operationId: RPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: RPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: RPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /ai/learning-config:
    get:
      operationId: LearningConfig_Get
      summary: Get Learning Config
      description: Get Learning Config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /ai/next-batch:
    get:
      operationId: AENextBatch_Get
      summary: AE Next Batch
      description: Returns a date in epoch(ms) for the next batch of AE rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nextBatch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /assets:
    get:
      operationId: Assets_List
      summary: Assets
      description: 'Returns a list of assets. Pass the returned ''nextCursor'' as the ''_cursor'' query param of the next request for batches, when the ''_offset'' param is not used.'
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}:
    get:
      operationId: Asset_Get
      summary: Get an asset
      description: Returns the properties of an asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions:
    put:
      operationId: Asset_Update
      summary: Update asset information
      description: Updates the display name and FQDN for an asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Asset information to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  description: Display name for the asset
                fqdn:
                  type: string
                  description: Fully qualified domain name for the asset
              required:
                - displayName
                - fqdn
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/activate:
    post:
      operationId: AssetActive_Set
      summary: Mark asset active
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/activate-break-glass:
    post:
      operationId: AssetBreakGlass_Activate
      summary: Activate break glass for asset
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/deactivate-break-glass:
    post:
      operationId: AssetBreakGlass_Deactivate
      summary: Deactivate break glass for asset.
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/inactivate:
    post:
      operationId: AssetInactive_Set
      summary: Mark asset inactive
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/mirror:
    post:
      operationId: Asset_Mirror
      summary: Mirror one asset to another
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: The assetIds of the source and target
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsMirrorBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/os-type:
    put:
      operationId: AssetOSType_Update
      summary: Set OS type
      description: Set the OS type (Windows/Linux/Mac) for multiple assets
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: OS type and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOSType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/outbound-restriction:
    put:
      operationId: AssetOutboundRestriction_Update
      summary: Set outbound restriction
      description: 'Set the outbound restriction (Enable Internal, Enable External, Enable Both, Disable) for multiple assets'
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Outbound restriction and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOutboundRestriction'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/preferred-deployment:
    put:
      operationId: AssetPreferredSegmentServer_Update
      summary: Set the preferred segment server for an asset
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: The assetId and Segment Server Id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerSetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/protect:
    post:
      operationId: AssetNetworkSegment_Protect
      summary: Move specific asset from learning to network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/protect/validate:
    post:
      operationId: AssetNetworkSegment_Validate
      summary: Validate specific asset for network segmentation
      description: Returns a number of assets that are valid for network segmentation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/quarantine:
    put:
      operationId: AssetQuarantine_Enable
      summary: Enable quarantine for asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an object with a quarantine boolean
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/queue:
    put:
      operationId: AssetExtendNetwork_Queue
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days to extend by
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
    post:
      operationId: AssetNetwork_Queue
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/retry-health:
    post:
      operationId: AssetRetryHealth_Invoke
      summary: Retry asset health checks
      description: Retry asset health checks
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/type:
    put:
      operationId: AssetType_Update
      summary: Set asset type
      description: Set the asset type (Client/server)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setAssetType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/unprotect:
    post:
      operationId: AssetNetworkSegment_Unprotect
      summary: Unprotect a specific asset from network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/actions/unprotect/validate:
    post:
      operationId: AssetNetworkUnprotect_Validate
      summary: Validate a specific asset for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/{assetId}/activities/logon:
    get:
      operationId: AssetLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/distinctField/{fieldName}:
    get:
      operationId: AssetLogonActivitiesDistinctValues_List
      summary: List Logon Activities Distinct Values
      description: Returns a list of distinct values for a field in logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/export:
    post:
      operationId: AssetLogonActivities_Export
      summary: Export logon activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: AssetLogonActivitiesExport_Get
      summary: Download logon activities for a specific asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/filters:
    get:
      operationId: AssetLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific asset
      description: Returns the filters that can be used for logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/user-filters:
    get:
      operationId: AssetLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    post:
      operationId: AssetLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: AssetLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    put:
      operationId: AssetLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    delete:
      operationId: AssetLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network:
    get:
      operationId: AssetNetworkActivities_List
      summary: List Network Activities for a specific asset
      description: Returns a list of network activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: AssetNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/export:
    post:
      operationId: AssetNetworkActivities_Export
      summary: Export network activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/export/csv/{exportId}:
    get:
      operationId: AssetNetworkActivitiesExport_Get
      summary: Download network activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/filters:
    get:
      operationId: AssetNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific asset
      description: Returns the filters that can be used for network activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/user-filters:
    get:
      operationId: AssetNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    post:
      operationId: AssetNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/network/user-filters/{filterId}:
    get:
      operationId: AssetNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    put:
      operationId: AssetNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    delete:
      operationId: AssetNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc:
    get:
      operationId: AssetRPCActivities_List
      summary: List RPC Activities for a specific asset
      description: Returns a list of RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/export:
    post:
      operationId: AssetRPCActivities_Export
      summary: Export RPC activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/export/csv/{exportId}:
    get:
      operationId: AssetRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/filters:
    get:
      operationId: AssetRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific asset
      description: Returns the filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/filters/interface-candidates:
    get:
      operationId: AssetRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific asset
      description: Returns the interface name filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/filters/op-candidates:
    get:
      operationId: AssetRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific asset
      description: Returns the operation filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/user-filters:
    get:
      operationId: AssetRPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    post:
      operationId: AssetRPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/activities/rpc/user-filters/{filterId}:
    get:
      operationId: AssetRPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    put:
      operationId: AssetRPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
    delete:
      operationId: AssetRPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset activities
  /assets/{assetId}/analysis/identity:
    get:
      operationId: AssetIdentityAnalysis_Get
      summary: Get an asset analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/eventTypeParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdentityAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis/identity/export:
    post:
      operationId: AssetIdentityAnalysis_Export
      summary: Export asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset analysis
  /assets/{assetId}/analysis/identity/export/csv/{exportId}:
    get:
      operationId: AssetIdentityAnalysisExport_Get
      summary: Download asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset analysis
  /assets/{assetId}/analysis/network:
    get:
      operationId: AssetNetworkAnalysis_Get
      summary: Get an asset analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetNetworkAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis/network/activity-map:
    get:
      operationId: AssetNetworkAnalysisActivityMap_Get
      summary: Get an asset analysis activity map data
      description: Returns an object with asset activity map data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkActivityMap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis/network/export:
    post:
      operationId: AssetNetworkAnalysis_Export
      summary: Export asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset analysis
  /assets/{assetId}/analysis/network/export/csv/{exportId}:
    get:
      operationId: AssetNetworkAnalysisExport_Get
      summary: Download asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset analysis
  /assets/{assetId}/ancestors:
    get:
      operationId: AssetMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/ancestors/candidates:
    get:
      operationId: AssetMemberOfGroupCandidates_Get
      summary: Get candidates for adding the asset to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset ancestors
  /assets/{assetId}/audit:
    get:
      operationId: AssetAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/audit/export:
    post:
      operationId: AssetAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset audit
  /assets/{assetId}/audit/export/csv/{exportId}:
    get:
      operationId: AssetAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset audit
  /assets/{assetId}/audit/filters:
    get:
      operationId: AssetAuditsFilters_List
      summary: List Audit Filters for a specific asset
      description: Returns a list of filters for Audit events for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset audit
  /assets/{assetId}/cluster-info:
    get:
      operationId: AssetClusterInfo_Get
      summary: Get asset cluster info
      description: Returns an object of cluster name and cluster members
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clusterInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/health-state:
    get:
      operationId: AssetHealthState_Get
      summary: Get asset health state
      description: Get asset health state
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthStateObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/identity-actions/protect:
    post:
      operationId: AssetIdentitySegment_Protect
      summary: Move asset to Identity Segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
  /assets/{assetId}/identity-actions/protect/validate:
    post:
      operationId: AssetIdentityProtect_Validate
      summary: Validate specific asset for identity segmentation
      description: Returns a number of assets that are valid for identity segmentation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
  /assets/{assetId}/identity-actions/queue:
    post:
      operationId: AssetIdentity_Queue
      summary: Move asset from monitored to Identity learning
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of assetIds to move to Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetIdentityBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
    put:
      operationId: AssetExtendIdentity_Queue
      summary: Extend asset Identity learning period
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of assetIds to extend Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetIdentityExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
  /assets/{assetId}/identity-actions/unprotect:
    post:
      operationId: AssetIdentitySegment_Unprotect
      summary: Unprotect a specific asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
  /assets/{assetId}/identity-actions/unprotect/validate:
    post:
      operationId: AssetIdentityUnprotect_Validate
      summary: Validate a specific asset for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset identity-actions
  /assets/{assetId}/listening-ports:
    get:
      operationId: AssetListeningPorts_List
      summary: List listening ports of asset
      description: List listening ports of an asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listeningPortsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/managers:
    get:
      operationId: AssetAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset managers
    post:
      operationId: AssetAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset managers
    put:
      operationId: AssetAssetManagers_Update
      summary: Update manager of asset
      description: Update an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset managers
  /assets/{assetId}/managers/{groupOrUserId}:
    delete:
      operationId: AssetAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset managers
  /assets/{assetId}/managers/candidates:
    get:
      operationId: AssetAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset managers
  /assets/{assetId}/mirror-candidates:
    get:
      operationId: AssetMirrorCandidates_List
      summary: Get mirror candidates
      description: Get mirror candidates
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetBasicInfoList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies:
    get:
      operationId: AssetExternalAccessPolicy_List
      summary: List External Access policies for an asset
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetExternalAccessPolicy_Create
      summary: Create an external access policy for an asset
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/{policyId}:
    get:
      operationId: AssetExternalAccessPolicy_Get
      summary: Get an External Access policy for an asset
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetExternalAccessPolicy_Update
      summary: Update an External Access policy for an asset
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetExternalAccessPolicy_Delete
      summary: Delete an External Access policy for an asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: AssetExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for an asset
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/filters:
    get:
      operationId: AssetExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for an asset
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for an asset
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: AssetExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for an asset
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: AssetExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for an asset
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/external-access-policies/statistics:
    get:
      operationId: AssetExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for an asset
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules:
    get:
      operationId: AssetIdentityRules_List
      summary: Asset List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetIdentityRules_Create
      summary: Asset Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/{ruleId}:
    get:
      operationId: AssetIdentityRules_Get
      summary: Asset Get Identity Rule
      description: Returns the properties of an Identity rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetIdentityRules_Update
      summary: Asset Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetIdentityRules_Delete
      summary: Asset Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/asset-candidates:
    get:
      operationId: AssetIdentityRulesAssetsCandidates_List
      summary: Asset List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: AssetIdentityRulesExcludedAssetsCandidates_List
      summary: Asset List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/export:
    post:
      operationId: AssetIdentityRules_Export
      summary: Asset Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: AssetIdentityRulesExport_Get
      summary: Asset Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/filters:
    get:
      operationId: AssetIdentityRulesFilters_List
      summary: Asset List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: AssetIdentityRulesAssetsCandidatesFilters_List
      summary: Asset List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: AssetIdentityRulesUserCandidatesFilters_List
      summary: Asset List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity-rules/user-candidates:
    get:
      operationId: AssetIdentityRulesUserCandidates_List
      summary: Asset List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies:
    get:
      operationId: AssetMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: AssetMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/export:
    post:
      operationId: AssetMFAIdentityPolicies_Export
      summary: Export Identity MFA Policies
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/export/csv/{exportId}:
    get:
      operationId: AssetMFAIdentityPoliciesExport_Get
      summary: Download Identity MFA Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/filters:
    get:
      operationId: AssetMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: AssetMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound:
    get:
      operationId: AssetMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: AssetMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: AssetMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: AssetMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: AssetMFAInboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: AssetMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound:
    get:
      operationId: AssetMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: AssetMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: AssetMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: AssetMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: AssetMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules:
    get:
      operationId: AssetRPCRules_List
      summary: Asset List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetRPCRules_Create
      summary: Asset Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: AssetRPCRule_Get
      summary: Asset Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetRPCRule_Update
      summary: Asset Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetRPCRule_Delete
      summary: Asset Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: AssetRPCRulesExcludedDestinationCandidates_List
      summary: Asset Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/export:
    post:
      operationId: AssetRPCRules_Export
      summary: Asset Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: AssetRPCRulesExport_Get
      summary: Download assets RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/filters:
    get:
      operationId: AssetRPCRulesFilters_List
      summary: Asset List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: AssetRPCRulesDestinationCandidatesFilters_List
      summary: Asset List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: AssetRPCRulesSourceCandidatesFilters_List
      summary: Asset Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: AssetRPCRulesUserCandidatesFilters_List
      summary: Asset List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/local-candidates:
    get:
      operationId: AssetRPCRulesDestinationCandidates_List
      summary: Asset List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: AssetRPCRulesSourceCandidates_List
      summary: Asset List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rpc-rules/user-candidates:
    get:
      operationId: AssetRPCRulesUserCandidates_List
      summary: Asset List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: AssetRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/history/{ruleId}:
    get:
      operationId: AssetRulesHistory_Get
      summary: Get a historic version of an rule for a specific asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound:
    get:
      operationId: AssetInboundRules_List
      summary: Asset List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetInboundRules_Create
      summary: Asset Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: AssetInboundRule_Get
      summary: Asset Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetInboundRule_Update
      summary: Asset Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetInboundRule_Delete
      summary: Asset Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetInboundRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/export:
    post:
      operationId: AssetInboundRules_Export
      summary: Asset Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetInboundRulesExport_Get
      summary: Download assets inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/filters:
    get:
      operationId: AssetInboundRulesFilters_List
      summary: Asset List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: AssetInboundRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetInboundRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/local-candidates:
    get:
      operationId: AssetInboundRulesDestinationCandidates_List
      summary: Asset List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: AssetInboundRulesSourceCandidates_List
      summary: Asset List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetInboundRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: AssetInboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: AssetInboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound:
    get:
      operationId: AssetOutboundRules_List
      summary: Asset List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetOutboundRules_Create
      summary: Asset Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: AssetOutboundRule_Get
      summary: Asset Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetOutboundRule_Update
      summary: Asset Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetOutboundRule_Delete
      summary: Asset Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOutboundRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/export:
    post:
      operationId: AssetOutboundRules_Export
      summary: Asset Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetOutboundRulesExport_Get
      summary: Download assets outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/filters:
    get:
      operationId: AssetOutboundRulesFilters_List
      summary: Asset List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: AssetOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOutboundRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOutboundRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: AssetOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for an asset
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/local-candidates:
    get:
      operationId: AssetOutboundRulesSourceCandidates_List
      summary: Asset List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: AssetOutboundRulesDestinationCandidates_List
      summary: Asset List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOutboundRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: AssetOutboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOutboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset protection
  /assets/{assetId}/protection/rules/outbound/user-candidates:
    get:
      operationId: AssetOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound:
    get:
      operationId: AssetInboundOTRules_List
      summary: List Asset rules
      description: Returns a list of Asset rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetInboundOTRules_Create
      summary: Create an Asset rule
      description: creates an Asset rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/{ruleId}:
    get:
      operationId: AssetInboundOTRules_Get
      summary: Get an Asset Rule
      description: get an Asset Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetInboundOTRules_Delete
      summary: Deletes an Asset rule
      description: deletes an Asset rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetInboundOTRules_Update
      summary: Update an Asset Rule
      description: updates an Asset Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetInboundOTRulesExcludedDestinationCandidates_List
      summary: Asset List Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Asset Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/export:
    post:
      operationId: AssetInboundOTRules_Export
      summary: Export Asset Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetRulesOTInboundRulesExport_Get
      summary: Download Asset Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/filters:
    get:
      operationId: AssetInboundOTRulesFilters_List
      summary: List Asset Rules Filters
      description: Returns a list of filters for Asset Rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/filters/local-candidates:
    get:
      operationId: AssetInboundOTRulesDestinationCandidatesFilters_List
      summary: List Asset Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetInboundOTRulesSourceCandidatesFilters_List
      summary: Get Asset Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/local-candidates:
    get:
      operationId: AssetInboundOTRulesDestinationCandidates_List
      summary: List Asset Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/remote-candidates:
    get:
      operationId: AssetInboundOTRulesSourceCandidates_List
      summary: List Asset Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/inbound/user-candidates:
    get:
      operationId: AssetInboundOTRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound:
    get:
      operationId: AssetOutboundOTRules_List
      summary: List Asset rules
      description: Returns a list of Asset rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    post:
      operationId: AssetOutboundOTRules_Create
      summary: Create an Asset rule
      description: creates an Asset rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/{ruleId}:
    get:
      operationId: AssetOutboundOTRules_Get
      summary: Get an Asset Rule
      description: get an Asset Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    delete:
      operationId: AssetOutboundOTRules_Delete
      summary: Deletes an Asset rule
      description: deletes an Asset rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
    put:
      operationId: AssetOutboundOTRules_Update
      summary: Update an Asset Rule
      description: updates an Asset Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOutboundOTRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Asset Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/export:
    post:
      operationId: AssetRulesOTOutboundRules_Export
      summary: Export Asset Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetRulesOTOutboundRulesExport_Get
      summary: Download Asset Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/filters:
    get:
      operationId: AssetOutboundOTRulesFilters_List
      summary: List Asset Rules Filters
      description: Returns a list of filters for Asset Rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOutboundOTRulesSourceCandidatesFilters_List
      summary: List Asset Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOutboundOTRulesDestinationCandidatesFilters_List
      summary: Get Asset Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/local-candidates:
    get:
      operationId: AssetOutboundOTRulesSourceCandidates_List
      summary: List Asset Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/protection/switch-rules/outbound/remote-candidates:
    get:
      operationId: AssetOutboundOTRulesDestinationCandidates_List
      summary: List Asset Outbound Rules Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset protection
  /assets/{assetId}/rpc-actions/monitor:
    post:
      operationId: AssetRpcMonitoring_Add
      summary: Adds a specific asset to RPC monitoring
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
  /assets/{assetId}/rpc-actions/protect:
    post:
      operationId: AssetRpcSegment_Protect
      summary: Add asset to RPC segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
  /assets/{assetId}/rpc-actions/queue:
    post:
      operationId: AssetRPC_Queue
      summary: Move asset from monitored to RPC learning
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
    put:
      operationId: AssetExtendRPC_Queue
      summary: Extend asset RPC learning period
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
  /assets/{assetId}/rpc-actions/unmonitor:
    post:
      operationId: AssetRpcMonitoring_Delete
      summary: Removes a specific asset from RPC monitoring
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
  /assets/{assetId}/rpc-actions/unprotect:
    post:
      operationId: AssetRpcSegment_Unprotect
      summary: Remove asset from RPC segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset rpc-actions
  /assets/{assetId}/tags:
    get:
      operationId: AssetTags_Get
      summary: Get asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/actions/activate:
    post:
      operationId: AssetsActive_Set
      summary: Mark assets active
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to activate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/activate-break-glass:
    post:
      operationId: AssetsBreakGlass_Activate
      summary: Activate break glass for assets.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/deactivate-break-glass:
    post:
      operationId: AssetsBreakGlass_Deactivate
      summary: Deactivate break glass for assets.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to deactivate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/inactivate:
    post:
      operationId: AssetsInactive_Set
      summary: Mark assets inactive
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to mark inactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/mirror:
    post:
      operationId: Assets_Mirror
      summary: Mirror one asset to another
      description: Returns and empty object.
      requestBody:
        description: The assetIds of the source and target
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsMirrorBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/os-type:
    put:
      operationId: AssetsOSType_Update
      summary: Set OS type
      description: Set the OS type (Windows/Linux/Mac) for multiple assets
      requestBody:
        description: OS type and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOSType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/outbound-restriction:
    put:
      operationId: AssetsOutboundRestriction_Update
      summary: Set outbound restriction
      description: 'Set the outbound restriction (Enable Internal, Enable External, Enable Both, Disable) for multiple assets'
      requestBody:
        description: Outbound restriction and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOutboundRestriction'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/preferred-deployment:
    put:
      operationId: AssetsPreferredSegmentServer_Update
      summary: Set the preferred segment server for an asset
      description: Returns and empty object.
      requestBody:
        description: The assetId and Segment Server Id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerSetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/protect:
    post:
      operationId: AssetsNetworkSegment_Protect
      summary: Move asset from learning to network segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/protect/validate:
    post:
      operationId: AssetsNetworkSegment_Validate
      summary: Validate assets for network segmentation
      description: Returns a number of assets that are valid for network segmentation.
      requestBody:
        description: Array of assetIds to move to network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/quarantine:
    put:
      operationId: AssetsQuarantine_Enable
      summary: Enable quarantine for assets
      description: Returns an empty object.
      requestBody:
        description: Send an object with a quarantine boolean and list of assets
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetIds:
                  type: array
                  items:
                    type: string
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - assetIds
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/queue:
    post:
      operationId: AssetsNetwork_Queue
      summary: Move asset from monitored to network learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to network learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendNetwork_Queue
      summary: Extend asset network learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend network learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/unprotect:
    post:
      operationId: AssetsNetworkSegment_Unprotect
      summary: Unprotect an asset from network segmentation
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/unprotect/validate:
    post:
      operationId: AssetsNetworkUnprotect_Validate
      summary: Validate assets for removing from network segmentation
      description: Returns a number of assets that are valid to unprotect.
      requestBody:
        description: Array of assetIds to remove from network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions:
    put:
      operationId: Assets_Update
      summary: Update asset information
      description: Updates the display name and FQDN for a specified asset
      requestBody:
        description: Asset information to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetId:
                  type: string
                  description: ID of the asset to update
                displayName:
                  type: string
                  description: Display name for the asset
                fqdn:
                  type: string
                  description: Fully qualified domain name for the asset
              required:
                - assetId
                - displayName
                - fqdn
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset actions
  /assets/export:
    post:
      operationId: Assets_Export
      summary: Export assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/export/csv/{exportId}:
    get:
      operationId: AssetsExport_Get
      summary: Download assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/filters:
    get:
      operationId: AssetsFilters_List
      summary: Assets Filters
      description: Returns the filters that can be used for assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/protect:
    post:
      operationId: AssetsIdentitySegment_Protect
      summary: Move assets from to identity segmentation.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/protect/validate:
    post:
      operationId: AssetsIdentityProtect_Validate
      summary: Validate assets for identity segmentation
      description: Returns a number of assets that are valid for identity segmentation.
      requestBody:
        description: Array of assetIds to move to identity segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/queue:
    post:
      operationId: AssetsIdentity_Queue
      summary: Move asset from monitored to Identity learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsIdentityQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendIdentity_Queue
      summary: Extend asset Identity learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendIdentityBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/unprotect:
    post:
      operationId: AssetsIdentitySegment_Unprotect
      summary: Unprotect assets
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/unprotect/validate:
    post:
      operationId: AssetsIdentityUnprotect_Validate
      summary: Validate assets for removing from identity segmentation
      description: Returns a number of assets that are valid to unprotect.
      requestBody:
        description: Array of assetIds to remove from identity segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected:
    get:
      operationId: AssetsIdentitySegmented_List
      summary: Identity Segmented Assets
      description: Returns a list of assets that are identity segmented.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/export:
    post:
      operationId: AssetsIdentitySegmented_Export
      summary: Export identity protected assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/export/csv/{exportId}:
    get:
      operationId: AssetsIdentityProtectedExport_Get
      summary: Download identity protected assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/filters:
    get:
      operationId: AssetsIdentitySegmentedFilters_List
      summary: List Identity Segmented Assets Filters
      description: Returns the filters that can be used for identity segmented assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued:
    get:
      operationId: AssetsIdentityQueued_List
      summary: Identity Learning Assets
      description: Returns a list of assets that are identity learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/export:
    post:
      operationId: AssetsIdentityQueued_Export
      summary: Export identity learning assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/export/csv/{exportId}:
    get:
      operationId: AssetsIdentityQueuedExport_Get
      summary: Download identity learning assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/filters:
    get:
      operationId: AssetsIdentityQueuedFilters_List
      summary: List Identity learning Assets Filters
      description: Returns the filters that can be used for identity learning assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive:
    get:
      operationId: AssetsInactive_List
      summary: Inactive Assets
      description: Returns a list of assets that are inactive.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/export:
    post:
      operationId: AssetsInactive_Export
      summary: Export inactive assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/export/csv/{exportId}:
    get:
      operationId: AssetsInactiveExport_Get
      summary: Download inactive assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/filters:
    get:
      operationId: AssetsInactiveFilters_List
      summary: List Inactive Assets Filters
      description: Returns the filters that can be used for inactive assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux:
    post:
      operationId: AssetsLinux_Create
      summary: Create linux asset
      description: Returns the assetId of the created Linux asset.
      requestBody:
        description: Linux asset details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/linuxBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/linuxResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux/scripts/add-user:
    get:
      operationId: AssetsLinuxScript_Get
      summary: Get add_znuser.sh script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux/scripts/add-user-available:
    get:
      operationId: AssetsLinuxScriptAvailable_Get
      summary: Check is Linux script is available
      description: Check is Linux script is available
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/linuxScriptAvailable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored:
    get:
      operationId: AssetsMonitored_List
      summary: Monitored Assets
      description: Returns a list of assets that are monitored.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/export:
    post:
      operationId: AssetsMonitored_Export
      summary: Export monitored assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/export/csv/{exportId}:
    get:
      operationId: AssetsMonitoredExport_Get
      summary: Download monitored assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/filters:
    get:
      operationId: AssetsMonitoredFilters_List
      summary: List Monitored Assets Filters
      description: Returns the filters that can be used for monitored assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/ot:
    get:
      operationId: AssetsOT_List
      summary: List OT/IoT Assets
      description: Returns a list of OT/IoT assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetsOT_Create
      summary: Create an OT/IoT asset
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createOtAssetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/{assetId}:
    get:
      operationId: AssetOT_Get
      summary: Get an OT asset
      description: Returns the properties of an OT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOT_Update
      summary: Edit OT/IoT asset
      description: Edit an OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetEditBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/actions/inactivate:
    post:
      operationId: AssetOTInactive_Set
      summary: Mark OT asset inactive
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
  /assets/ot/{assetId}/actions/protect:
    post:
      operationId: AssetOTNetworkSegment_Protect
      summary: Move specific OT/IoT asset from learning to network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
  /assets/ot/{assetId}/actions/queue:
    post:
      operationId: AssetOtNetwork_Queue
      summary: Add OT Asset to learning
      description: Add OT Asset to learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
    put:
      operationId: AssetOtExtendNetwork_Queue
      summary: Extend OT asset learning
      description: Extend OT asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days to extend by
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
  /assets/ot/{assetId}/actions/unprotect:
    post:
      operationId: AssetOTNetworkSegment_Unprotect
      summary: Unprotect a specific OT/IoT asset from network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
  /assets/ot/{assetId}/activities/logon:
    get:
      operationId: AssetOTLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/distinctField/{fieldName}:
    get:
      operationId: AssetOTLogonActivitiesDistinctValues_List
      summary: List Logon Activities Distinct Values
      description: Returns a list of distinct values for a field in logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/export:
    post:
      operationId: AssetOTLogonActivities_Export
      summary: Export logon activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: AssetOTLogonActivitiesExport_Get
      summary: Download logon activities for a specific OT/IoT asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/filters:
    get:
      operationId: AssetOTLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for logon activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/user-filters:
    get:
      operationId: AssetOTLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    post:
      operationId: AssetOTLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: AssetOTLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    put:
      operationId: AssetOTLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    delete:
      operationId: AssetOTLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network:
    get:
      operationId: AssetOTNetworkActivities_List
      summary: List Network Activities for a specific OT/IoT asset
      description: Returns a list of network activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: AssetOTNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/export:
    post:
      operationId: AssetOTNetworkActivities_Export
      summary: Export network activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/export/csv/{exportId}:
    get:
      operationId: AssetOTNetworkActivitiesExport_Get
      summary: Download network activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/filters:
    get:
      operationId: AssetOTNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for network activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/user-filters:
    get:
      operationId: AssetOTNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    post:
      operationId: AssetOTNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/network/user-filters/{filterId}:
    get:
      operationId: AssetOTNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    put:
      operationId: AssetOTNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    delete:
      operationId: AssetOTNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc:
    get:
      operationId: AssetOTRPCActivities_List
      summary: List RPC Activities for a specific OT/IoT asset
      description: Returns a list of RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/export:
    post:
      operationId: AssetOTRPCActivities_Export
      summary: Export RPC activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/export/csv/{exportId}:
    get:
      operationId: AssetOTRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/filters:
    get:
      operationId: AssetOTRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/filters/interface-candidates:
    get:
      operationId: AssetOTRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific OT/IoT asset
      description: Returns the interface name filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/filters/op-candidates:
    get:
      operationId: AssetOTRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific OT/IoT asset
      description: Returns the operation filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/user-filters:
    get:
      operationId: AssetOTRPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    post:
      operationId: AssetOTRPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/activities/rpc/user-filters/{filterId}:
    get:
      operationId: AssetOTRPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    put:
      operationId: AssetOTRPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
    delete:
      operationId: AssetOTRPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT activities
  /assets/ot/{assetId}/analysis/identity:
    get:
      operationId: AssetOTIdentityAnalysis_Get
      summary: Get an OT/IoT asset analysis
      description: Returns an object with OT/IoT asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/eventTypeParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdentityAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/identity/export:
    post:
      operationId: AssetOTIdentityAnalysis_Export
      summary: Export OT/IoT asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/identity/export/csv/{exportId}:
    get:
      operationId: AssetOTIdentityAnalysisExport_Get
      summary: Download OT/IoT asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/network:
    get:
      operationId: AssetOTNetworkAnalysis_Get
      summary: Get an OT/IoT asset analysis
      description: Returns an object with OT/IoT asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetNetworkAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/network/activity-map:
    get:
      operationId: AssetOTNetworkAnalysisActivityMap_Get
      summary: Get an asset analysis activity map data
      description: Returns an object with asset activity map data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/networkActivityMap'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/network/export:
    post:
      operationId: AssetOTNetworkAnalysis_Export
      summary: Export OT/IoT asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/analysis/network/export/csv/{exportId}:
    get:
      operationId: AssetOTNetworkAnalysisExport_Get
      summary: Download OT/IoT asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /assets/ot/{assetId}/ancestors:
    get:
      operationId: AssetOTMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT ancestors
  /assets/ot/{assetId}/ancestors/candidates:
    get:
      operationId: AssetOTMemberOfGroupCandidates_Get
      summary: Get candidates for adding the asset to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT ancestors
  /assets/ot/{assetId}/audit:
    get:
      operationId: AssetOTAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT audit
  /assets/ot/{assetId}/audit/export:
    post:
      operationId: AssetOTAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT audit
  /assets/ot/{assetId}/audit/export/csv/{exportId}:
    get:
      operationId: AssetOTAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT audit
  /assets/ot/{assetId}/audit/filters:
    get:
      operationId: AssetOTAuditsFilters_List
      summary: List Audit Filters for a specific OT/IoT asset
      description: Returns a list of filters for Audit events for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT audit
  /assets/ot/{assetId}/managers:
    get:
      operationId: AssetOTAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT managers
    post:
      operationId: AssetOTAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT managers
    put:
      operationId: AssetOTAssetManagers_Update
      summary: Update manager of asset
      description: Update an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT managers
  /assets/ot/{assetId}/managers/{groupOrUserId}:
    delete:
      operationId: AssetOTAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT managers
  /assets/ot/{assetId}/managers/candidates:
    get:
      operationId: AssetOTAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT managers
  /assets/ot/{assetId}/mirror-candidates:
    get:
      operationId: AssetOTMirrorCandidates_List
      summary: Get mirror candidates
      description: Get mirror candidates
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetBasicInfoList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules:
    get:
      operationId: AssetOTIdentityRules_List
      summary: OT Asset List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTIdentityRules_Create
      summary: Asset Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/{ruleId}:
    get:
      operationId: AssetOTIdentityRules_Get
      summary: AssetOT Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTIdentityRules_Update
      summary: AssetOT Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTIdentityRules_Delete
      summary: AssetOT Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/asset-candidates:
    get:
      operationId: AssetOTIdentityRulesAssetsCandidates_List
      summary: AssetOT List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: AssetOTIdentityRulesExcludedAssetsCandidates_List
      summary: AssetOT List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/export:
    post:
      operationId: AssetOTIdentityRules_Export
      summary: AssetOT Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: AssetOTIdentityRulesExport_Get
      summary: AssetOT Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/filters:
    get:
      operationId: AssetOTIdentityRulesFilters_List
      summary: AssetOT List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: AssetOTIdentityRulesAssetsCandidatesFilters_List
      summary: AssetOT List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: AssetOTIdentityRulesUserCandidatesFilters_List
      summary: AssetOT List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity-rules/user-candidates:
    get:
      operationId: AssetOTIdentityRulesUserCandidates_List
      summary: AssetOT List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies:
    get:
      operationId: AssetOTMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/export:
    post:
      operationId: AssetOTMFAIdentityPolicies_Export
      summary: Export Identity MFA Policies
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/export/csv/{exportId}:
    get:
      operationId: AssetOTMFAIdentityPoliciesExport_Get
      summary: Download Identity MFA Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters:
    get:
      operationId: AssetOTMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: AssetOTMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound:
    get:
      operationId: AssetOTMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: AssetOTMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulate_Test
      summary: Simulate Inbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: AssetOTMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound:
    get:
      operationId: AssetOTMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: AssetOTMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: AssetOTMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules:
    get:
      operationId: AssetOTRPCRules_List
      summary: Asset List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTRPCRules_Create
      summary: Asset Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: AssetOTRPCRule_Get
      summary: Asset Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTRPCRule_Update
      summary: Asset Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTRPCRule_Delete
      summary: Asset Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: AssetOTRPCRulesExcludedDestinationCandidates_List
      summary: Asset Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/export:
    post:
      operationId: AssetOTRPCRules_Export
      summary: Asset Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: AssetOTRPCRulesExport_Get
      summary: Download assets RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/filters:
    get:
      operationId: AssetOTRPCRulesFilters_List
      summary: Asset List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: AssetOTRPCRulesDestinationCandidatesFilters_List
      summary: Asset List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: AssetOTRPCRulesSourceCandidatesFilters_List
      summary: Asset Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: AssetOTRPCRulesUserCandidatesFilters_List
      summary: AssetOT List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/local-candidates:
    get:
      operationId: AssetOTRPCRulesDestinationCandidates_List
      summary: Asset List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: AssetOTRPCRulesSourceCandidates_List
      summary: Asset List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rpc-rules/user-candidates:
    get:
      operationId: AssetOTRPCRulesUserCandidates_List
      summary: AssetOT List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: AssetOTRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific OT/IoT asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/history/{ruleId}:
    get:
      operationId: AssetOTRulesHistory_Get
      summary: Get a historic version of an rule for a specific OT/IoT asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound:
    get:
      operationId: AssetOTInboundRules_List
      summary: Asset List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTInboundRules_Create
      summary: Asset Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: AssetOTInboundRule_Get
      summary: Asset Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTInboundRule_Update
      summary: Asset Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTInboundRule_Delete
      summary: Asset Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetOTInboundRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/export:
    post:
      operationId: AssetOTInboundRules_Export
      summary: Asset Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetOTInboundRulesExport_Get
      summary: Download assets inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/filters:
    get:
      operationId: AssetOTInboundRulesFilters_List
      summary: Asset List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: AssetOTInboundRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetOTInboundRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/local-candidates:
    get:
      operationId: AssetOTInboundRulesDestinationCandidates_List
      summary: Asset List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: AssetOTInboundRulesSourceCandidates_List
      summary: Asset List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOTInboundRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: AssetOTInboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOTInboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound:
    get:
      operationId: AssetOTOutboundRules_List
      summary: Asset List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTOutboundRules_Create
      summary: Asset Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: AssetOTOutboundRule_Get
      summary: Asset Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTOutboundRule_Update
      summary: Asset Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTOutboundRule_Delete
      summary: Asset Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOTOutboundRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/export:
    post:
      operationId: AssetOTOutboundRules_Export
      summary: Asset Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetOTOutboundRulesExport_Get
      summary: Download assets outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/filters:
    get:
      operationId: AssetOTOutboundRulesFilters_List
      summary: Asset List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: AssetOTOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOTOutboundRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOTOutboundRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: AssetOTOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for an asset
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/local-candidates:
    get:
      operationId: AssetOTOutboundRulesSourceCandidates_List
      summary: Asset List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: AssetOTOutboundRulesDestinationCandidates_List
      summary: Asset List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/user-candidates:
    get:
      operationId: AssetOTOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOTOutboundRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: AssetOTOutboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOTOutboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound:
    get:
      operationId: AssetOTInboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTInboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/{ruleId}:
    get:
      operationId: AssetOTInboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTInboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTInboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetOTInboundOTRulesExcludedDestinationCandidates_List
      summary: OT/IoT List Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for OT/IoT Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/export:
    post:
      operationId: AssetOTInboundOTRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetOTRulesOTInboundRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/filters:
    get:
      operationId: AssetOTInboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/filters/local-candidates:
    get:
      operationId: AssetOTInboundOTRulesDestinationCandidatesFilters_List
      summary: List OT/IoT Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetOTInboundOTRulesSourceCandidatesFilters_List
      summary: Get OT/IoT Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/local-candidates:
    get:
      operationId: AssetOTInboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/remote-candidates:
    get:
      operationId: AssetOTInboundOTRulesSourceCandidates_List
      summary: List OT/IoT Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/inbound/user-candidates:
    get:
      operationId: AssetOTInboundOTRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound:
    get:
      operationId: AssetOTOutboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    post:
      operationId: AssetOTOutboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/{ruleId}:
    get:
      operationId: AssetOTOutboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    delete:
      operationId: AssetOTOutboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
    put:
      operationId: AssetOTOutboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOTOutboundOTRulesExcludedSourceCandidates_List
      summary: OT/IoT List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for OT/IoT Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/export:
    post:
      operationId: AssetOTRulesOTOutboundRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetOTRulesOTOutboundRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/filters:
    get:
      operationId: AssetOTOutboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOTOutboundOTRulesSourceCandidatesFilters_List
      summary: List OT/IoT Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOTOutboundOTRulesDestinationCandidatesFilters_List
      summary: Get OT/IoT Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/local-candidates:
    get:
      operationId: AssetOTOutboundOTRulesSourceCandidates_List
      summary: List OT/IoT Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/protection/switch-rules/outbound/remote-candidates:
    get:
      operationId: AssetOTOutboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Outbound Rules Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT protection
  /assets/ot/{assetId}/revive:
    post:
      operationId: AssetOTActive_Set
      summary: Mark OT asset active
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetEditBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT actions
  /assets/ot/{assetId}/tags:
    get:
      operationId: AssetOTTags_Get
      summary: Get OT asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT tags
  /assets/ot/actions/activate:
    post:
      operationId: AssetsOTActive_Set
      summary: Mark OT assets active
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to mark acactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
  /assets/ot/actions/inactivate:
    post:
      operationId: AssetsOTInactive_Set
      summary: Mark OT assets inactive
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to mark inactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
  /assets/ot/actions/protect:
    post:
      operationId: AssetsOTNetworkSegment_Protect
      summary: Assets OT/IoT add to network segmentation
      description: Returns an empty response.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
  /assets/ot/actions/queue:
    post:
      operationId: AssetsOtNetwork_Queue
      summary: Move OT asset from monitored to learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
    put:
      operationId: AssetsOtExtendNetwork_Queue
      summary: Extend OT asset learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
  /assets/ot/actions/unprotect:
    post:
      operationId: AssetsOTNetworkSegment_Unprotect
      summary: Unprotect OT/IoT Asset from network segmentation
      description: Returns and empty body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT actions
  /assets/ot/export:
    post:
      operationId: AssetsOT_Export
      summary: Export ot assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/export/csv/{exportId}:
    get:
      operationId: AssetsOTExport_Get
      summary: Download ot assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/filters:
    get:
      operationId: AssetsOTFilters_List
      summary: List OT/IoT Assets Filters
      description: Returns a list of filters for OT/IoT assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/preferred-deployment:
    get:
      operationId: AssetsPreferredSegmentServer_Get
      summary: get the preferred segment server for an asset
      description: Returns the preferred segment server id.
      requestBody:
        description: The assetId
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsPreferredSegmentServer'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected:
    get:
      operationId: AssetsNetworkSegmented_List
      summary: List Protected Assets
      description: Returns a list of Protected assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/export:
    post:
      operationId: AssetsNetworkSegmented_Export
      summary: Export Protected assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/export/csv/{exportId}:
    get:
      operationId: AssetsProtectedExport_Get
      summary: Download Protected assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/filters:
    get:
      operationId: AssetsProtectedFilters_List
      summary: List Assets Protected Filters
      description: Returns a list of filters for Protected assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/searchId:
    get:
      operationId: AssetsNetworkSegmented_Search
      tags:
        - Assets
      summary: Search protected asset by FQDN
      description: 'Given fqdn, returns assetId, if asset is found and is protected'
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdSearch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /assets/queued:
    get:
      operationId: AssetsNetworkQueued_List
      summary: List Assets in network learning
      description: Returns a list of assets in network learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/export:
    post:
      operationId: AssetsNetworkQueued_Export
      summary: Export Network Queued assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/export/csv/{exportId}:
    get:
      operationId: AssetsNetworkQueuedExport_Get
      summary: Download Network Queued assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/filters:
    get:
      operationId: AssetsNetworkQueuedFilters_List
      summary: List Assets in network learning Filters
      description: Returns a list of filters for assets in network learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/monitor:
    post:
      operationId: AssetsRpcMonitoring_Add
      summary: Add assets to RPC monitoring
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to add to RPC monitoring
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/protect:
    post:
      operationId: AssetsRpcSegment_Protect
      summary: Add assets to RPC segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to add to RPC segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/queue:
    post:
      operationId: AssetsRPC_Queue
      summary: Move asset from monitored to RPC learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to RPC learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRPCQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendRPC_Queue
      summary: Extend asset RPC learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend RPC learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendRPCBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/unmonitor:
    post:
      operationId: AssetsRpcMonitoring_Delete
      summary: Remove assets from RPC monitoring
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to remove from RPC monitoring
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/unprotect:
    post:
      operationId: AssetsRpcSegment_Unprotect
      summary: Remove assets from RPC segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to remove from RPC segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored:
    get:
      operationId: AssetsRPCMonitored_List
      summary: RPC Monitored Assets
      description: Returns a list of assets that are RPC monitored.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/export:
    post:
      operationId: AssetsRPCMonitored_Export
      summary: Export RPC Monitored assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/export/csv/{exportId}:
    get:
      operationId: AssetsRPCMonitoredExport_Get
      summary: Download RPCMonitored assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/filters:
    get:
      operationId: AssetsRPCMonitoredFilters_List
      summary: List RPC Monitored Assets Filters
      description: Returns the filters that can be used for RPC monitored assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected:
    get:
      operationId: AssetsRPCSegmented_List
      summary: List RPC Segmented Assets
      description: Returns a list of assets that are RPC Segmented.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/export:
    post:
      operationId: AssetsRPCSegmented_Export
      summary: Export RPC Segmented assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/export/csv/{exportId}:
    get:
      operationId: AssetsRPCSegmentedExport_Get
      summary: Download RPC Segmented assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/filters:
    get:
      operationId: AssetsRPCSegmentedFilters_List
      summary: List RPC Protected Assets Filters
      description: Returns the filters that can be used for RPC Protected assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued:
    get:
      operationId: AssetsRPCQueued_List
      summary: List Assets in RPC learning
      description: Returns a list of assets in RPC learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/export:
    post:
      operationId: AssetsRPCQueued_Export
      summary: Export RPC Queued assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/export/csv/{exportId}:
    get:
      operationId: AssetsRPCQueuedExport_Get
      summary: Download RPC Queued assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/filters:
    get:
      operationId: AssetsRPCQueuedFilters_List
      summary: List Assets in RPC learning Filters
      description: Returns a list of filters for assets in RPC learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/fix-wmi:
    get:
      operationId: AssetsScripts_FixWmi
      summary: Get fix-wmi.sh script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/test-udp-net-connection/powershell:
    get:
      operationId: AssetsScriptsPowerShellTestUdpNetConnection_Get
      summary: Get testUdpNetConnection.ps1 script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/test-udp-net-connection/python:
    get:
      operationId: AssetsScriptsPythonTestUdpNetConnection_Get
      summary: Get testUdpNetConnection.py script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/searchId:
    get:
      operationId: Assets_Search
      summary: Search Asset by FQDN
      description: Returns an assetId.
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdSearch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/segmentation-statistics:
    get:
      operationId: AssetsSegmentationStatistics_Get
      summary: Get asset segmentation statistics
      description: Returns an object with asset segmentation statistics.
      parameters:
        - $ref: '#/components/parameters/timeFrameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsSegmentationStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/states/statistics:
    get:
      operationId: AssetsStatesStatistics_Get
      summary: Get asset state statistics
      description: Returns an object with asset state statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/statistics:
    get:
      operationId: AssetsStatistics_Get
      summary: Get asset statistics
      description: Returns an object with asset statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/switches:
    get:
      operationId: Switches_List
      summary: List all switches
      description: Returns all switches.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
    post:
      operationId: Switches_Create
      description: Create a switch
      summary: add new switch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
  /assets/switches/{switchId}:
    get:
      operationId: Switch_Get
      summary: Gets a switch
      description: gets a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
    delete:
      operationId: Switch_Delete
      summary: Delete a switch
      description: delete a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
    put:
      operationId: Switch_Update
      summary: Update a switch
      description: update a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
  /assets/switches/{switchId}/actions/break-glass/monitoring:
    put:
      operationId: SwitchMonitoringBreakGlass_Activate
      summary: Activate break glass for switch monitoring.
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: Array of switchIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchMonitoringBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch Actions
  /assets/switches/{switchId}/actions/break-glass/network:
    put:
      operationId: SwitchNetworkBreakGlass_Activate
      summary: Activate break glass for switch network.
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: Array of switchIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchNetworkBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch actions
  /assets/switches/{switchId}/activities/network:
    get:
      operationId: SwitchNetworkActivities_List
      summary: List Network Activities for a specific switch
      description: Returns a list of network activities for a specific switch.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: SwitchNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/export:
    post:
      operationId: SwitchNetworkActivities_Export
      summary: Export network activities for a specific switch
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/export/csv/{exportId}:
    get:
      operationId: SwitchNetworkActivitiesExport_Get
      summary: Download network activities export for a specific switch
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/filters:
    get:
      operationId: SwitchNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific switch
      description: Returns the filters that can be used for network activities for a specific switch.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/user-filters:
    get:
      operationId: SwitchNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
    post:
      operationId: SwitchNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/activities/network/user-filters/{filterId}:
    get:
      operationId: SwitchNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
    put:
      operationId: SwitchNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
    delete:
      operationId: SwitchNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch activities
  /assets/switches/{switchId}/audit:
    get:
      operationId: SwitchAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
  /assets/switches/{switchId}/audit/export:
    post:
      operationId: SwitchAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch audit
  /assets/switches/{switchId}/audit/export/csv/{exportId}:
    get:
      operationId: SwitchAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Switch audit
  /assets/switches/{switchId}/audit/filters:
    get:
      operationId: SwitchAuditsFilters_List
      summary: List Audit Filters for a specific asset
      description: Returns a list of filters for Audit events for a specific asset.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Switch audit
  /assets/switches/{switchId}/switch-interfaces:
    get:
      operationId: SwitchInterfaces_List
      summary: List interfaces for a switch
      description: List interfaces for a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchInterfacesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
  /assets/switches/{switchId}/switch-interfaces/monitor:
    post:
      operationId: SwitchInterfaces_Update
      summary: Update interfaces for a switch
      description: updates interfaces for a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: update switch interfaces monitor state
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchInterfaceBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
  /assets/switches/{switchId}/ot:
    get:
      operationId: SwitchOT_List
      summary: Gets OT assets for a switch
      description: gets OT assets for a swtich
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch OT/IoT
  /assets/switches/{switchId}/ot/export:
    post:
      operationId: SwitchOT_Export
      summary: Export OT/IoT devices
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch OT/IoT
  /assets/switches/{switchId}/ot/export/csv/{exportId}:
    get:
      operationId: SwitchOTExport_Get
      summary: Download OT/IoT Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Switch OT/IoT
  /assets/switches/{switchId}/ot/filters:
    get:
      operationId: SwitchOTFilters_List
      summary: List OT/IoT Filters
      description: Returns a list of filters for OT/IoT.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch OT/IoT
  /assets/switches/{switchId}/switch-rules/inbound:
    get:
      operationId: SwitchInboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    post:
      operationId: SwitchInboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/{ruleId}:
    get:
      operationId: SwitchInboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    delete:
      operationId: SwitchInboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    put:
      operationId: SwitchInboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/excluded-local-candidates:
    get:
      operationId: SwitchInboundOTRulesExcludedDestinationCandidates_List
      summary: OT/IoT List Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for OT/IoT Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/export:
    post:
      operationId: RulesOTInboundRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/export/csv/{exportId}:
    get:
      operationId: RulesOTInboundRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/filters:
    get:
      operationId: SwitchInboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/filters/local-candidates:
    get:
      operationId: SwitchInboundOTRulesDestinationCandidatesFilters_List
      summary: List OT/IoT Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/filters/remote-candidates:
    get:
      operationId: SwitchInboundOTRulesSourceCandidatesFilters_List
      summary: Get OT/IoT Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/local-candidates:
    get:
      operationId: SwitchInboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/remote-candidates:
    get:
      operationId: SwitchInboundOTRulesSourceCandidates_List
      summary: List OT/IoT Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/inbound/user-candidates:
    get:
      operationId: SwitchInboundOTRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound:
    get:
      operationId: SwitchOutboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    post:
      operationId: SwitchOutboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/{ruleId}:
    get:
      operationId: SwitchOutboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    delete:
      operationId: SwitchOutboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
    put:
      operationId: SwitchOutboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/excluded-local-candidates:
    get:
      operationId: SwitchOutboundOTRulesExcludedSourceCandidates_List
      summary: OT/IoT List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for OT/IoT Outbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/export:
    post:
      operationId: RulesOTOutboundRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/export/csv/{exportId}:
    get:
      operationId: RulesOTOutboundRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/filters:
    get:
      operationId: SwitchOutboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/filters/local-candidates:
    get:
      operationId: SwitchOutboundOTRulesSourceCandidatesFilters_List
      summary: List OT/IoT Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/filters/remote-candidates:
    get:
      operationId: SwitchOutboundOTRulesDestinationCandidatesFilters_List
      summary: Get OT/IoT Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/local-candidates:
    get:
      operationId: SwitchOutboundOTRulesSourceCandidates_List
      summary: List OT/IoT Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/{switchId}/switch-rules/outbound/remote-candidates:
    get:
      operationId: SwitchOutboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Outbound Rules Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch protection
  /assets/switches/actions/break-glass/monitoring:
    put:
      operationId: SwitchesMonitoringBreakGlass_Activate
      summary: Activate break glass for switch monitoring.
      description: Returns and empty object.
      requestBody:
        description: Array of switchIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchesMonitoringBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
  /assets/switches/actions/break-glass/network:
    put:
      operationId: SwitchesNetworkBreakGlass_Activate
      summary: Activate break glass for switch network.
      description: Returns and empty object.
      requestBody:
        description: Array of switchIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchesNetworkBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets Switches
  /audit:
    get:
      operationId: Audits_List
      summary: List Audit Logs
      description: Returns a list of audit events.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/export:
    post:
      operationId: Audits_Export
      summary: Export audit log
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/export/csv/{exportId}:
    get:
      operationId: AuditExport_Get
      summary: Download audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/filters:
    get:
      operationId: AuditsFilters_List
      summary: List Audit Filters
      description: Returns a list of filters for Audit events.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Audit
  /auth/challenge:
    post:
      operationId: AuthChallenge_POST
      summary: Challenge API to get token
      description: Request OTP for login API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/challengeBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/challengeResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/login:
    post:
      operationId: AuthLogin_POST
      summary: Login to get token
      description: Login API after getting challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/logout:
    post:
      operationId: AuthLogout_POST
      summary: Logout
      description: Logout API
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Auth
  /download/cloud-connector/installer:
    get:
      operationId: CloudConnectorInstaller_Download
      summary: Download the Cloud Connector installer
      description: Returns a temporary url to the Cloud Connector installer.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/connect/client:
    get:
      operationId: ConnectClient_Download
      summary: Download the Connect client
      description: Returns a temporary url to the Connect client zip.
      parameters:
        - $ref: '#/components/parameters/connectClientDownloadParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/connect/server:
    get:
      operationId: ConnectServer_Download
      summary: Download the Connect server
      description: Returns a temporary url to the Connect server zip.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/segment/server:
    get:
      operationId: SegmentServer_Download
      summary: Download the Segment server
      description: Returns a temporary url to the Segment server zip.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/segment-connector/installer:
    get:
      operationId: SegmentConnector_Download
      summary: Download the Segment connector
      description: Returns a temporary url to the Segment connector zip.
      parameters:
        - $ref: '#/components/parameters/segmentConnectorDownloadParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /entities/encode-ip:
    get:
      operationId: Entity_EncodeIP
      summary: Encode IP to Asset
      description: Returns the assetId after encoding the IP address.
      parameters:
        - $ref: '#/components/parameters/ipParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-ip-range:
    get:
      operationId: Entity_EncodeIPRange
      summary: Encode IP range
      description: Returns the assetId after encoding the IP range.
      parameters:
        - $ref: '#/components/parameters/ipRangeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-subnet:
    get:
      operationId: Entity_EncodeSubnet
      summary: Encode IP Subnet
      description: Returns the assetId after encoding the IP subnet.
      parameters:
        - $ref: '#/components/parameters/ipSubnetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /environments/cluster-strategy:
    get:
      operationId: SettingsClusterStrategy_Get
      summary: Get cluster strategy configuration
      description: Returns cluster strategy configuration.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClusterStrategy'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
    put:
      operationId: SettingsClusterStrategy_Update
      summary: Set cluster strategy configuration
      description: Returns an empty response.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClusterStrategyBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /environments/deployments:
    get:
      operationId: SegmentServers_List
      summary: List segment server deployments
      description: Returns a list of segment servers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploymentsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Servers
  /environments/deployments/access-token:
    post:
      operationId: SegmentServersInstallToken_Create
      summary: Create segment server installation token
      description: Returns a an access token.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Servers
  /environments/learning-config:
    get:
      operationId: EnvironmentsLearningConfig_Get
      summary: Get Learning Config
      description: Get Learning Config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /environments/licenses/{licenseType}:
    put:
      operationId: EnvironmentsLicenses_Update
      summary: Set Trial license
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenseConfigBody'
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
    get:
      operationId: EnvironmentsLicenses_Get
      summary: Get Subscription Licenses
      description: Get Subscription Licenses
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licensesConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /environments/licenses/{licenseType}/export:
    post:
      operationId: EnvironmentsLicenses_Export
      summary: Export license
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /environments/licenses/{licenseType}/export/csv/{exportId}:
    get:
      operationId: EnvironmentsLicensesExport_Get
      summary: Download licenses export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /environments/licenses/{licenseType}/in-use:
    get:
      operationId: EnvironmentsLicensesInUse_Get
      summary: Returns list of licenses in use
      description: Returns a list of licenses in use
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licensesInUse'
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /environments/system-health:
    get:
      operationId: EnvironmentsSystemHealth_Get
      summary: Get system health
      description: Get system health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemHealthList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /groups:
    get:
      operationId: Groups_List
      summary: List Groups
      description: 'Returns a list of groups. Pass the returned ''nextCursor'' as the ''_cursor'' query param of the next request for batches, when the ''_offset'' param is not used.'
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchGroupsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}:
    get:
      operationId: GroupsByType_List
      summary: List Groups
      description: 'Returns a list of groups. Pass the returned ''nextCursor'' as the ''_cursor'' query param of the next request for batches, when the ''_offset'' param is not used.'
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchGroupsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/externalId/{externalId}:
    get:
      operationId: GroupsExternalId_Search
      summary: Search for a group by external Id
      description: Returns a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/externalIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/filters:
    get:
      operationId: GroupsFilters_Get
      summary: List filters for groups
      description: Returns a list of filters for Groups.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}:
    get:
      operationId: Group_Get
      summary: Get a group
      description: Returns the properties of an group.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/expand-record:
    get:
      operationId: GroupsSimulateSegmentationReportRecord_Expand
      summary: Expand a Simulate Segmentation Report record for a Group
      description: Returns a the details of the record
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/port'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/processes'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationReportRecord'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/export:
    post:
      operationId: GroupsSimulateSegmentationReport_Export
      summary: Export simulate Segmentation Report for a Group
      description: export simulate Segmentation Report for a Group
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/export/csv/{exportId}:
    get:
      operationId: GroupsSimulateSegmentationReportExport_Get
      summary: Download simulate Segmentation Report for a Group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/generate:
    post:
      operationId: GroupsSimulateSegmentationReport_Generate
      summary: Generate Simulate Segmentation Report for a Group
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSimulateSegmentationReportBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/report:
    get:
      operationId: GroupsSimulateSegmentationReport_Get
      summary: Get Simulate Segmentation Report for a Group
      description: Returns a the simulate segmentation report for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationReport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/state:
    get:
      operationId: GroupsSimulateSegmentationState_Get
      summary: Get Simulate Segmentation State for a Group
      description: Returns a the simulate segmentation state for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationState'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/logon:
    get:
      operationId: GroupsLogonActivities_List
      summary: List specific Logon Activities
      description: Returns a list of logon activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/distinctField/{fieldName}:
    get:
      operationId: GroupsLogonActivitiesDistinctValues_List
      summary: List Logon Activities Distinct Values
      description: Returns a list of distinct values for a field in logon activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/export:
    post:
      operationId: GroupsLogonActivities_Export
      summary: Export logon activities for a specific group
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: GroupsLogonActivitiesExport_Get
      summary: Download logon activities for a specific group export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/filters:
    get:
      operationId: GroupsLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific group
      description: Returns the filters that can be used for logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/user-filters:
    get:
      operationId: GroupsLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    post:
      operationId: GroupsLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: GroupsLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    put:
      operationId: GroipsLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    delete:
      operationId: GroupsLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/network:
    get:
      operationId: GroupsNetworkActivities_List
      summary: List Network Activities for a specific group
      description: Returns a list of network activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: GroupsNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/network/export:
    post:
      operationId: GroupsNetworkActivities_Export
      summary: Export network activities for a specific group
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/export/csv/{exportId}:
    get:
      operationId: GroupsNetworkActivitiesExport_Get
      summary: Download network activities export for a specific group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/filters:
    get:
      operationId: GroupsNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific group
      description: Returns the filters that can be used for network activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/user-filters:
    get:
      operationId: GroupsNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/user-filters/{filterId}:
    get:
      operationId: GroupsNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/rpc:
    get:
      operationId: GroupsRPCActivities_List
      summary: List RPC Activities for a specific group
      description: Returns a list of RPC activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/export:
    post:
      operationId: GroupsRPCActivities_Export
      summary: Export RPC activities for a specific group
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/export/csv/{exportId}:
    get:
      operationId: GroupsRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/filters:
    get:
      operationId: GroupsRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific group
      description: Returns the filters that can be used for RPC activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/filters/interface-candidates:
    get:
      operationId: GroupsRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific group
      description: Returns the interface name filters that can be used for RPC activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/filters/op-candidates:
    get:
      operationId: GroupsRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific group
      description: Returns the operation filters that can be used for RPC activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/user-filters:
    get:
      operationId: GroupsRPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    post:
      operationId: GroupsRPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/activities/rpc/user-filters/{filterId}:
    get:
      operationId: GroupsRPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    put:
      operationId: GroupsRPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
    delete:
      operationId: GroupsRPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups activities
  /groups/{groupType}/{groupId}/analysis/network:
    get:
      operationId: GroupsNetworkAnalysis_Get
      summary: Get a group analysis
      description: Returns an object with group analysis data.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT analysis
  /groups/{groupType}/{groupId}/analysis/network/export:
    post:
      operationId: GroupsNetworkAnalysis_Export
      summary: Export analysis for a specific group
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/analysis/network/export/csv/{exportId}:
    get:
      operationId: GroupsNetworkAnalysisExport_Get
      summary: Download analysis export for a specific group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/ancestors:
    get:
      operationId: GroupMemberOf_Get
      summary: Get a groups ancestors
      description: Returns a list of groups the group is a member of.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/ancestors/candidates:
    get:
      operationId: GroupMemberOfGroupCandidates_Get
      summary: Get candidates for adding the group to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit:
    get:
      operationId: GroupAudit_Get
      summary: Get a groups audits
      description: Returns a list of audits for the group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/export:
    post:
      operationId: groupsAudit_Export
      summary: Export groups audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/export/csv/{exportId}:
    get:
      operationId: GroupsAuditExport_Get
      summary: Download groups audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/filters:
    get:
      operationId: GroupsAuditsFilters_List
      summary: List Audit Filters for a specific Group
      description: Returns a list of filters for Audit events for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets:
    get:
      operationId: Groups-ManagedAssets_List
      summary: Get managed assets
      description: Get managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: Groups-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: Groups-ManagedAssets_Update
      summary: Update a managed assets
      description: Update a managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: managed asset to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsUpdateBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets/{groupOrAssetId}:
    delete:
      operationId: Groups-ManagedAssets_Delete
      summary: Remove asset manager
      description: Remove managed asset of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets/candidates:
    get:
      operationId: Groups-ManagedAssetsCandidates_List
      summary: Get asset manager candidates
      description: Get asset candidates to be managed by group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers:
    get:
      operationId: Groups-AssetManagers_List
      summary: Get managers of group
      description: Get asset managers of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsAssetManagers_Add
      summary: Add asset manager of group
      description: Add an asset manager of a group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsAssetManagers_Update
      summary: Update manager of a group
      description: Update an asset manager of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers/{groupOrUserId}:
    delete:
      operationId: Groups-AssetManagers_Delete
      summary: Remove asset manager
      description: Remove asset manager of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers/candidates:
    get:
      operationId: Groups-AssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for group managers
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies:
    get:
      operationId: GroupsExternalAccessPolicy_List
      summary: List External Access policies for a group
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsExternalAccessPolicy_Create
      summary: Create an external access policy for a group
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/{policyId}:
    get:
      operationId: GroupsExternalAccessPolicy_Get
      summary: Get an External Access policy for a group
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsExternalAccessPolicy_Update
      summary: Update an External Access policy for a group
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsExternalAccessPolicy_Delete
      summary: Delete an External Access policy for a group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: GroupsExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for a group
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters:
    get:
      operationId: GroupsExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for a group
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: GroupsExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for a group
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: GroupsExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for a group
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: GroupsExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for a group
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/statistics:
    get:
      operationId: GroupsExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for a group
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity-rules:
    get:
      operationId: GroupsIdentityRules_List
      summary: Groups List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsIdentityRules_Create
      summary: Groups Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/{ruleId}:
    get:
      operationId: GroupsIdentityRules_Get
      summary: Groups Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsIdentityRules_Update
      summary: Groups Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsIdentityRules_Delete
      summary: Groups Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/asset-candidates:
    get:
      operationId: GroupsIdentityRulesAssetsCandidates_List
      summary: Groups List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: GroupsIdentityRulesExcludedAssetsCandidates_List
      summary: Groups List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded Assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/export:
    post:
      operationId: GroupsIdentityRules_Export
      summary: Groups Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: GroupsIdentityRulesExport_Get
      summary: Groups Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters:
    get:
      operationId: GroupsIdentityRulesFilters_List
      summary: Groups List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: GroupsIdentityRulesAssetsCandidatesFilters_List
      summary: Groups List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: GroupsIdentityRulesUserCandidatesFilters_List
      summary: Groups List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/user-candidates:
    get:
      operationId: GroupsIdentityRulesUserCandidates_List
      summary: Groups List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies:
    get:
      operationId: GroupsMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: GroupsMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/export:
    post:
      operationId: GroupsMFAIdentityPolicies_Export
      summary: Export Identity MFA Policies
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/export/csv/{exportId}:
    get:
      operationId: GroupsMFAIdentityPoliciesExport_Get
      summary: Download Identity MFA Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters:
    get:
      operationId: GroupsMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: GroupsMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound:
    get:
      operationId: GroupsMFAInboundPolicies_List
      summary: Groups List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsMFAInboundPolicies_Create
      summary: Groups Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: GroupsMFAInboundPolicies_Get
      summary: Groups Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsMFAInboundPolicies_Update
      summary: Groups Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsMFAInboundPolicies_Delete
      summary: Groups Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidates_List
      summary: Groups Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: GroupsMFAInboundPoliciesFilters_List
      summary: Groups List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Groups List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: GroupsMFAInboundPoliciesMFAMethods_List
      summary: Groups List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: GroupsMFAInboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidates_List
      summary: Groups List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceUserCandidates_List
      summary: Groups List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound:
    get:
      operationId: GroupsMFAOutboundPolicies_List
      summary: Groups List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsMFAOutboundPolicies_Create
      summary: Groups Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: GroupsMFAOutboundPolicies_Get
      summary: Groups Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsMFAOutboundPolicies_Update
      summary: Groups Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsMFAOutboundPolicies_Delete
      summary: Groups Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidates_List
      summary: Groups List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: GroupsMFAOutboundPoliciesFilters_Get
      summary: Groups List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Groups Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: GroupsMFAOutboundPoliciesMFAMethods_List
      summary: Groups List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidates_List
      summary: Groups List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUserCandidates_List
      summary: Groups Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rpc-rules:
    get:
      operationId: GroupsRPCRules_List
      summary: Groups List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsRPCRules_Create
      summary: Groups Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: GroupsRPCRule_Get
      summary: Groups Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsRPCRule_Update
      summary: Groups Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsRPCRule_Delete
      summary: Groups Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: GroupsRPCRulesExcludedDestinationCandidates_List
      summary: Groups Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/export:
    post:
      operationId: GroupsRPCRules_Export
      summary: Groups Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: GroupsRPCRulesExport_Get
      summary: Download Groups RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters:
    get:
      operationId: GroupsRPCRulesFilters_List
      summary: Groups List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: GroupsRPCRulesDestinationCandidatesFilters_List
      summary: Groups List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: GroupsRPCRulesSourceCandidatesFilters_List
      summary: Groups Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: GroupsRPCRulesUserCandidatesFilters_List
      summary: Groups List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/local-candidates:
    get:
      operationId: GroupsRPCRulesDestinationCandidates_List
      summary: Groups List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: GroupsRPCRulesSourceCandidates_List
      summary: Groups List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/user-candidates:
    get:
      operationId: GroupsRPCRulesUserCandidates_List
      summary: Groups List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: GroupsRulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/history/{ruleId}:
    get:
      operationId: GroupsRulesHistory_Get
      summary: Get a historic version of an rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound:
    get:
      operationId: GroupsInboundRules_List
      summary: Groups List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsInboundRules_Create
      summary: Groups Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: GroupsInboundRule_Get
      summary: Groups Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsInboundRule_Update
      summary: Groups Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsInboundRule_Delete
      summary: Groups Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: GroupsInboundRulesExcludedDestinationCandidates_List
      summary: Groups Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/export:
    post:
      operationId: GroupsInboundRules_Export
      summary: Groups Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: GroupsInboundRulesExport_Get
      summary: Download groups Inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters:
    get:
      operationId: GroupsInboundRulesFilters_List
      summary: Groups List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: GroupsInboundRulesSourceCandidatesFilters_List
      summary: Groups Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: GroupsInboundRulesDestinationCandidatesFilters_List
      summary: Groups List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/local-candidates:
    get:
      operationId: GroupsInboundRulesDestinationCandidates_List
      summary: Groups List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: GroupsInboundRulesSourceCandidates_List
      summary: Groups List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: GroupsInboundRulesReview_ApproveWithChanges
      summary: Groups Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: GroupsInboundRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: GroupsInboundRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound:
    get:
      operationId: GroupsOutboundRules_List
      summary: Groups List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsOutboundRules_Create
      summary: Groups Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: GroupsOutboundRule_Get
      summary: Groups Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsOutboundRule_Update
      summary: Groups Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsOutboundRule_Delete
      summary: Groups Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: GroupsOutboundRulesExcludedSourceCandidates_List
      summary: Groups List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/export:
    post:
      operationId: GroupsOutboundRules_Export
      summary: Groups Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: GroupsOutboundRulesExport_Get
      summary: Download groups Outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters:
    get:
      operationId: GroupsOutboundRulesFilters_List
      summary: Groups List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: GroupsOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Groups List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: GroupsOutboundRulesSourceCandidatesFilters_List
      summary: Groups List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: GroupsOutboundRulesDestinationCandidatesFilters_List
      summary: Groups List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: GroupsOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for a group
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/local-candidates:
    get:
      operationId: GroupsOutboundRulesSourceCandidates_List
      summary: Groups List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: GroupsOutboundRulesDestinationCandidates_List
      summary: Groups List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: GroupsOutboundRulesReview_ApproveWithChanges
      summary: Groups Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: GroupsOutboundRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: GroupsOutboundRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/user-candidates:
    get:
      operationId: GroupsOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for a group
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound:
    get:
      operationId: GroupsInboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    post:
      operationId: GroupsInboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/{ruleId}:
    get:
      operationId: GroupsInboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    delete:
      operationId: GroupsInboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    put:
      operationId: GroupsInboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/excluded-local-candidates:
    get:
      operationId: GroupsInboundOTRulesExcludedDestinationCandidates_List
      summary: OT/IoT List Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for OT/IoT Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/export:
    post:
      operationId: GroupsInboundOTRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/export/csv/{exportId}:
    get:
      operationId: GroupsInboundOTRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/filters:
    get:
      operationId: GroupsInboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/filters/local-candidates:
    get:
      operationId: GroupsInboundOTRulesDestinationCandidatesFilters_List
      summary: List OT/IoT Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/filters/remote-candidates:
    get:
      operationId: GroupsInboundOTRulesSourceCandidatesFilters_List
      summary: Get OT/IoT Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/local-candidates:
    get:
      operationId: GroupsInboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/remote-candidates:
    get:
      operationId: GroupsInboundOTRulesSourceCandidates_List
      summary: List OT/IoT Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/inbound/user-candidates:
    get:
      operationId: GroupsInboundOTRulesUserCandidates_List
      summary: List Source Rules User Candidates for an group
      description: Returns a list of users candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound:
    get:
      operationId: GroupsOutboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    post:
      operationId: GroupsOutboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/{ruleId}:
    get:
      operationId: GroupsOutboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    delete:
      operationId: GroupsOutboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
    put:
      operationId: GroupsOutboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/otRuleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/excluded-local-candidates:
    get:
      operationId: GroupsOutboundOTRulesExcludedSourceCandidates_List
      summary: OT/IoT List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for OT/IoT Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/export:
    post:
      operationId: GroupsOutboundOTRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/export/csv/{exportId}:
    get:
      operationId: GroupsOutboundOTRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/filters:
    get:
      operationId: GroupsOutboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/filters/local-candidates:
    get:
      operationId: GroupsOutboundOTRulesSourceCandidatesFilters_List
      summary: List OT/IoT Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/filters/remote-candidates:
    get:
      operationId: GroupsOutboundOTRulesDestinationCandidatesFilters_List
      summary: Get OT/IoT Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/local-candidates:
    get:
      operationId: GroupsOutboundOTRulesSourceCandidates_List
      summary: List OT/IoT Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/protection/switch-rules/outbound/remote-candidates:
    get:
      operationId: GroupsOutboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Outbound Rules Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups protection
  /groups/{groupType}/{groupId}/successors:
    get:
      operationId: GroupsMembers_List
      summary: List Group members
      description: Returns a list of potential members for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/includeNestedMembersQueryParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/successors/filters:
    get:
      operationId: GroupSuccessorsFilters_List
      summary: Get groups successors filters
      description: Returns a list of filters for Group members.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/ad/export:
    post:
      operationId: ADGroups_Export
      summary: Export AD Groups
      description: export list of AD groups.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  /groups/ad/export/csv/{exportId}:
    get:
      operationId: ADGroupsExport_Get
      summary: Download Ad groups Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  /groups/custom:
    post:
      operationId: CustomGroups_Create
      summary: Create Custom Group
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customGroupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/{groupId}:
    put:
      operationId: CustomGroups_Update
      summary: Update Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customGroupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroups_Delete
      summary: Delete Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/member-candidates:
    get:
      operationId: CustomGroupsCandidates_List
      summary: List Custom Groups member candidates
      description: Returns a list of candidates for custom group membership.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/groupIdQueryParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/{groupId}/members:
    put:
      operationId: CustomGroupsMembers_Add
      summary: Add Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroupsMembers_Delete
      summary: Delete Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/statistics:
    get:
      operationId: GroupsStatistics_Get
      summary: Get Group statistics
      description: Returns an object with group statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/tag/{groupId}/members:
    put:
      operationId: TagGroupsMembers_Add
      summary: Add Tag Group members.
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: TagGroupsMembers_delete
      summary: Remove tag group members
      description: Remove tag group members by members id.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Tag Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Tag
  /groups/tag/member-candidates:
    get:
      operationId: TagGroupsCandidates_List
      summary: List Tag Groups member candidates
      description: Returns a list of candidates for tag group membership.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/groupIdQueryParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Tag
  /k8s/clusters:
    get:
      operationId: K8sClusters_List
      summary: List k8s clusters
      description: Returns a list of k8s clusters.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
    post:
      operationId: K8sClusters_Create
      summary: Create k8s cluster
      description: Returns a list of k8s cluster.
      requestBody:
        description: K8s cluster properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8sBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/clusters/{k8sClusterId}:
    get:
      operationId: K8sCluster_Get
      summary: Get a k8s cluster
      description: Returns a k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
    put:
      operationId: K8sCluster_Update
      summary: Update a k8s cluster
      description: Returns a k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      requestBody:
        description: K8s cluster properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/k8sBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
    delete:
      operationId: K8sCluster_Delete
      summary: Delete a k8s cluster
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/clusters/{k8sClusterId}/activities/network:
    get:
      operationId: K8sNetworkActivities_List
      summary: List Network Activities for K8s cluster
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: K8sNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value for K8s cluster
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/export:
    post:
      operationId: K8sNetworkActivities_Export
      summary: Export network activities for K8s cluster
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/export/csv/{exportId}:
    get:
      operationId: K8sNetworkActivitiesExport_Get
      summary: Download network activities export for K8s cluster
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/filters:
    get:
      operationId: K8sNetworkActivitiesFilters_List
      summary: Get network activity filters for K8s cluster
      description: Returns the filters that can be used for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/user-filters:
    get:
      operationId: K8sNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities for K8s cluster
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
    post:
      operationId: K8sNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities for K8s cluster
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/activities/network/user-filters/{filterId}:
    get:
      operationId: K8sNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities for K8s cluster
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
    put:
      operationId: K8sNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities for K8s cluster
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
    delete:
      operationId: K8sNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities for K8s cluster
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s Activities
  /k8s/clusters/{k8sClusterId}/applications:
    get:
      operationId: K8sClusterApplications_Get
      summary: Get a K8s applications
      description: Returns a list of applications for the K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/filters:
    get:
      operationId: K8sClusterApplicationsFilters_List
      summary: List Applications Filters for a K8s
      description: Returns a list of filters for applications for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/{applicationName}:
    get:
      operationId: K8sClusterApplication_Get
      summary: Get a K8s application
      description: Returns an application for the K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sApplicationNameParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/{applicationName}/namespaces:
    get:
      operationId: K8sClusterApplicationNamespaces_List
      summary: Get a k8s application namespaces
      description: Returns a list of namespaces for an application in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sApplicationNameParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespacesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/{applicationName}/namespaces/filters:
    get:
      operationId: K8sClusterApplicationNamespacesFilters_List
      summary: List Namepaces Filters for a K8s Cluster Application
      description: Returns a list of filters for namespaces for a K8s cluster application.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sApplicationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/{applicationName}/workloads:
    get:
      operationId: K8sClusterApplicationWorkloads_List
      summary: List a k8s cluster application workloads
      description: Returns a list of workloads for a application in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sApplicationNameParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/applications/{applicationName}/workloads/filters:
    get:
      operationId: K8sClusterApplicationWorkloadsFilters_List
      summary: List K8s Cluster Application Workloads filters
      description: Returns a list of filters for K8s Cluster Application Workloads.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sApplicationNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s applications
  /k8s/clusters/{k8sClusterId}/audit:
    get:
      operationId: K8sClusterAudit_Get
      summary: Get a K8s audits
      description: Returns a list of audits for the K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s audit
  /k8s/clusters/{k8sClusterId}/audit/export:
    post:
      operationId: K8sClusterAudit_Export
      summary: Export K8s audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s audit
  /k8s/clusters/{k8sClusterId}/audit/export/csv/{exportId}:
    get:
      operationId: K8sClusterAuditExport_Get
      summary: Download K8s audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s audit
  /k8s/clusters/{k8sClusterId}/audit/filters:
    get:
      operationId: K8sClusterAuditsFilters_List
      summary: List Audit Filters for a K8s
      description: Returns a list of filters for Audit events for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s audit
  /k8s/clusters/{k8sClusterId}/command:
    get:
      operationId: K8sClusterCommand_Get
      summary: Get the commands for a K8s cluster
      description: Returns the commands for a K8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sCommands'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/clusters/{k8sClusterId}/egress-ips:
    get:
      operationId: K8sClusterEgressIPs_Get
      summary: Lists the egress IPs for a K8s cluster
      description: Returns the egress IPs for a K8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sEgressIpList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/clusters/{k8sClusterId}/egress-ips/filters:
    get:
      operationId: K8sClusterEgressIPsFilters_List
      summary: List egress IPs Filters for a K8s
      description: Returns a list of filters for egress ips events for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/clusters/{k8sClusterId}/labels:
    get:
      operationId: K8sClusterLabels_Get
      summary: Get a K8s labels
      description: Returns a list of labels for the K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/filters:
    get:
      operationId: K8sClusterLabelsFilters_List
      summary: List Labels Filters for a K8s
      description: Returns a list of filters for labels for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}:
    get:
      operationId: K8sClusterLabel_Get
      summary: Get a K8s label
      description: Returns an label for the K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/namespaces:
    get:
      operationId: K8sClusterLabelNamespaces_List
      summary: Get a k8s label namespaces
      description: Returns a list of namespaces for an label in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespacesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/namespaces/filters:
    get:
      operationId: K8sClusterLabelNamespacesFilters_List
      summary: List Namepaces Filters for a K8s Cluster Label
      description: Returns a list of filters for namespaces for a K8s cluster label.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/nodes:
    get:
      operationId: K8sClusterLabelNodes_List
      summary: Get a k8s label nodes
      description: Returns a list of nodes for an label in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNodesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/nodes/filters:
    get:
      operationId: K8sClusterLabelNodesFilters_List
      summary: List Nodes Filters for a K8s Cluster Label
      description: Returns a list of filters for nodes for a K8s cluster label.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/workloads:
    get:
      operationId: K8sClusterLabelWorkloads_List
      summary: List a k8s cluster label workloads
      description: Returns a list of workloads for a label in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/labels/{label}/workloads/filters:
    get:
      operationId: K8sClusterLabelWorkloadsFilters_List
      summary: List K8s Cluster Label Workloads filters
      description: Returns a list of filters for K8s Cluster Label Workloads.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sLabelParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s labels
  /k8s/clusters/{k8sClusterId}/namespaces:
    get:
      operationId: K8sClusterNamespaces_List
      summary: Get a k8s cluster namespaces
      description: Returns a list of namespaces for the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespacesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}:
    get:
      operationId: K8sClusterNamespace_Get
      summary: Get a k8s cluster namespace
      description: Returns a list of namespaces for the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespaceEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network:
    get:
      operationId: K8sClusterNamespaceNetworkActivities_List
      summary: List Network Activities for K8s cluster namespace
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: K8sClusterNamespaceNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value for K8s cluster namespspace
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/export:
    post:
      operationId: K8sClusterNamespaceNetworkActivities_Export
      summary: Export network activities for K8s cluster namespace
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/export/csv/{exportId}:
    get:
      operationId: K8sClusterNamespaceNetworkActivitiesExport_Get
      summary: Download network activities export for K8s cluster
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/filters:
    get:
      operationId: K8sClusterNamespaceNetworkActivitiesFilters_List
      summary: Get network activity filters for K8s cluster namespace
      description: Returns the filters that can be used for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/user-filters:
    get:
      operationId: K8sClusterNamespaceNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities for K8s cluster namespace
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    post:
      operationId: K8sClusterNamespaceNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities for K8s cluster namespace
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/activities/network/user-filters/{filterId}:
    get:
      operationId: K8sClusterNamespaceNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities for K8s cluster namespace
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    put:
      operationId: K8sClusterNamespaceNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities for K8s cluster namespace
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    delete:
      operationId: K8sClusterNamespaceNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities for K8s cluster namespace
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/applications:
    get:
      operationId: K8sClusterNamespaceApplications_Get
      summary: Get a K8s namespace applications
      description: Returns a list of applications for the K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/applications/filters:
    get:
      operationId: K8sClusterNamespaceApplicationsFilters_List
      summary: List Applications Filters for a K8s namespace
      description: Returns a list of filters for applications for a K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s namespaces  
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/labels:
    get:
      operationId: K8sClusterNamespaceLabels_Get
      summary: Get a K8s labels for a namespace
      description: Returns a list of labels for the K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/labels/filters:
    get:
      operationId: K8sClusterNamespaceLabelsFilters_List
      summary: List Labels Filters for a K8s
      description: Returns a list of filters for labels for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/network-policies/inbound:
    get:
      operationId: K8sClusterNamespaceInboundNetworkPolicies_List
      summary: Get a k8s cluster namespace Inbound Network Policies
      description: Returns a list of network policies for a namespaces in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/network-policies/inbound/filters:
    get:
      operationId: K8sClusterNamespaceInboundNetworkPoliciesFilters_List
      summary: List K8s Cluster Namespace Inbound Network Policy Filters
      description: Returns a list of filters for K8s Cluster Namespace Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/network-policies/outbound:
    get:
      operationId: K8sClusterNamespaceOutboundNetworkPolicies_List
      summary: Get a k8s cluster namespace Outbound Network Policies
      description: Returns a list of network policies for a namespaces in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/network-policies/outbound/filters:
    get:
      operationId: K8sClusterNamespaceOutboundNetworkPoliciesFilters_List
      summary: List K8s Cluster Namespace Outbound Network Policy Filters
      description: Returns a list of filters for K8s Cluster Namespace Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/rules/inbound:
    get:
      operationId: K8sClusterNamespaceInboundRules_List
      summary: Get a k8s cluster namespace Inbound rules
      description: Returns a list of rules in the k8s cluster namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/rules/inbound/filters:
    get:
      operationId: K8sClusterNamespaceInboundRulesFilters_List
      summary: List K8s Cluster Namespace Inbound Rule Filters
      description: Returns a list of filters for K8s Cluster Namespace Rule.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespsaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/rules/outbound:
    get:
      operationId: K8sClusterNamespaceOutboundRules_List
      summary: Get a k8s cluster namespace Outbound rules
      description: Returns a list of rules in the k8s cluster namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/rules/outbound/filters:
    get:
      operationId: K8sClusterNamespaceOutboundRulesFilters_List
      summary: List K8s Cluster Namespace Outbound Rules Filters
      description: Returns a list of filters for K8s Cluster Namespace Rules.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/workloads:
    get:
      operationId: K8sClusterNamespaceWorkloads_List
      summary: List a k8s cluster namespace workloads
      description: Returns a list of workloads for a namespaces in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/namespaces/{k8sNamespaceId}/workloads/filters:
    get:
      operationId: K8sClusterNamespaceWorkloadsFilters_List
      summary: List K8s Cluster Namespace Workloads filters
      description: Returns a list of filters for K8s Cluster Namespace Workloads.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/network-policies/inbound:
    get:
      operationId: K8sClusterInboundNetworkPolicies_List
      summary: Get a k8s cluster Inbound Network Policies
      description: Returns a list of network policies in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s network policy
  /k8s/clusters/{k8sClusterId}/network-policies/inbound/filters:
    get:
      operationId: K8sClusterInboundNetworkPoliciesFilters_List
      summary: List K8s Cluster Inbound Network Policy Filters
      description: Returns a list of filters for K8s Cluster Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s network policy
  /k8s/clusters/{k8sClusterId}/network-policies/outbound:
    get:
      operationId: K8sClusterOutboundNetworkPolicies_List
      summary: Get a k8s cluster Outbound Network Policies
      description: Returns a list of network policies in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s network policy
  /k8s/clusters/{k8sClusterId}/network-policies/outbound/filters:
    get:
      operationId: K8sClusterOutboundNetworkPoliciesFilters_List
      summary: List K8s Cluster Outbound Network Policy Filters
      description: Returns a list of filters for K8s Cluster Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s network policy
  /k8s/clusters/{k8sClusterId}/namespaces/filters:
    get:
      operationId: K8sClusterNamespacesFilters_List
      summary: List K8s Cluster Namespace Filters
      description: Returns a list of filters for K8s Cluster Namespace.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/clusters/{k8sClusterId}/nodes:
    get:
      operationId: K8sClusterNodes_List
      summary: List a k8s cluster nodes
      description: Returns a list of nodes in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNodesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s nodes
  /k8s/clusters/{k8sClusterId}/nodes/filters:
    get:
      operationId: K8sClusterNodesFilters_List
      summary: List K8s Cluster Nodes filters
      description: Returns a list of filters for K8s Cluster Nodes.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s nodes
  /k8s/clusters/{k8sClusterId}/rules/inbound:
    get:
      operationId: K8sClusterInboundRules_List
      summary: Get a k8s cluster Inbound rules
      description: Returns a list of rules in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s rules
  /k8s/clusters/{k8sClusterId}/rules/inbound/filters:
    get:
      operationId: K8sClusterInboundRulesFilters_List
      summary: List K8s Cluster Inbound Rule Filters
      description: Returns a list of filters for K8s Cluster Rule.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s rules
  /k8s/clusters/{k8sClusterId}/rules/outbound:
    get:
      operationId: K8sClusterOutboundRules_List
      summary: Get a k8s cluster Outbound rules
      description: Returns a list of rules in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s rules
  /k8s/clusters/{k8sClusterId}/rules/outbound/filters:
    get:
      operationId: K8sClusterOutboundRulesFilters_List
      summary: List K8s Cluster Outbound Rules Filters
      description: Returns a list of filters for K8s Cluster Rules.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s rules
  /k8s/clusters/{k8sClusterId}/workloads:
    get:
      operationId: K8sClusterWorkloads_List
      summary: List a k8s cluster workloads
      description: Returns a list of workloads in the k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}:
    get:
      operationId: K8sClusterWorkload_Get
      summary: Get a k8s cluster workload
      description: Returns a workload for k8s cluster.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkload'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network:
    get:
      operationId: K8sClusterWorkloadNetworkActivities_List
      summary: List Network Activities for K8s cluster workload
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: K8sClusterWorkloadNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value for K8s cluster workload
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'

        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/export:
    post:
      operationId: K8sClusterWorkloadNetworkActivities_Export
      summary: Export network activities for K8s cluster workload
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/export/csv/{exportId}:
    get:
      operationId: K8sClusterWorkloadNetworkActivitiesExport_Get
      summary: Download network activities export for K8s cluster workload
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/filters:
    get:
      operationId: K8sClusterWorkloadNetworkActivitiesFilters_List
      summary: Get network activity filters for K8s cluster workload
      description: Returns the filters that can be used for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/user-filters:
    get:
      operationId: K8sClusterWorkloadNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities for K8s cluster workload
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
    post:
      operationId: K8sClusterWorkloadNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities for K8s cluster workload
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/activities/network/user-filters/{filterId}:
    get:
      operationId: K8sClusterWorkloadNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities for K8s cluster workload
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
    put:
      operationId: K8sClusterWorkloadNetworkActivitiesSavedFilters_Update
      summary: Update a Saved Filter for Network Activities for K8s cluster workload
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
    delete:
      operationId: K8sClusterWorkloadNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities for K8s cluster workload
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/applications:
    get:
      operationId: K8sClusterWorkloadApplications_List
      summary: Lists applications for a K8s cluster workload
      description: Returns a list of applications for the K8s cluster workload.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/applications/filters:
    get:
      operationId: K8sClusterWorkloadApplicationsFilters_List
      summary: List Applications Filters for a K8s cluster workload
      description: Returns a list of filters for applications for a K8s cluster workload.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s clusters  
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/labels:
    get:
      operationId: K8sClusterWorkloadLabels_Get
      summary: Lists labels for a K8s cluster workload
      description: Returns a list of labels for the K8s cluster workload.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads//{k8sWorkloadId}/labels/filters:
    get:
      operationId: K8sClusterWorkloadLabelsFilters_List
      summary: List Labels Filters for a K8s cluster workload
      description: Returns a list of filters for labels for a K8s cluster workload.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s clusters
  /k8s/clusters/{k8sClusterId}/workloads/filters:
    get:
      operationId: K8sClusterWorkloadsFilters_List
      summary: List K8s Cluster Workloads filters
      description: Returns a list of filters for K8s Cluster Workloads.
      parameters:
        - $ref: '#/components/parameters/k8sClusterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/clusters/filters:
    get:
      operationId: K8sFilters_List
      summary: List K8s Filters
      description: Returns a list of filters for K8s.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s
  /k8s/namespaces:
    get:
      operationId: K8sNamespaces_List
      summary: Get a k8s namespaces
      description: Returns a list of namespaces for the k8s.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespacesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}:
    get:
      operationId: K8sNamespace_Get
      summary: Get a k8s namespace
      description: Returns a list of namespaces for the k8s.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNamespaceEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network:
    get:
      operationId: K8sNamespaceNetworkActivities_List
      summary: List Network Activities for K8s namespace
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: K8sNamespaceNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value for K8s cluster
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/export:
    post:
      operationId: K8sNamespaceNetworkActivities_Export
      summary: Export network activities for K8s cluster
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/export/csv/{exportId}:
    get:
      operationId: K8sNamespaceNetworkActivitiesExport_Get
      summary: Download network activities export for K8s cluster
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/filters:
    get:
      operationId: K8sNamespaceNetworkActivitiesFilters_List
      summary: Get network activity filters for K8s cluster
      description: Returns the filters that can be used for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/user-filters:
    get:
      operationId: K8sNamespaceNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities for K8s cluster
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    post:
      operationId: K8sNamespaceNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities for K8s cluster
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/activities/network/user-filters/{filterId}:
    get:
      operationId: K8sNamespaceNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities for K8s cluster
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    put:
      operationId: K8sNamespaceNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities for K8s cluster
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
    delete:
      operationId: K8sNamespaceNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities for K8s cluster
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/applications:
    get:
      operationId: K8sNamespaceApplications_Get
      summary: Get a K8s namespace applications
      description: Returns a list of applications for the K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/applications/filters:
    get:
      operationId: K8sNamespaceApplicationsFilters_List
      summary: List Applications Filters for a K8s namespace
      description: Returns a list of filters for applications for a K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s namespaces  
  /k8s/namespaces/{k8sNamespaceId}/labels:
    get:
      operationId: K8sNamespaceLabels_Get
      summary: Get a K8s labels for a namespace
      description: Returns a list of labels for the K8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/labels/filters:
    get:
      operationId: K8sNamespaceLabelsFilters_List
      summary: List Labels Filters for a K8s
      description: Returns a list of filters for labels for a K8s.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/network-policies/inbound:
    get:
      operationId: K8sNamespaceInboundNetworkPolicies_List
      summary: Get a k8s namespace Inbound Network Policies
      description: Returns a list of network policies for a namespaces in the k8s.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/network-policies/inbound/filters:
    get:
      operationId: K8sNamespaceInboundNetworkPoliciesFilters_List
      summary: List K8s Namespace Inbound Network Policy Filters
      description: Returns a list of filters for K8s Namespace Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/network-policies/outbound:
    get:
      operationId: K8sNamespaceOutboundNetworkPolicies_List
      summary: Get a k8s namespace Outbound Network Policies
      description: Returns a list of network policies for a namespaces in the k8s.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sNetworkPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/network-policies/outbound/filters:
    get:
      operationId: K8sNamespaceOutboundNetworkPoliciesFilters_List
      summary: List K8s Namespace Outbound Network Policy Filters
      description: Returns a list of filters for K8s Namespace Network Polcy.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/rules/inbound:
    get:
      operationId: K8sNamespaceInboundRules_List
      summary: Get a k8s namespace Inbound rules
      description: Returns a list of rules in the k8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/rules/inbound/filters:
    get:
      operationId: K8NamespaceInboundRulesFilters_List
      summary: List K8s Namespace Inbound Rule Filters
      description: Returns a list of filters for K8s Namespace Rule.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/rules/outbound:
    get:
      operationId: K8sNamespaceOutboundRules_List
      summary: Get a k8s Namespace Outbound rules
      description: Returns a list of rules in the k8s namespace.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/rules/outbound/filters:
    get:
      operationId: K8sNamespaceOutboundRulesFilters_List
      summary: List K8s Namespace Outbound Rules Filters
      description: Returns a list of filters for K8s namespace Rules.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/workloads:
    get:
      operationId: K8sNamespaceWorkloads_List
      summary: List a k8s namespace workloads
      description: Returns a list of workloads for a namespaces in the k8s.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/{k8sNamespaceId}/workloads/filters:
    get:
      operationId: K8sNamespaceWorkloadsFilters_List
      summary: List K8s Namespace Workloads filters
      description: Returns a list of filters for K8s Namespace Workloads.
      parameters:
        - $ref: '#/components/parameters/k8sNamespaceIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/namespaces/filters:
    get:
      operationId: K8sNamespacesFilters_List
      summary: List K8s Namespaces Filters
      description: Returns a list of filters for K8s Namespaces.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s namespaces
  /k8s/workloads:
    get:
      operationId: K8sWorkloads_List
      summary: List a k8s workloads
      description: Returns a list of workloads for k8s.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showPodlessWorkloadsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}:
    get:
      operationId: K8sWorkload_Get
      summary: Get a k8s workload
      description: Returns a workload for k8s.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sWorkloadEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network:
    get:
      operationId: K8sWorkloadNetworkActivities_List
      summary: List Network Activities for K8s workload
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: K8sWorkloadNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value for K8s workload
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/export:
    post:
      operationId: K8sWorkloadNetworkActivities_Export
      summary: Export network activities for K8s workload
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/export/csv/{exportId}:
    get:
      operationId: K8sWorkloadNetworkActivitiesExport_Get
      summary: Download network activities export for K8s workload
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/filters:
    get:
      operationId: K8sWorkloadNetworkActivitiesFilters_List
      summary: Get network activity filters for K8s workload
      description: Returns the filters that can be used for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/user-filters:
    get:
      operationId: K8sWorkloadNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities for K8s workload
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
    post:
      operationId: K8sWorkloadNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities for K8s workload
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/activities/network/user-filters/{filterId}:
    get:
      operationId: K8sWorkloadNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities for K8s workload
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
    put:
      operationId: K8sWorkloadNetworkActivitiesSavedFilters_Update
      summary: Update a Saved Filter for Network Activities for K8s workload
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
    delete:
      operationId: K8sWorkloadNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities for K8s workload
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/applications:
    get:
      operationId: K8sWorkloadApplications_List
      summary: Lists applications for a K8s workload
      description: Returns a list of applications for the K8s workload.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sApplicationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/applications/filters:
    get:
      operationId: K8sWorkloadApplicationsFilters_List
      summary: List Applications Filters for a K8s workload
      description: Returns a list of filters for applications for a K8s workload.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s workloads  
  /k8s/workloads/{k8sWorkloadId}/labels:
    get:
      operationId: K8sWorkloadLabels_Get
      summary: Lists labels for a K8s workload
      description: Returns a list of labels for the K8s workload.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/k8sLabelsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/{k8sWorkloadId}/labels/filters:
    get:
      operationId: K8sWorkloadLabelsFilters_List
      summary: List Labels Filters for a K8s workload
      description: Returns a list of filters for labels for a K8s workload.
      parameters:
        - $ref: '#/components/parameters/k8sWorkloadIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /k8s/workloads/filters:
    get:
      operationId: K8sWorkloadsFilters_List
      summary: List K8s Workloads filters
      description: Returns a list of filters for K8s Workloads.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - K8s workloads
  /profile:
    get:
      operationId: Profile_Get
      description: Returns user profile
      summary: Get user provilde
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Profile
  /profile/environments:
    get:
      description: Get Environment Profile
      operationId: Profile_GetEnvironments
      tags:
        - Profile
      summary: Get all environments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  environments:
                    type: array
                    items:
                      type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /protection-policies/identity:
    get:
      operationId: IdentityOnboardingPolicies_List
      summary: List identity onboarding policies
      description: Returns a list of identity onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    post:
      operationId: IdentityOnboardingPolicies_Create
      summary: Add identity onboarding policy
      description: Returns the identity onboarding policy that was created.
      requestBody:
        description: Identity onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/{protectionPolicyId}:
    delete:
      operationId: IdentityOnboardingPolicies_Delete
      summary: Remove identity onboarding policy
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    put:
      operationId: IdentityOnboardingPolicies_Update
      summary: Update identity onboarding policy
      description: Returns the updated settings for the identity onboarding policy.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      requestBody:
        description: Identity onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/group-candidates:
    get:
      operationId: IdentityOnboardingPoliciesGroupCandidates_List
      summary: Get groups for identity onboarding policy
      description: Returns a list of candidates for identity onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/overriding-candidates:
    get:
      operationId: IdentityOverridingOnboardingPoliciesGroupCandidates_List
      summary: Get groups for identity overriding onboarding policy
      description: Returns a list of candidates for identity overriding onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/overriding/members:
    post:
      operationId: IdentityOverridingOnboardingPolicy_Set
      summary: Set groups for identity overriding onboarding policy
      description: Returns an empty object.
      requestBody:
        description: Identity overriding onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/overridingProtectionPolicyBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    delete:
      operationId: IdentityOverridingOnboardingPolicy_Delete
      summary: Detele groups for identity overriding onboarding policy
      description: Returns an empty object.
      requestBody:
        description: Identity overriding onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/overridingProtectionPolicyBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/learning-config:
    get:
      operationId: OnboardingPolicyLearningConfig_Get
      summary: Get Learning Config
      description: Get Learning Config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /protection-policies/network:
    get:
      operationId: NetworkOnboardingPolicies_List
      summary: List network onboarding policies
      description: Returns a list of network onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    post:
      operationId: NetworkOnboardingPolicies_Create
      summary: Add network onboarding policy
      description: Returns the network onboarding policy that was created.
      requestBody:
        description: Network onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/{protectionPolicyId}:
    delete:
      operationId: NetworkOnboardingPolicies_Delete
      summary: Remove network onboarding policy
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    put:
      operationId: NetworkOnboardingPolicies_Update
      summary: Update network onboarding policy
      description: Returns the updated settings for the network onboarding policy.
      parameters:
        - $ref: '#/components/parameters/protectionPolicyIdParameter'
      requestBody:
        description: Network onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/group-candidates:
    get:
      operationId: NetworkOnboardingPoliciesGroupCandidates_List
      summary: Get candidates for Network onboarding Policies.
      description: Returns a list of candidates for a network onboarding policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/overriding-candidates:
    get:
      operationId: NetworkOverridingOnboardingPoliciesGroupCandidates_List
      summary: Get groups for network overriding onboarding policy
      description: Returns a list of candidates for network overriding onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/overriding/members:
    post:
      operationId: NetworkOverridingOnboardingPolicy_Set
      summary: Set groups for Network overriding onboarding policy
      description: Returns an empty object.
      requestBody:
        description: Network overriding onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/overridingProtectionPolicyBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    delete:
      operationId: NetworkOverridingOnboardingPolicy_Delete
      summary: Detele groups for network overriding onboarding policy
      description: Returns an empty object.
      requestBody:
        description: Network overriding onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/overridingProtectionPolicyBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection/{assetId}/simulate-access:
    post:
      operationId: SimulateSegmentation_Generate
      summary: Run simulate segmentation for an asset
      description: Returns the result of the segmentation simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Access simulation properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/simulateAccessBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulateAccess'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Simulate Segmentation
  /protection/ae-exclusions/inbound:
    get:
      operationId: AEExclusionsInbound_List
      summary: List Automation Engine Inbound exclusions
      description: Returns a list of AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    post:
      operationId: AEExclusionsInbound_Create
      summary: Create AE Exclusion Inbound
      description: Returns the properties of the created AE Exclusion.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aeExclusionRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/{ruleId}:
    get:
      operationId: AEExclusionsInbound_Get
      summary: Get AE Exclusion
      description: Returns the properties of the update AE exclusion.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    delete:
      operationId: AEExclusionsInbound_Delete
      summary: Delete Automation Engine Inbound exclusions
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    put:
      operationId: AEExclusionsInbound_Update
      summary: Update AE Exclusion
      description: Returns the properties of the update AE exclusion.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aeExclusionRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/export:
    post:
      operationId: AEExclusionsInbound_Export
      summary: Export Automation Engine Inbound exclusions
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/export/csv/{exportId}:
    get:
      operationId: AEExclusionsInboundExport_Get
      summary: Download Automation Engine Exclusions Inbound Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters:
    get:
      operationId: AEExclusionsInboundFilters_List
      summary: List Automation Engine Exclusions Inbound Filters
      description: Returns a list of filters for AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters/local-candidates:
    get:
      operationId: AEExclusionsInboundDestinationCandidatesFilters_List
      summary: List Automation Engine Exclusions Inbound Destination Candidates Filters
      description: Returns a list of filters for destination candidates for AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters/remote-candidates:
    get:
      operationId: AEExclusionsInboundSourceCandidatesFilters_List
      summary: Get Automation Engine Exclusions Inbound Source Candidates Filters
      description: Returns a list of filters for source candidates AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/local-candidates:
    get:
      operationId: AEExclusionsInboundDestinationCandidates_List
      summary: List Inbound AE Exclusion Destination Candidates
      description: Returns a list of destination candidates for AE Exclusion rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/remote-candidates:
    get:
      operationId: AEExclusionsInboundSourceCandidates_List
      summary: List Inbound AE Exclusions Candidates
      description: Returns a list of source candidates for AE Exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound:
    get:
      operationId: AEExclusionsOutbound_List
      summary: List Automation Engine Outbound exclusions
      description: Returns a list of AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    post:
      operationId: AEExclusionsOutbound_Create
      summary: Create AE Exclusion Outbound
      description: Returns the properties of the created AE Exclusion.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aeExclusionRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/{ruleId}:
    get:
      operationId: AEExclusionsOutbound_Get
      summary: Get AE Exclusion
      description: Returns the properties of the update AE exclusion.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    delete:
      operationId: AEExclusionsOutbound_Delete
      summary: Delete Automation Engine Outbound exclusions
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
    put:
      operationId: AEExclusionsOutbound_Update
      summary: Update AE Exclusion
      description: Returns the properties of the update AE exclusion.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aeExclusionRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/export:
    post:
      operationId: AEExclusionsOutbound_Export
      summary: Export Automation Engine Outbound exclusions
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/export/csv/{exportId}:
    get:
      operationId: AEExclusionsOutboundExport_Get
      summary: Download Automation Engine Exclusions Outbound Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters:
    get:
      operationId: AEExclusionsOutboundFilters_List
      summary: List Automation Engine Exclusions Outbound Filters
      description: Returns a list of filters for AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters/local-candidates:
    get:
      operationId: AEExclusionsOutboundSourceCandidatesFilters_List
      summary: List Automation Engine Exclusions Outbound Source Candidates Filters
      description: Returns a list of filters for source candidates for AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters/remote-candidates:
    get:
      operationId: AEExclusionsOutboundDestinationCandidatesFilters_List
      summary: Get Automation Engine Exclusions Outbound Destination Candidates Filters
      description: Returns a list of filters for destination candidates AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/local-candidates:
    get:
      operationId: AEExclusionsOutboundSourceCandidates_List
      summary: List Outbound AE Exclusion Source Candidates
      description: Returns a list of source candidates for AE Exclusion rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/remote-candidates:
    get:
      operationId: AEExclusionsOutboundDestinationCandidates_List
      summary: List Outbound AE Exclusions Destination Candidates
      description: Returns a list of destination candidates for AE Exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/user-candidates:
    get:
      operationId: AEExclusionsOutboundUserCandidates_List
      summary: List Outbound AE Exclusions User Candidates
      description: Returns a list of users candidates for Outbound AE Exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/external-access-policies:
    get:
      operationId: ExternalAccessPolicy_List
      summary: List External Access policies
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    post:
      operationId: ExternalAccessPolicy_Create
      summary: Create an external access policy
      description: Returns a the external access policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/{policyId}:
    get:
      operationId: ExternalAccessPolicy_Get
      summary: Get an External Access policy
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    put:
      operationId: ExternalAccessPolicy_Update
      summary: Update an External Access policy
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    delete:
      operationId: ExternalAccessPolicy_Delete
      summary: Delete an External Access policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: ExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters:
    get:
      operationId: ExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters
      description: Returns a list of filters for external access policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: ExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: ExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/src-users-candidates:
    get:
      operationId: ExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/statistics:
    get:
      operationId: ExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics
      description: Returns statistics for an external access policy.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/identity-rules:
    get:
      operationId: IdentityRules_List
      summary: List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    post:
      operationId: IdentityRules_Create
      summary: Create an Identity Rule
      description: Returns a the identity segmentation rule.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/{ruleId}:
    get:
      operationId: IdentityRules_Get
      summary: Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    put:
      operationId: IdentityRules_Update
      summary: Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    delete:
      operationId: IdentityRules_Delete
      summary: Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/asset-candidates:
    get:
      operationId: IdentityRulesAssetsCandidates_List
      summary: List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: IdentityRulesExcludedAssetsCandidates_List
      summary: List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/export:
    post:
      operationId: IdentityRules_Export
      summary: Export Identity Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: IdentityRulesExport_Get
      summary: Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters:
    get:
      operationId: IdentityRulesFilters_List
      summary: List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters/asset-candidates:
    get:
      operationId: IdentityRulesAssetsCandidatesFilters_List
      summary: List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters/user-candidates:
    get:
      operationId: IdentityRulesUserCandidatesFilters_List
      summary: List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/user-candidates:
    get:
      operationId: IdentityRulesUserCandidates_List
      summary: List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity/reactive-policies:
    get:
      operationId: MFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    post:
      operationId: MFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: MFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    put:
      operationId: MFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    delete:
      operationId: MFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/export:
    post:
      operationId: MFAIdentityPolicies_Export
      summary: Export Identity MFA Policies
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/export/csv/{exportId}:
    get:
      operationId: MFAIdentityPoliciesExport_Get
      summary: Download Identity MFA Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters:
    get:
      operationId: MFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: MFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/switch-rules/inbound:
    get:
      operationId: InboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
    post:
      operationId: InboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/{ruleId}:
    get:
      operationId: InboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
    delete:
      operationId: InboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
    put:
      operationId: InboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/excluded-local-candidates:
    get:
      operationId: InboundOTRulesExcludedDestinationCandidates_List
      summary: OT/IoT List Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for OT/IoT Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/export:
    post:
      operationId: InboundOTRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/export/csv/{exportId}:
    get:
      operationId: InboundOTRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/filters:
    get:
      operationId: InboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/filters/local-candidates:
    get:
      operationId: InboundOTRulesDestinationCandidatesFilters_List
      summary: List OT/IoT Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/filters/remote-candidates:
    get:
      operationId: InboundOTRulesSourceCandidatesFilters_List
      summary: Get OT/IoT Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/local-candidates:
    get:
      operationId: InboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/remote-candidates:
    get:
      operationId: InboundOTRulesSourceCandidates_List
      summary: List OT/IoT Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/inbound/user-candidates:
    get:
      operationId: InboundOTRulesUserCandidates_List
      summary: List Source Rules User Candidates
      description: Returns a list of users candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Inbound
  /protection/switch-rules/outbound:
    get:
      operationId: OutboundOTRules_List
      summary: List OT/IOT rules
      description: Returns a list of OT/IoT rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
    post:
      operationId: OutboundOTRules_Create
      summary: Create an OT/IoT rule
      description: creates an OT/IoT rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/{ruleId}:
    get:
      operationId: OutboundOTRules_Get
      summary: Get an OT/IoT Rule
      description: get an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
    delete:
      operationId: OutboundOTRules_Delete
      summary: Deletes an OT/IoT rule
      description: deletes an OT/IoT rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
    put:
      operationId: OutboundOTRules_Update
      summary: Update an OT/IoT Rule
      description: updates an OT/IoT Rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/excluded-local-candidates:
    get:
      operationId: OutboundOTRulesExcludedSourceCandidates_List
      summary: OT/IoT List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for OT/IoT Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/export:
    post:
      operationId: OutboundOTRules_Export
      summary: Export OT/IoT Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/export/csv/{exportId}:
    get:
      operationId: OutboundOTRulesExport_Get
      summary: Download OT/IoT Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/filters:
    get:
      operationId: OutboundOTRulesFilters_List
      summary: List OT/IoT Rules Filters
      description: Returns a list of filters for OT/IoT Rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/filters/local-candidates:
    get:
      operationId: OutboundOTRulesSourceCandidatesFilters_List
      summary: List OT/IoT Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/filters/remote-candidates:
    get:
      operationId: OutboundOTRulesDestinationCandidatesFilters_List
      summary: Get OT/IoT Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/local-candidates:
    get:
      operationId: OutboundOTRulesSourceCandidates_List
      summary: List OT/IoT Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/switch-rules/outbound/remote-candidates:
    get:
      operationId: OutboundOTRulesDestinationCandidates_List
      summary: List OT/IoT Outbound Rules Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules OT/IoT Outbound
  /protection/reactive-policies/distribution:
    get:
      operationId: MFAPoliciesDistribution_List
      summary: MFA distribution
      description: Returns and object with MFA distribution.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  /protection/reactive-policies/inbound:
    get:
      operationId: MFAInboundPolicies_List
      summary: List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    post:
      operationId: MFAInboundPolicies_Create
      summary: Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: MFAInboundPolicies_Get
      summary: Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    put:
      operationId: MFAInboundPolicies_Update
      summary: Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    delete:
      operationId: MFAInboundPolicies_Delete
      summary: Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidates_List
      summary: Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: MFAInboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters:
    get:
      operationId: MFAInboundPoliciesFilters_List
      summary: List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidatesFilters_List
      summary: List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: MFAInboundPoliciesMFAMethods_List
      summary: List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate:
    get:
      operationId: MFAInboundPoliciesSimulate_Test
      summary: Simulate Inbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: MFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidates_List
      summary: List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUserCandidates_List
      summary: List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/outbound:
    get:
      operationId: MFAOutboundPolicies_List
      summary: List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    post:
      operationId: MFAOutboundPolicies_Create
      summary: Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: MFAOutboundPolicies_Get
      summary: Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    put:
      operationId: MFAOutboundPolicies_Update
      summary: Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    delete:
      operationId: MFAOutboundPolicies_Delete
      summary: Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidates_List
      summary: List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: MFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters:
    get:
      operationId: MFAOutboundPoliciesFilters_Get
      summary: List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: MFAOutboundPoliciesMFAMethods_List
      summary: List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate:
    get:
      operationId: MFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of outbound MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: Get Outbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: MFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Outbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: Get Outbound MFA Simulation Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidates_List
      summary: List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUserCandidates_List
      summary: Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/statistics:
    get:
      operationId: MFAPoliciesStatistics_List
      summary: Get MFA statistics
      description: Returns an object with MFA statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePoliciesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  /protection/rpc-rules:
    get:
      operationId: RPCRules_List
      summary: List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    post:
      operationId: RPCRules_Create
      summary: Create RPC Rule
      description: Returns the properties of the create RPC rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/{ruleId}:
    get:
      operationId: RPCRule_Get
      summary: Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    put:
      operationId: RPCRule_Update
      summary: Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    delete:
      operationId: RPCRule_Delete
      summary: Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: RPCRulesExcludedDestinationCandidates_List
      summary: Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/export:
    post:
      operationId: RPCRules_Export
      summary: Export RPC Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: RPCRulesExport_Get
      summary: Download RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters:
    get:
      operationId: RPCRulesFilters_List
      summary: List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/local-candidates:
    get:
      operationId: RPCRulesDestinationCandidatesFilters_List
      summary: List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: RPCRulesSourceCandidatesFilters_List
      summary: Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/user-candidates:
    get:
      operationId: RPCRulesUserCandidatesFilters_List
      summary: List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/local-candidates:
    get:
      operationId: RPCRulesDestinationCandidates_List
      summary: List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/remote-candidates:
    get:
      operationId: RPCRulesSourceCandidates_List
      summary: List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/user-candidates:
    get:
      operationId: RPCRulesUserCandidates_List
      summary: List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rules/distribution/{ruleId}:
    get:
      operationId: RulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/rules/history/{ruleId}:
    get:
      operationId: RulesHistory_Get
      summary: Get a historic version of an inbound rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/rules/inbound:
    get:
      operationId: InboundRules_List
      summary: List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    post:
      operationId: InboundRules_Create
      summary: Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/{ruleId}:
    get:
      operationId: InboundRule_Get
      summary: Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    put:
      operationId: InboundRule_Update
      summary: Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    delete:
      operationId: InboundRule_Delete
      summary: Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: InboundRulesExcludedDestinationCandidates_List
      summary: Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/export:
    post:
      operationId: InboundRules_Export
      summary: Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: InboundRulesExport_Get
      summary: Download Inbound Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters:
    get:
      operationId: InboundRulesFilters_List
      summary: List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters/local-candidates:
    get:
      operationId: InboundRulesDestinationCandidatesFilters_List
      summary: List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: InboundRulesSourceCandidatesFilters_List
      summary: Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/local-candidates:
    get:
      operationId: InboundRulesDestinationCandidates_List
      summary: List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/remote-candidates:
    get:
      operationId: InboundRulesSourceCandidates_List
      summary: List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: InboundRulesReview_ApproveWithChanges
      summary: Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: InboundRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: InboundRulesReview_Deny
      summary: Returns an empty response
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/outbound:
    get:
      operationId: OutboundRules_List
      summary: List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    post:
      operationId: OutboundRules_Create
      summary: Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/{ruleId}:
    get:
      operationId: OutboundRule_Get
      summary: Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    put:
      operationId: OutboundRule_Update
      summary: Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    delete:
      operationId: OutboundRule_Delete
      summary: Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: OutboundRulesExcludedSourceCandidates_List
      summary: List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/export:
    post:
      operationId: OutboundRules_Export
      summary: Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: OutboundRulesExport_Get
      summary: Download Outbound Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters:
    get:
      operationId: OutboundRulesFilters_List
      summary: List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: OutboundRulesExcludedSourceCandidatesFilters_List
      summary: List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/local-candidates:
    get:
      operationId: OutboundRulesSourceCandidatesFilters_List
      summary: List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: OutboundRulesDestinationCandidatesFilters_List
      summary: List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/user-candidates:
    get:
      operationId: OutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/local-candidates:
    get:
      operationId: OutboundRulesSourceCandidates_List
      summary: List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/remote-candidates:
    get:
      operationId: OutboundRulesDestinationCandidates_List
      summary: List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/user-candidates:
    get:
      operationId: OutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: OutboundRulesReview_ApproveWithChanges
      summary: Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: OutboundRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: OutboundRulesReview_Deny
      summary: Returns an empty response
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/statistics:
    get:
      operationId: RulesStatistics_Get
      summary: Get rules statistics
      description: Returns an object with rule statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /sessions:
    get:
      operationId: Sessions_List
      summary: List Connect sessions
      description: Returns a list of Connect sessions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /sessions/{sessionId}/revoke:
    post:
      operationId: Session_Revoke
      summary: Revoke a Connect session
      description: Revoke a Connect session.
      parameters:
        - $ref: '#/components/parameters/sessionIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /sessions/filters:
    get:
      operationId: SessionsFilters_List
      summary: List Sessions Filters
      description: Returns a list of filters for sessions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /settings/vault/cyberark:
    get:
      operationId: SettingsPAMCyberark_Get
      summary: Get CyberArk config
      description: Get CyberArk config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsCyberarkConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings PAM
    delete:
      operationId: SettingsPAMCyberark_Delete
      summary: Delete CyberArk config
      description: Delete CyberArk config
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings PAM
    put:
      operationId: SettingsPAMCyberark_Update
      summary: Set CyberArk config
      description: Set CyberArk config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsCyberarkConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsCyberarkConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings PAM
    post:
      operationId: SettingsPAMCyberarkConnection_Test
      summary: Test CyberArk connection
      description: test CyberArk connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsCyberarkConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsCyberarkConfigTest'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings PAM
  /settings/access-tokens:
    get:
      operationId: AccessTokens_List
      summary: Get all machine access tokens
      description: Get all machine access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
                x-examples:
                  example-1:
                    items:
                      - clientId: 'm:695d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
                        accessType: 2
                        name: asd
                        expiry: '2024-06-27T08:21:21.000Z'
                        issuedAt: '2022-06-27T08:21:21.000Z'
                        createdAt: '2022-06-27T08:21:21.000Z'
                      - clientId: 'm:89879dabe83936376121296e74123c9e3d2ec92f'
                        accessType: 2
                        name: test
                        expiry: '2024-06-26T15:49:10.000Z'
                        issuedAt: '2022-06-26T15:49:10.000Z'
                        createdAt: '2022-06-26T15:49:10.000Z'
                      - clientId: 'm:8ee92624445d106a06e346d0c0a41bbfa77e1446'
                        accessType: 2
                        name: TEST
                        expiry: '2024-06-26T15:49:05.000Z'
                        issuedAt: '2022-06-26T15:49:05.000Z'
                        createdAt: '2022-06-26T13:28:24.000Z'
                      - clientId: 'm:6a73f5b14aa8557c527a99ae601e648a9c56b504'
                        accessType: 2
                        name: asdf
                        expiry: '2024-06-26T12:13:08.000Z'
                        issuedAt: '2022-06-26T12:13:08.000Z'
                        createdAt: '2022-06-26T12:08:25.000Z'
                      - clientId: 'm:4a21e3d73c58bc0040cff93b508d361bef81a83f'
                        accessType: 2
                        name: fasdf
                        expiry: '2022-07-26T12:08:14.000Z'
                        issuedAt: '2022-06-26T12:08:14.000Z'
                        createdAt: '2022-06-23T16:53:01.000Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    post:
      operationId: AccessTokens_Create
      summary: Create machine access token
      description: Create machine access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/iso8601DateTimeUTC'
                accessType:
                  $ref: '#/components/schemas/accessTypeEnum'
              x-examples:
                example-1:
                  name: read only example
                  expiry: '2024-06-27T08:45:01.623Z'
                  accessType: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  /settings/access-tokens/{clientId}:
    put:
      operationId: AccessTokens_Regenerate
      summary: Regenerate machine access token
      description: Regenerate machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    delete:
      operationId: AccessTokens_Delete
      summary: Delete access token
      description: Remove machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  /settings/ai/rule-review:
    get:
      operationId: SettingsAiRuleReview_Get
      summary: Get Rules Review under AI Settings
      description: Get AI rules review settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AE Rules Review
    put:
      operationId: SettingsAiRuleReview_Update
      summary: Set Rule Review under AI Settings
      description: Update AI rule review settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAiRuleReview'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AE Rules Review
  /settings/anti-tampering:
    get:
      operationId: SettingsAntitampering_Get
      summary: Get anti-tampering cooldonw setting
      description: Get the anti-tampering settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAntitamper'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Antitampering
    put:
      operationId: SettingsAntitampering_Update
      summary: Set Antitampering cooldown setting
      description: Set the Antitampering settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAntitamperBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Antitampering
  /settings/applications-label:
    get:
      operationId: SettingsK8sApplicationsLabel_Get
      summary: Get K8s Application Label settings
      description: Get K8s application label settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsK8sApplicationsLabel'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings K8s Applications Label
    put:
      operationId: SettingsK8sApplicationsLabel_Update
      summary: Set K8s Application Label settings
      description: Set K8s application label settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsK8sApplicationsLabelBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings K8s Applications Label
  /settings/asset-management/active-directory:
    get:
      operationId: SettingsAD_Get
      summary: Get AD settings in Asset Management
      description: Get the AD settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    post:
      operationId: SettingsAD_Create
      summary: Add AD settings in Asset Management
      description: Set the AD settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}:
    put:
      operationId: SettingsAD_Update
      summary: Update AD Settings in Asset Management
      description: Update AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAD_Delete
      summary: Delete forest from AD Settings in Asset Management
      description: Delete AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/{domainId}/linux-config:
    put:
      operationId: SettingsAdLinux_Update
      summary: Create or Update Active Directory Linux Settings
      description: Adds or updates linux config for a domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdLinuxBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAdLinux_Delete
      summary: Remove Active Directory Linux Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/{domainId}/ou-configs:
    get:
      operationId: SettingsADOuConfigs_Get
      summary: Get ou configs
      description: Get ou user names of domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOuConfigs'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    post:
      operationId: SettingsADOuConfig_Create
      summary: Create ou config
      description: Add ou config to domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOuConfigs'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsADOuConfig_Update
      summary: Update ou config
      description: Updates ou config in domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOuConfigs'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsADOuConfig_Delete
      summary: Delete ou config
      description: Delete ou config from domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteOuConfigs'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/groups/linux:
    put:
      operationId: SettingsADLinuxAutomationGroups_Update
      summary: Update Linux Automation Groups for a Forest in Asset Management
      description: Update Linux_Rediscover Automation Groups for an AD forest setting.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdLinuxAutomationGroupsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/groups/windows:
    put:
      operationId: SettingsADWindowsAutomationGroups_Update
      summary: Update Windows Automation Groups for a Forest in Asset Management
      description: Update Windows Automation Groups for an AD forest setting.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdWindowsAutomationGroupsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/secondary:
    post:
      operationId: SettingsAdSecondary_Create
      summary: Add a secondary AD settings in Asset Management
      description: Add a secondary AD settings in Asset Management
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdSecondaryBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/secondary/{domainId}:
    delete:
      operationId: SettingsAdSecondary_Delete
      summary: Remove Secondary Active Directory Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAdSecondary_Update
      summary: Update a secondary AD settings in Asset Management
      description: Update a secondary AD settings in Asset Management
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdSecondaryBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/windows-monitored:
    get:
      operationId: SettingsADWindowsMonitoredCandidates_Get
      summary: List candidates for windows monitoring for an AD forest
      description: Returns a list of windows monitoring candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/linux-monitored:
    get:
      operationId: SettingsADLinuxMonitoredCandidates_Get
      summary: List candidates for linux monitoring for an AD forest
      description: Returns a list of linux monitoring candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/ou:
    get:
      operationId: SettingsADOUCandidates_Get
      summary: List candidates for OU config
      description: Returns a list of OU candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/domainParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchGroupsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/protected:
    get:
      operationId: SettingsADProtectedCandidates_Get
      summary: List candidates for protection for an AD forest
      description: Returns a list of protection candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/rediscover:
    put:
      operationId: AD_Rediscover
      summary: Rediscover monitored assets
      description: Rediscover monitored assets
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/sync-info:
    get:
      operationId: SettingsADSyncInfo_Get
      summary: Get AD sync info in Asset Management
      description: Get the AD sync info in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdSyncInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/ansible:
    get:
      operationId: SettingsAnsible_Get
      summary: Get Ansible settings in Asset Management
      description: Get the Ansible settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAnsible_Update
      summary: Set Ansible settings in Asset Management
      description: Get the Ansible settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAnsibleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/rediscover:
    put:
      operationId: Linux_Rediscover
      summary: Rediscover monitored assets from Linux
      description: Rediscover monitored assets from Ansible
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/setup:
    get:
      operationId: SettingsLinuxSetup_Get
      summary: Get linux setup settings in Asset Management
      description: Get the linux setup settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxSetup_Update
      summary: Set linux setup settings in Asset Management
      description: Update the linux setup settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxSetupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/user:
    get:
      operationId: SettingsLinuxUser_Get
      summary: Get linux user settings in Asset Management
      description: Get the linux user settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxUser_Update
      summary: Set linux user settings in Asset Management
      description: Update the linux user settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-managers:
    get:
      operationId: Settings-AssetManagers_List
      summary: Get asset managers summary
      description: List asset managers
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    post:
      operationId: Settings-AssetManagers_Add
      summary: Add asset managers
      description: Add asset manager to entity.
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAssetsManagersBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    delete:
      operationId: Settings-AssetManagers_Delete
      summary: Delete asset managers
      description: Remove asset managers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrAssetId'
                managerIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrUserId'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
  /settings/auth/session-ttl:
    get:
      operationId: SettingsAuthSessionTtl_Get
      summary: Get portal session timeout setting
      description: Get the portal session ttl settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionTtl'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
    put:
      operationId: SettingsAuthSessionTtl_Update
      summary: Set portal session timeout setting
      description: Set the portal security settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessionTtlBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
  /settings/auth/allowed-ips:
    get:
      operationId: SettingsAuthAllowedIps_Get
      summary: Get portal allowed ips setting
      description: Get the portal allowed ips settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allowedIps'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
    put:
      operationId: SettingsAuthAllowedIps_Update
      summary: Set portal allowed ips setting
      description: Set the allowed ips settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/allowedIpsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
  /settings/azure-ad/credentials:
    get:
      operationId: SettingsAAD_Get
      summary: Get Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAd'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAAD_Update
      summary: Set Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAdBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAAD_Delete
      summary: Remove Azure AD Settings
      description: Remove Azure AD Settings
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/azure-ad/resync:
    post:
      operationId: AzureAD_Resync
      summary: Resync Azure AD
      description: Resync Azure AD
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/claroty:
    get:
      operationId: SettingsClaroty_Get
      summary: Get Claroty Settings
      description: Get Claroty Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClaroty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/claroty/credentials:
    put:
      operationId: SettingsClaroty_Update
      summary: Update Claroty Settings
      description: Update Claroty Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClarotyBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsClaroty_Delete
      summary: Remove Claroty Settings
      description: Remove Claroty Settings
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/claroty/resync:
    post:
      operationId: Claroty_Resync
      summary: Resync Claroty
      description: Resync Claroty
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/break-glass:
    get:
      operationId: SettingsBreakGlass_Get
      summary: Get break glass settings
      description: Get break glass settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsBreakGlass'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
    put:
      operationId: SettingsBreakGlass_Update
      summary: Update break glass settings
      description: Update break glass settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsBreakGlassBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
  /settings/break-glass/mfa:
    get:
      operationId: SettingsBreakGlassMFA_Get
      summary: Get break glass MFA settings
      description: Get break glass MFA settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsBreakGlassMFA'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
    put:
      operationId: SettingsBreakGlassMFA_Update
      summary: Update break glass MFA settings
      description: Update break glass MFA settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsBreakGlassMFABody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
  /settings/break-glass/switches:
    get:
      operationId: SettingsBreakGlassSwitches_Get
      summary: Get break glass Switches settings
      description: Get break glass switches settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsBreakGlassSwitches'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
    put:
      operationId: SettingsBreakGlassSwitches_Update
      summary: Update break glass Switches settings
      description: Update break glass switches settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsBreakGlassSwitchesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
  /settings/cloud-connector/access-tokens:
    get:
      operationId: CloudConnectorAccessTokens_List
      summary: Get all cloud connector provisioning access tokens
      description: Get all cloud connector provisioning access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    post:
      operationId: CloudConnectorAccessTokens_Create
      summary: Create cloud connector provisioning access token
      description: Create cloud connector provisioning access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/iso8601DateTimeUTC'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: Cloud Connector test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  /settings/cloud-connector/access-tokens/{clientId}:
    put:
      operationId: CloudConnectorAccessTokens_Regenerate
      summary: Regenerate cloud connector provisioning access token
      description: Regenerate cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    delete:
      operationId: CloudConnectorAccessTokens_Delete
      summary: Delete cloud connector provisioning access token
      description: Delete cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  /settings/connect/client/auto-update:
    get:
      operationId: SettingsConnectClientAutoUpdate_Get
      summary: Get Connect client auto update settings
      description: Get Connect client auto update in Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsConnectClientAutoUpdate'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    put:
      operationId: SettingsConnectClientAutoUpdate_Update
      summary: Set Connect client auto update settings
      description: Set Connect client auto update settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsConnectClientAutoUpdateBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/regions:
    get:
      operationId: SettingsConnectRegions_List
      summary: List Connect Regions
      description: List Connect Regions in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectRegionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectRegions_Create
      summary: Create a Connect region
      description: Create a Connect region in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/regions/{regionId}:
    put:
      operationId: SettingsConnectRegion_Update
      summary: Update a Connect Region in Settings
      description: Update a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectRegion_Delete
      summary: Delete a Connect Region
      description: Delete a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers:
    get:
      operationId: SettingsConnectServers_List
      summary: List Connect Servers
      description: List Connect Servers in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectServersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/{connectServerId}:
    put:
      operationId: SettingsConnectServers_Update
      summary: Update Connect Server
      description: Update Connect Server in Settings
      parameters:
        - $ref: '#/components/parameters/connectServerIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectServerBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectServers_Delete
      summary: Delete Connect Server
      description: Delete Connect Server in Settings
      parameters:
        - $ref: '#/components/parameters/connectServerIdParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/access-token:
    post:
      operationId: ConnectServersInstallToken_Create
      summary: Create connect server installation token
      description: Returns an access token.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/filters:
    get:
      operationId: SettingsConnectServersFilters_List
      summary: List Connect Server filters
      description: List Connect Server filters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config:
    get:
      operationId: SettingsConnectUserAccessConfig_List
      summary: List Connect User Access Configurations
      description: List Connect User Access Configurations in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectUserAccessConfigList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectUserAccessConfig_Create
      summary: Create a Connect User Access Configuration
      description: Create a Connect User Access Configuration in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings Connect
  /settings/connect/user-access-config/{userAccessConfigId}:
    put:
      operationId: SettingsConnectUserAccessConfig_Update
      summary: Update a Connect User Access Configuration
      description: Update a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectUserAccessConfig_Delete
      summary: Delete a Connect User Access Configuration
      description: Delete a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/assets-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAssetsCandidates_List
      summary: Get user access configuration excluded assets candidates Candidates
      description: Returns a list of candidates for user access config excluded assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/destinations-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigDestinationsCandidates_List
      summary: Get user access configuration excluded destinations candidates Candidates
      description: Returns a list of candidates for user access config excluded destinations.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/excluded-assets-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigExcludedAssetsCandidates_List
      summary: Get user access configuration excluded assets candidates
      description: Returns a list of candidates for user access config excluded assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/excluded-users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigExcludedSourceUsersCandidates_List
      summary: Get user access configuration xxcluded source users candidates Candidates
      description: Returns a list of candidates for user access config excluded source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/regions-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAllowedRegionsCandidates_List
      summary: Get user access configuration allowed regions Candidates
      description: Returns a list of candidates for user access config allowed regions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectRegionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigSourceUsersCandidates_List
      summary: Get user access configuration source users candidates Candidates
      description: Returns a list of candidates for user access config source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/data-collection/activities:
    get:
      operationId: SettingsActivities_Get
      summary: Get Activities settings in Data Collection
      description: Get Activities settings in Data Collection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsActivities'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
    put:
      operationId: SettingsActivities_Update
      summary: Set Activities settings in Data Collection
      description: Update the Activities settings in Data Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsActivitiesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
  /settings/ai/day-two:
    get:
      operationId: SettingsDay2Automation_Get
      summary: Get Day 2 automation settings
      description: Get day 2 settings automation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsDay2Automation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AE Day-2 Automation
    put:
      operationId: SettingsDay2Automation_Update
      summary: Set Day 2 automation settings
      description: Set day 2 settings automation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsDay2AutomationBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AE Day-2 Automation
  /settings/domain/subdomains:
    get:
      operationId: SettingsDomains_List
      summary: Get Domains
      description: Get domains
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsDomains'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Domains
  /settings/entities-config:
    get:
      operationId: SettingsInactiveAssets_List
      summary: Get Inactive Assets Settings Configuration
      description: Get inactive assets settings configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inactiveAssetsConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Inactive Assets
    put:
      operationId: SettingsInactiveAssets_Update
      summary: Update Inactive Assets Settings Configuration
      description: Update inactive assets settings configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inactiveAssetsConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inactiveAssetsConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Inactive Assets
  /settings/events-receiver/configuration:
    get:
      operationId: SettingsSIEM_Get
      summary: List SIEM Configurations
      description: List SIEM Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsEventsReceiverConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
    delete:
      operationId: SettingsSIEM_Delete
      summary: Remove SIEM Settings
      description: Returns an empty object.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
  /settings/events-receiver/configuration/sync-status:
    get:
      operationId: SettingsSIEMSyncStatus_Get
      summary: Get SIEM Sync Status Configurations
      description: Get SIEM Sync Status Configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsEventsReceiverSyncStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
  /settings/events-receiver/configuration/{receiverType}:
    post:
      operationId: SettingsSIEM_Create
      summary: Create SIEM Configurations
      description: Create SIEM Configuration
      parameters:
        - $ref: '#/components/parameters/receiverTypeParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsEventsReceiverConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsEventsReceiverConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
    put:
      operationId: SettingsSIEM_Update
      summary: Update SIEM Configurations
      description: Update SIEM Configuration
      parameters:
        - $ref: '#/components/parameters/receiverTypeParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsEventsReceiverConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsEventsReceiverConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
  /settings/events-receiver/configuration/export/{receiverType}/data-structure/{siemEventType}:
    get:
      operationId: SettingsSIEMDataStructure_Get
      summary: Get SIEM Data Structure Configurations
      description: Get SIEM Data Structure Configuration
      parameters:
        - $ref: '#/components/parameters/receiverTypeParameter'
        - $ref: '#/components/parameters/siemEventTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Events Receiver
  /settings/ext-auth:
    get:
      operationId: SettingsPushNotifications_Get
      summary: Get Push Notifications Settings
      description: Get Push Notifications Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotificationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  /settings/ext-auth/{pushIdentityProviderId}:
    post:
      operationId: SettingsPushNotifications_Create
      summary: Create Push Notification in Settings.
      description: Create an push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificationsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotifications'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    put:
      operationId: SettingsPushNotifications_Update
      summary: Update Push Notification in Settings.
      description: Update a push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificationsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotifications'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    delete:
      operationId: SettingsPushNotifications_Delete
      summary: Remove Push Notifications Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  /settings/external-vpn:
    get:
      operationId: SettingsZpa_Get
      summary: Get ZTNA proxy settings in Integrations
      description: Get ZTNA proxy settings in Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsZpa'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZTNA proxy
    put:
      operationId: SettingsZpa_Update
      summary: Set ZTNA proxy settings in Integrations
      description: Set ZTNA proxy settings in Integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsZpaBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZTNA proxy
  /settings/firewall:
    get:
      operationId: SettingsFirewall_Get
      summary: List Firewall Settings
      description: Returns the properties of Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewall'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewall_Update
      summary: Update Firewall Settings
      description: Returns the properties of the updated Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/ignored-gpo-rules:
    get:
      operationId: SettingsFirewallIgnoredGPO_Get
      summary: List rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredGPO_Update
      summary: Update rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredGPOBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsFirewallProfiles:
    get:
      operationId: SettingsFirewallProfiles_Get
      summary: List firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallProfiles_Update
      summary: Update firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallProfilesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsIgnoredRules:
    get:
      operationId: SettingsFirewallIgnoredRules_Get
      summary: List rules ignored for anti-tampering in Firewall Settings
      description: Returns the properties of ignored rules for anti-tampering Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredRules_Update
      summary: Update rules ignored for anti-tampering in Firewall Settings
      description: Returns he properties of ignored rules for anti-tampering Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredRulesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/identity/logoff:
    get:
      operationId: SettingsIdentityLogoff_Get
      summary: Get Identity Logoff settings
      description: Get identity logoff settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdentityLogoff'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Logoff
    put:
      operationId: SettingsIdentityLogoff_Update
      summary: Set Identity Logoff settings
      description: Set Identity Logoff settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdentityLogoffBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Logoff
  /settings/identity-providers/default-application:
    get:
      operationId: SettingsDefaultApplication_Get
      summary: Get Default SSO Application settings in Identity Providers
      description: Get Default SSO Application settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpDefaultApplication'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    put:
      operationId: SettingsDefaultApplication_Update
      summary: Set Default SSO Application settings in Identity Providers
      description: Update the Default SSO Application settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpDefaultApplicationBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/identity-providers/saml:
    get:
      operationId: SettingsIdp_Get
      summary: List identity providers settings in Identity Providers
      description: Get identity provider settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    post:
      operationId: SettingsIdp_Create
      summary: Create identity provider settings in Identity Providers
      description: Create an identity provider settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/identity-providers/saml/{identityProviderId}:
    put:
      operationId: SettingsIdp_Update
      summary: Update identity provider settings in Identity Providers
      description: Update identity provider settings in Identity Providers
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    delete:
      operationId: SettingsIdp_Delete
      summary: Remove Identity Provider Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/inbound/privileged-ports:
    get:
      operationId: SettingsPrivilegedPorts_Get
      summary: Get Privileged Ports settings in Network segmentation
      description: Get Privileged Ports settings in Network segmentation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPrivilegedPorts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Privileged Ports
    put:
      operationId: SettingsPrivilegedPorts_Update
      summary: Set Privileged Ports settings in Network segmentation
      description: Set Privileged Ports settings in Network segmentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPrivilegedPortsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/jamf/credentials:
    get:
      operationId: SettingsJamfCredentials_Get
      summary: Get JAMF Credentials Settings
      description: Returns the properties for JAMF Credentials Settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsJamfCredentials_Update
      summary: Update JAMF credentials Settings
      description: Returns the updated properties of JAMF Credentials settings.
      requestBody:
        description: JAMF credentials property
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsJamfCredentialsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsJamfCredentials_Delete
      summary: Remove JAMF Credentials Settings
      description: Returns an empty object.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/learning-config:
    get:
      operationId: SettingsLearningConfig_Get
      summary: Get Learning Config settings in Network Segmentation
      description: Get Learning Config settings in Network Segmentation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
    put:
      operationId: SettingsLearningConfig_Update
      summary: Set Learning Config settings in Network Segmentation
      description: Update Learning Config settings in Network Segmentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLearningConfigBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
  /settings/learning-with-blocks/rules/inbound:
    get:
      operationId: SettingsLearningWithBlocksInbound_Get
      summary: Get inbound learning with blocks config setting
      description: Get the inbound learning with blocks config settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearnWithBlockInbound'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
    put:
      operationId: SettingsLearningWithBlocksInbound_Update
      summary: Set inbound learning with blocks config setting
      description: Set inbound learning with blocks config settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLearnWithBlockInboundBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
  /settings/maintenance-window:
    get:
      operationId: SettingsMaintenanceWindow_List
      summary: List maintenance windows
      description: Returns the maintenance windows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    post:
      operationId: SettingsMaintenanceWindow_Create
      summary: Create a maintenance window
      description: Returns the maintenance window properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/maintenanceWindowBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
  /settings/maintenance-window/{maintenanceWindowId}:
    get:
      operationId: SettingsMaintenanceWindow_Get
      summary: Get a maintenance window
      description: Returns the maintenance window properties
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItems'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    put:
      operationId: SettingsMaintenanceWindow_Update
      summary: Update a maintenance window
      description: Returns the maintenance window properties
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/maintenanceWindowBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    delete:
      operationId: SettingsMaintenanceWindow_Delete
      summary: Delete a maintenance window
      description: Returns an empty object
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
  /settings/notification:
    get:
      operationId: SettingsNotification_Get
      summary: Get Mail Notification Settings
      description: Returns the properties of the Mail Notification settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
    put:
      operationId: SettingsNotification_Update
      summary: Update Mail Notification Settings
      description: Returns the properties of the updated Mail Notifications settings.
      requestBody:
        description: Mail notification properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsNotificationBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
  /settings/occasional-mfa:
    get:
      operationId: SettingsMFACache_List
      summary: List MFA Cache Policies
      description: Returns a list of MFA Cache Policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
    post:
      operationId: SettingsMFACache_Create
      summary: Create MFA Cache Policy
      description: Creates a MFA Cache Policy.
      requestBody:
        description: MFA Cache Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaCacheBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/occasional-mfa/{entityId}:
    put:
      operationId: SettingsMFACache_Update
      summary: Update MFA Cache Policy
      description: Returns an MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/entityIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
    delete:
      operationId: SettingsMFACache_Delete
      summary: Deleted MFA Cache Policy
      description: deletes a MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/entityIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/occasional-mfa/candidates:
    get:
      operationId: SettingsMFACacheCandidates_List
      summary: Get candidates for MFA Cache policy.
      description: Returns a list of candidates for MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/portal/users:
    get:
      operationId: SettingsCustomUsers_List
      summary: List custom users
      description: Returns the custom users list
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
  /settings/portal/users/{customUserId}:
    delete:
      operationId: SettingsCustomUsers_Delete
      summary: Delete a custom user
      description: Returns empty object
      parameters:
        - $ref: '#/components/parameters/customUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
    patch:
      operationId: SettingsCustomUsers_Update
      summary: Update a custom user
      description: Returns empty object
      parameters:
        - $ref: '#/components/parameters/customUserIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsCustomerUserBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
  /settings/portal/users/invite:
    post:
      operationId: SettingsCustomUsersInvite_Notify
      summary: Invite a custom user
      description: Returns empty object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsCustomerUserInviteBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
  /settings/portal/users/{customUserId}/reinvite:
    post:
      operationId: SettingsCustomUsersReInvite_Notify
      summary: Reinvite a custom user
      description: Returns empty object
      parameters:
        - $ref: '#/components/parameters/customUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
  /settings/reactive-policy:
    get:
      operationId: SettingsMFADetection_Get
      summary: Get MFA Detection Settings
      description: Returns the properties of MFA detection settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFADetection_Update
      summary: Update MFA Detection Settings
      description: Returns the properties of the updated MFA detection settings.
      requestBody:
        description: MFA detection properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaDetectionBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/reactive-policy/auth:
    get:
      operationId: SettingsMFAAuthentication_Get
      summary: Get MFA authentication settings
      description: Returns the properties of MFA authentication settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaAuthenticationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFAAuthentication_Update
      summary: Update MFA Authentication Settings
      description: Returns an empty object.
      requestBody:
        description: MFA authentication properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaAuthenticationBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/roles:
    get:
      operationId: Roles_List
      summary: List Roles
      description: Returns list of Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/roles/{roleEntityId}:
    post:
      operationId: Roles_Create
      summary: Create Role
      description: Returns the properties of the added Role.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      requestBody:
        description: Role properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
    delete:
      operationId: Roles_Delete
      summary: Remove Role
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/roles/candidates:
    get:
      operationId: RolesCandidates_List
      summary: List Roles Candidates
      description: Returns list of candidates for Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/segment-connector/access-tokens:
    get:
      operationId: SegmentConnectorAccessTokens_List
      summary: Get all Segment connector access tokens
      description: Get all Segment connector access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
    post:
      operationId: SegmentConnectorAccessTokens_Create
      summary: Create Segment Connector access token
      description: Create Segment Connector access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/epochMillis'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
  /settings/segment-connector/access-tokens/{clientId}:
    put:
      operationId: SegmentConnectorAccessTokens_Regenerate
      summary: Regenerate Segment Connector access token
      description: Regenerate Segment onnector access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
    delete:
      operationId: SegmentConnectorAccessTokens_Delete
      summary: Delete Segment Connector access token
      description: Delete Segment Connector access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
  /settings/cmdb/access-tokens:
    get:
      operationId: CMDBAccessTokens_List
      summary: Get all CMDB access tokens
      description: Get all CMDB access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings CMDB
    post:
      operationId: CMDBAccessTokens_Create
      summary: Create CMDB access token
      description: Create CMDB access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/epochMillis'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: CMDB test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings CMDB
  /settings/snow/access-tokens/{clientId}:
    put:
      operationId: CMDBAccessTokens_Regenerate
      summary: Regenerate CMDB access token
      description: Regenerate CMDB access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings CMDB
    delete:
      operationId: CMDBAccessTokens_Delete
      summary: Delete CMDB access token
      description: Delete CMDB access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings CMDB
  /settings/subscriptions/licenses/{licenseType}:
    get:
      operationId: SettingsLicenses_Get
      summary: Get Subscription Licenses
      description: Get Subscription Licenses
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licensesConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
    put:
      operationId: SettingsLicenses_Update
      summary: Set Trial license
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenseConfigBody'
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /settings/subscriptions/licenses/export:
    post:
      operationId: SettingsLicenses_Export
      summary: Export license
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /settings/subscriptions/licenses/{licenseType}/in-use:
    get:
      operationId: SettingsLicensesInUse_Get
      summary: Returns list of licenses in use
      description: Returns a list of licenses in use
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licensesInUse'
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /settings/licenses/export/csv/{exportId}:
    get:
      operationId: SettingsLicensesExport_Get
      summary: Download licenses export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /settings/system/internal-subnets:
    get:
      operationId: SettingsInternalSubnets_Get
      summary: Get Internal Subnets settings in System
      description: Get Internal Subnets settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsInternalSubnets'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
    put:
      operationId: SettingsInternalSubnets_Update
      summary: Set Internal Subnets settings in System
      description: Update the Internal Subnets settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsInternalSubnetsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
  /settings/system/internal-subnets/client-subnets:
    get:
      operationId: SettingsClientSubnets_Get
      summary: Get Client Subnets settings in System
      description: Get Client Subnets settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClientSubnets'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
    put:
      operationId: SettingsClientSubnets_Update
      summary: Set Client Subnets settings in System
      description: Update the Client Subnets settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClientSubnetsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
  /settings/system/restricted/clients/trusted-external:
    get:
      operationId: SettingsClientsTrustedInternet_Get
      summary: Get Clients Trusted Internet settings in System
      description: Get Clients Trusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsClientsTrustedInternet_Update
      summary: Set Clients Trusted Internet settings in System
      description: Set Clients Trusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/clients/untrusted-external:
    get:
      operationId: SettingsClientsUntrustedInternet_Get
      summary: Get Clients Untrusted Internet settings in System
      description: Get Clients Untrusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsUntrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsClientsUntrustedInternet_Update
      summary: Set Clients Untrusted Internet settings in System
      description: Set Clients Untrusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsUntrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/servers/trusted-external:
    get:
      operationId: SettingsServersTrustedInternet_Get
      summary: Get Servers Trusted Internet settings in System
      description: Get Servers Trusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsServersTrustedInternet_Update
      summary: Set Servers Trusted Internet settings in System
      description: Set Servers Trusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/servers/untrusted-external:
    get:
      operationId: SettingsServersUntrustedInternet_Get
      summary: Get Servers Untrusted Internet settings in System
      description: Get Servers Untrusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsUntrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsServersUntrustedInternet_Update
      summary: Set Servers Untrusted Internet settings in System
      description: Set Servers Untrusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsUntrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/trusted-external:
    get:
      operationId: SettingsTrustedInternetAddress_Get
      summary: Get Trusted Internet addresses settings in System
      description: Get Trusted Internet addresses settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternetAddresses'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsTrustedInternetAddress_Update
      summary: Set  Trusted Internet addresses settings in System
      description: Set Trusted Internet addresses settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetAddressesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/segment-connector/update-recovery-config:
    get:
      operationId: SettingsSegmentConnector_Get
      summary: Get segment connector update recovery config
      description: Get segment connector update recovery config
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsSegmentConnectorUpdateRecoveryBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
    put:
      operationId: SettingsSegmentConnector_Update
      summary: Update segment connector update recovery config
      description: Update segment connector update recovery config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsSegmentConnectorUpdateRecoveryBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Connector
  /users:
    get:
      operationId: Users_List
      summary: List Users
      description: 'Returns a list of Users. Pass the returned ''nextCursor'' as the ''_cursor'' query param of the next request for batches, when the ''_offset'' param is not used.'
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/{userId}:
    get:
      operationId: User_Get
      summary: Get a user
      description: Returns the properties of an user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/actions/protect:
    post:
      operationId: UserIdentitySegment_Protect
      summary: Move user to identity segmentation.
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/actions/quarantine:
    put:
      operationId: UserQuarantine_Enable
      summary: Enable quarantine for a user
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Send an object with a quarantine boolean
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User actions
  /users/{userId}/actions/queue:
    post:
      operationId: UserIdentity_Queue
      summary: Queue user
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/actions/unprotect:
    post:
      operationId: UserIdentitySegment_Unprotect
      summary: Unprotect user
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon:
    get:
      operationId: UsersLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/distinctField/{fieldName}:
    get:
      operationId: UsersLogonActivitiesDistinctValues_List
      summary: List Logon Activities Distinct Values
      description: Returns a list of distinct values for a field in logon activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/export:
    post:
      operationId: UsersLogonActivities_Export
      summary: Export logon activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: UsersLogonActivitiesExport_Get
      summary: Download logon activities for a specific user export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/filters:
    get:
      operationId: UsersLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific user
      description: Returns the filters that can be used for logon activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/user-filters:
    get:
      operationId: UserLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: UserLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network:
    get:
      operationId: UsersNetworkActivities_List
      summary: List Network Activities for a specific user
      description: Returns a list of network activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/distinctField/{fieldName}:
    get:
      operationId: UsersNetworkActivitiesDistinctValues_List
      summary: List Network Activities Distinct Value
      description: Returns a list of distinct values for a field in network activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/fieldNameParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/fromParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesDistictValuesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/export:
    post:
      operationId: UsersNetworkActivities_Export
      summary: Export network activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/export/csv/{exportId}:
    get:
      operationId: UsersNetworkActivitiesExport_Get
      summary: Download network activities export for a specific user
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/filters:
    get:
      operationId: UsersNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific user
      description: Returns the filters that can be used for network activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/user-filters:
    get:
      operationId: UserNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/user-filters/{filterId}:
    get:
      operationId: UserNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/identity:
    get:
      operationId: UserIdentityAnalysis_Get
      summary: Get a user analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/eventTypeParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdentityAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/identity/export:
    post:
      operationId: UserIdentityAnalysis_Export
      summary: Export user analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/identity/export/csv/{exportId}:
    get:
      operationId: UserIdentityAnalysisExport_Get
      summary: Download user analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/network:
    get:
      operationId: UserNetworkAnalysis_Get
      summary: Get a user analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userNetworkAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/network/export:
    post:
      operationId: UserNetworkAnalysis_Export
      summary: Export user analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/network/export/csv/{exportId}:
    get:
      operationId: UserNetworkAnalysisExport_Get
      summary: Download user analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/ancestors:
    get:
      operationId: UserMemberOf_Get
      summary: Get a users ancestors
      description: Returns a list of groups the user is a member of.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/ancestors/candidates:
    get:
      operationId: UserMemberOfGroupCandidates_Get
      summary: Get candidates for adding the user to a group
      description: Returns a list of groups the user can be a member of.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit:
    get:
      operationId: UserAudit_Get
      summary: Get a users audits
      description: Returns a list of audits for the user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/export:
    post:
      operationId: UsersAudit_Export
      summary: Export users audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/filters:
    get:
      operationId: UsersAuditsFilters_List
      summary: List Audit Filters for a specific user
      description: Returns a list of filters for Audit events for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/export/csv/{exportId}:
    get:
      operationId: UsersAuditExport_Get
      summary: Download users audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/managed-assets:
    get:
      operationId: Users-ManagedAssets_List
      summary: Get managed assets
      description: get managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: Users-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: Users-ManagedAssets_Update
      summary: Update managed assets
      description: Update a managed asset for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Managed asset to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsUpdateBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/managed-assets/{groupOrAssetId}:
    delete:
      operationId: Users-ManagedAssets_Delete
      summary: Remove managed asset
      description: Remove managed asset of user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /users/{userId}/managed-assets/candidates:
    get:
      operationId: Users-ManagedAssetsCandidates_List
      summary: Get asset candidates
      description: Get asset candidates to be managed by asset managers
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies:
    get:
      operationId: UserExternalAccessPolicy_List
      summary: List External Access policies for a user
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserExternalAccessPolicy_Create
      summary: Create an external access policy for a user
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/{policyId}:
    get:
      operationId: UserExternalAccessPolicy_Get
      summary: Get an External Access policy for a user
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserExternalAccessPolicy_Update
      summary: Update an External Access policy for a user
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserExternalAccessPolicy_Delete
      summary: Delete an External Access policy for a user
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: UserExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for a user
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters:
    get:
      operationId: UserExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for a user
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: UserExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for a user
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: UserExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for a user
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: UserExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for a user
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/statistics:
    get:
      operationId: UserExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for a user
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules:
    get:
      operationId: UserIdentityRules_List
      summary: User List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserIdentityRules_Create
      summary: User Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/{ruleId}:
    get:
      operationId: UserIdentityRules_Get
      summary: User Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserIdentityRules_Update
      summary: User Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserIdentityRules_Delete
      summary: User Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/asset-candidates:
    get:
      operationId: UserIdentityRulesAssetsCandidates_List
      summary: User List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: UserIdentityRulesExcludedAssetsCandidates_List
      summary: User List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/export:
    post:
      operationId: UserIdentityRules_Export
      summary: User Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: UserIdentityRulesExport_Get
      summary: User Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters:
    get:
      operationId: UserIdentityRulesFilters_List
      summary: User List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: UserIdentityRulesAssetsCandidatesFilters_List
      summary: User List Identity Rules Filters Asset Candidates
      description: Returns a list of asset candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: UserIdentityRulesUserCandidatesFilters_List
      summary: User List Identity Rules Filters User Candidates
      description: Returns a list of users candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/user-candidates:
    get:
      operationId: UserIdentityRulesUserCandidates_List
      summary: User List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies:
    get:
      operationId: UserMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: UserMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/export:
    post:
      operationId: UsersMFAIdentityPolicies_Export
      summary: Export Identity MFA Policies
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/export/csv/{exportId}:
    get:
      operationId: UsersMFAIdentityPoliciesExport_Get
      summary: Download Identity MFA Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/filters:
    get:
      operationId: UserMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: UserMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/reactive-policies/inbound:
    get:
      operationId: UserMFAInboundPolicies_List
      summary: User List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    post:
      operationId: UserMFAInboundPolicies_Create
      summary: User Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: UserMFAInboundPolicies_Get
      summary: User Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    put:
      operationId: UserMFAInboundPolicies_Update
      summary: User Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    delete:
      operationId: UserMFAInboundPolicies_Delete
      summary: User Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: UserMFAInboundPoliciesDestinationCandidates_List
      summary: User Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: UserMFAInboundPoliciesExcludedSourceCandidates_List
      summary: User get excluded source User candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: UserMFAInboundPoliciesFilters_List
      summary: User List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: UserMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: User Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: UserMFAInboundPoliciesSourceCandidatesFilters_List
      summary: User List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: UserMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: User Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: UserMFAInboundPoliciesMFAMethods_List
      summary: User List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: UserMFAInboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: UserMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: UserMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: UserMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: UserMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: UserMFAInboundPoliciesSourceCandidates_List
      summary: User List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: UserMFAInboundPoliciesSourceUserCandidates_List
      summary: User List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound:
    get:
      operationId: UserMFAOutboundPolicies_List
      summary: User List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    post:
      operationId: UserMFAOutboundPolicies_Create
      summary: User Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: UserMFAOutboundPolicies_Get
      summary: User Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    put:
      operationId: UserMFAOutboundPolicies_Update
      summary: User Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    delete:
      operationId: UserMFAOutboundPolicies_Delete
      summary: User Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: UserMFAOutboundPoliciesDestinationCandidates_List
      summary: User List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: UserMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: User get excluded source User candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: UserMFAOutboundPoliciesFilters_Get
      summary: User List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: UserMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: User List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: User Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: User List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: UserMFAOutboundPoliciesMFAMethods_List
      summary: User List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: UserMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: UserMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSourceCandidates_List
      summary: User List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: UserMFAOutboundPoliciesSourceUserCandidates_List
      summary: User Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: UserRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific user
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/rules/history/{ruleId}:
    get:
      operationId: UserRulesHistory_Get
      summary: Get a historic version of an rule for a specific user
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/rules/outbound:
    get:
      operationId: UserOutboundRules_List
      summary: User List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    post:
      operationId: UserOutboundRules_Create
      summary: User Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: UserOutboundRule_Get
      summary: User Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    put:
      operationId: UserOutboundRule_Update
      summary: User Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
    delete:
      operationId: UserOutboundRule_Delete
      summary: User Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: UserOutboundRulesExcludedSourceCandidates_List
      summary: User List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/export:
    post:
      operationId: UserOutboundRules_Export
      summary: User Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: UserOutboundRulesExport_Get
      summary: Download Users outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/filters:
    get:
      operationId: UserOutboundRulesFilters_List
      summary: User List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: UserOutboundRulesExcludedSourceCandidatesFilters_List
      summary: User List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: UserOutboundRulesSourceCandidatesFilters_List
      summary: User List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: UserOutboundRulesDestinationCandidatesFilters_List
      summary: User List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: UserOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for an User
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/local-candidates:
    get:
      operationId: UserOutboundRulesSourceCandidates_List
      summary: User List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: UserOutboundRulesDestinationCandidates_List
      summary: User List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: UserOutboundRulesReview_ApproveWithChanges
      summary: User Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: UserOutboundRulesReview_Approve
      summary: User Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: UserOutboundRulesReview_Deny
      summary: User ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - User protection
  /users/{userId}/protection/rules/outbound/user-candidates:
    get:
      operationId: UserOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for an User
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User protection
  /users/{userId}/type:
    put:
      description: Set user type
      operationId: UserType_Update
      tags:
        - User
      summary: Set user type
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: settings user type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUserTypeBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
  /users/export:
    post:
      operationId: Users_Export
      summary: Export users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/actions/inactivate:
    post:
      operationId: UsersInactive_Set
      summary: Mark users inactive
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to mark inactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/actions/activate:
    post:
      operationId: UsersActive_Set
      summary: Mark users active
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to activate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/{userId}/actions/activate:
    post:
      operationId: UserActive_Set
      summary: Mark user active
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/{userId}/actions/inactivate:
    post:
      operationId: UserInactive_Set
      summary: Mark user inactive
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/actions/quarantine:
    put:
      operationId: UsersQuarantine_Enable
      summary: Enable quarantine for users
      description: Returns an empty object.
      requestBody:
        description: Send an object with a quarantine boolean and list of users
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: string
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - items
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/export/csv/{exportId}:
    get:
      operationId: UsersExport_Get
      summary: Download users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/filters:
    get:
      operationId: UsersFilters_List
      summary: List Users Filters
      description: Returns a list of filters for Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive:
    get:
      operationId: UsersInactive_List
      summary: List Inactive Users
      description: 'Returns a list of Users. Pass the returned ''nextCursor'' as the ''_cursor'' query param of the next request for batches, when the ''_offset'' param is not used.'
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/export:
    post:
      operationId: UsersInactive_Export
      summary: Export inactive users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/export/csv/{exportId}:
    get:
      operationId: UsersInactiveExport_Get
      summary: Download inactive users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/filters:
    get:
      operationId: UsersInactiveFilters_List
      summary: List Inactive Users Filters
      description: Returns a list of filters for Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged:
    get:
      operationId: UsersPrivileged_List
      summary: List Privileged Users
      description: Returns a list of Privileged Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/export:
    post:
      operationId: UsersPrivileged_Export
      summary: Export Privileged users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/export/csv/{exportId}:
    get:
      operationId: UsersPrivilegedExport_Get
      summary: Download Privileged users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/filters:
    get:
      operationId: UsersPrivilegedFilters_List
      summary: List Privileged Users Filters
      description: Returns a list of filters for Privileged Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued:
    get:
      operationId: UsersIdentityQueued_List
      summary: List Users in learning
      description: Returns a list of users in Learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/export:
    post:
      operationId: UsersIdentityQueued_Export
      summary: Export users in learning
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/export/csv/{exportId}:
    get:
      operationId: UsersIdentityQueuedExport_Get
      summary: Download users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/filters:
    get:
      operationId: UsersIdentityQueuedFilters_List
      summary: List Users in Learning Filters
      description: Returns a list of filters for users in Learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/searchIdByPrincipalName:
    get:
      operationId: UsersByPrincipalName_Search
      tags:
        - Users
      summary: Search user entity id by Principal Name
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/principalNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/searchIdBySid:
    get:
      operationId: UsersBySid_Search
      tags:
        - Users
      summary: Search user entity id by SID
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/sidParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/segmented:
    get:
      operationId: UsersIdentitySegmented_List
      summary: List Identity Segmented Users
      description: Returns a list of Identity segmented users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/export:
    post:
      operationId: UsersIdentitySegmented_Export
      summary: Export Segmented Users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/export/csv/{exportId}:
    get:
      operationId: UsersIdentitySegmentedExport_Get
      summary: Download Segmented Users Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/filters:
    get:
      operationId: UsersIdentitySegmentedFilters_List
      summary: List Segmented Users Filters
      description: Returns a list of filters for segmented users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account:
    get:
      operationId: UsersServiceAccount_List
      summary: List ServiceAccount Users
      description: Returns a list of ServiceAccount Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/export:
    post:
      operationId: UsersServiceAccount_Export
      summary: Export ServiceAccount users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/export/csv/{exportId}:
    get:
      operationId: UsersServiceAccountExport_Get
      summary: Download ServiceAccount users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/filters:
    get:
      operationId: UsersServiceAccountFilters_List
      summary: List ServiceAccount Users Filters
      description: Returns a list of filters for ServiceAccount Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/protect:
    post:
      operationId: UsersIdentitySegment_Protect
      summary: Move users to identity segmentation.
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queue:
    post:
      operationId: UsersIdentity_Queue
      summary: Queue users
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/unprotect:
    post:
      operationId: UsersIdentitySegment_Unprotect
      summary: Unprotect users
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/set-users-type:
    post:
      description: Set users type
      operationId: UsersType_Update
      tags:
        - Users
      summary: Set users type
      requestBody:
        description: settings user type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUsersTypeBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
  /users/statistics:
    get:
      operationId: UserStatistics_Get
      summary: User statistics
      description: Get Users statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
components:
  parameters:
    addAncestorsParameter:
      name: _add_ancestors
      in: query
      description: show rules where the asset is part of a group
      schema:
        type: boolean
        default: true
    addBuiltinsParameter:
      name: _add_builtins
      in: query
      description: show global rules
      schema:
        type: boolean
        default: false
    analysisDirectionParameter:
      name: direction
      in: query
      description: 'direction for the query, incoming or outgoing'
      required: true
      schema:
        type: string
      example: incoming
    assetIdParameter:
      name: assetId
      in: path
      description: assetId to filter on
      required: true
      schema:
        type: string
        pattern: '^a:[ault]:[a-zA-Z0-9]{8}$'
      example: 'a:a:8ErCHXe8'
    clientIdParameter:
      name: clientId
      in: path
      description: clientId to filter on
      required: true
      schema:
        type: string
    connectionStateParameter:
      name: connection_state
      in: query
      description: connection state for the query
      schema:
        type: integer
      example: 1
    connectClientDownloadParameter:
      name: platform
      in: query
      description: connect client platform
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
          - 3
    connectRegionIdParameter:
      name: regionId
      in: path
      description: connect region id
      required: true
      schema:
        type: string
      example: 'r:a:q0tqD2rf'
    connectServerIdParameter:
      name: connectServerId
      in: path
      description: connect server id
      required: true
      schema:
        type: string
      example: 'y:a:jUDZuhXU'
    cursorParameter:
      name: _cursor
      in: query
      description: cursor position to start at
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647305854366
    customUserIdParameter:
      name: customUserId
      in: path
      description: id of the customer user
      required: true
      schema:
        type: string
        format: uuid
      example: ab803afb-83bd-4bfe-9e0e-a5db211d134b
    directionParameter:
      name: direction
      in: query
      description: 'direction for the query, 1=Inbound, 2=Outbound, 3=Both'
      required: true
      schema:
        type: integer
      example: 1
    directlyRetrievedFromAssetParameter:
      name: directly_retrieved_from_asset
      in: query
      description: Only get activities retrieved from the asset
      required: true
      schema:
        type: boolean
      example: true
    domainParameter:
      name: domain
      in: query
      description: The domain to filter on
      required: true
      schema:
        type: string
        example: child.zeronetworks.com
    domainIdParameter:
      name: domainId
      in: path
      description: The fqdn of the domain
      required: true
      schema:
        type: string
        example: child.zeronetworks.com
    dstAssetId:
      name: dstAssetId
      in: query
      description: Id of dest asset
      required: true
      schema:
        type: string
    dstProcess:
      name: dstProcess
      in: query
      description: Dest process
      schema:
        type: string
    enrichRemoteIPsParameter:
      name: _enrich_remote_ips
      in: query
      description: enrich remote IPs
      schema:
        type: boolean
        default: true
    entityCursorParameter:
      name: _cursor
      in: query
      description: Used to page through results
      schema:
        type: string
    entityIdParameter:
      name: entityId
      in: path
      description: The id of the user or group
      required: true
      schema:
        type: string
    entityIdQueryParameter:
      name: _entityId
      in: query
      description: entityId to filter on
      schema:
        type: string
    entityParams:
      name: entityParams
      in: query
      required: false
      schema:
        type: string
      description: 'JSON string URI encoded object {id: string, direction: AssetDirection}'
    exportIdParameter:
      name: exportId
      in: path
      description: exportId to download
      required: true
      schema:
        type: string
    externalAccessPolicyIdParameter:
      name: policyId
      in: path
      description: id of the external acess policy
      required: true
      schema:
        type: string
        example: 'p:e:8199d54b'
    externalIdParameter:
      name: externalId
      in: path
      description: The external id of the group
      required: true
      schema:
        type: string
    eventTypeParameter:
      name: eventType
      in: query
      description: '0-Success, 2-Failure'
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
    fieldNameParameter:
      name: fieldName
      in: path
      description: The field name to filter on
      required: true
      schema:
        type: string
        enum:
          - authenticationPackageName
          - connectionStatus
          - dstAsset
          - dstPort
          - dstProcess
          - dstProcessPath
          - dstSwitch
          - dstSwitchInterface
          - dstUser
          - dstWfpFilter
          - failureReason
          - impersonationLevel
          - lmPackageName
          - logonProvider
          - logonStatus
          - logonType
          - logonTypeAndStatus
          - process
          - srcAsset
          - srcProcess
          - srcProcessPath
          - srcSwitch
          - srcSwitchInterface
          - srcUser
          - srcWfpFilter
          - subjectUsername
          - subjectUsernameSID
          - targetAccountRisks
          - targetUsername
          - targetUsernameSID
          - targetUserProtectionState
          - targetUserType
    filterIdParameter:
      name: filterId
      in: path
      description: The saved filter id
      required: true
      schema:
        type: string
        example: 'e:f:VGL7nXce'
    filtersParameter:
      name: _filters
      in: query
      description: JSON string URI encoded set of filters
      schema:
        type: string
    forestIdParameter:
      name: forestId
      in: path
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    forestIdQueryParameter:
      name: _forestId
      in: query
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    fqdnParameter:
      name: fqdn
      in: query
      description: fully qualified domain name
      schema:
        type: string
      example: server.domain.local
    fromParameter:
      name: from
      in: query
      description: startTime in epoch(ms)
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647308838000
    groupIdParameter:
      name: groupId
      in: path
      description: groupId to filter on
      required: true
      schema:
        type: string
        pattern: '^g:[acsot]:[a-zA-Z0-9]{8}$'
      example: 'g:t:01445453'
    groupIdQueryParameter:
      name: _groupId
      in: query
      description: groupId to filter on
      schema:
        type: string
        pattern: '^g:[acs]:[a-zA-Z0-9]{8}$'
    groupOrAssetIdParameter:
      name: groupOrAssetId
      description: group or asset id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupOrUserIdParameter:
      name: groupOrUserId
      description: group or user id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupTypeParameter:
      name: groupType
      in: path
      description: group type to filter on
      required: true
      schema:
        type: string
        pattern: ^ad$|^custom$|^ot$|^snow$|^system$|^tag$|^inactive$
    identityProviderIdParameter:
      name: identityProviderId
      in: path
      description: Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - azure
          - custom
          - cyberark
          - duo
          - ping-identity
          - okta
    includeNestedMembersQueryParameter:
      name: includeNestedMembers
      in: query
      description: include nested members in the result
      required: true
      schema:
        type: boolean
    ipParameter:
      name: ip
      in: query
      description: IP address
      required: true
      schema:
        type: string
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipRangeParameter:
      name: ipRange
      in: query
      description: IP Address Range
      required: true
      schema:
        type: string
        example: 1.1.1.1-1.1.1.2
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}-[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipSubnetParameter:
      name: subnet
      in: query
      description: IP Subnet
      required: true
      schema:
        type: string
        example: 192.168.1.0/24
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    isSrcAssetUnmonitoredParameter:
      name: isSrcAssetUnmonitored
      in: query
      description: filter for unmonitored sources
      required: false
      schema:
        type: boolean
    limitParameter:
      name: _limit
      in: query
      description: Limit the return results
      required: true
      schema:
        type: integer
        default: 30
        maximum: 400
        minimum: 1
    maintenanceWindowIdParameter:
      name: maintenanceWindowId
      in: path
      required: true
      description: id of the maintence window
      schema:
        type: string
        pattern: '^[e]:[m]:[a-zA-Z0-9]{8}$'
    offsetParameter:
      name: _offset
      required: false
      in: query
      description: Used to page through results
      schema:
        type: integer
        default: 0
        maximum: 1000000000
        minimum: 0
    protectionPolicyIdParameter:
      name: protectionPolicyId
      in: path
      description: The id of the onboarding policy
      required: true
      schema:
        type: string
        format: uuid
    optionalOffsetParameter:
      name: _offset
      in: query
      description: Used to page through results
      required: false
      schema:
        type: integer
        maximum: 1000000000
        minimum: 0
    optionalOrderParameter:
      name: order
      in: query
      description: What order to sort the results
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    optionalOrderColumnParameter:
      name: 'orderColumns[]'
      in: query
      description: what column to order on
      required: false
      schema:
        type: string
        example: name
    orderParameter:
      name: order
      in: query
      description: What order to sort the results
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
    orderColumnParameter:
      name: 'orderColumns[]'
      in: query
      description: what column to order on
      schema:
        type: string
        default: name
        example: name
    otRuleIdParameter:
      name: ruleId
      in: path
      description: The id of the rule
      required: true
      schema:
        type: string
      example: 'r:s:f52f491fd5b8'
    port:
      name: port
      in: query
      description: port
      required: true
      schema:
        type: integer
    principalNameParameter:
      name: principalName
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    processes:
      name: 'processes[]'
      in: query
      description: process
      schema:
        type: string
        example: 'c:\windows\system32\lsass.exe'
    k8sApplicationNameParameter:
      name: applicationName
      in: path
      description: application name to filter on
      required: true
      schema:
        type: string
    k8sClusterIdParameter:
      name: k8sClusterId
      in: path
      description: cluserId to filter on
      required: true
      schema:
        type: string
    k8sLabelParameter:
      name: label
      in: path
      required: true
      description: id of the K8s namespace
      schema:
        type: string
    k8sNamespaceIdParameter:
      name: k8sNamespaceId
      in: path
      required: true
      description: id of the K8s namespace
      schema:
        type: string
    k8sWorkloadIdParameter:
      name: k8sWorkloadId
      in: path
      required: true
      description: id of the K8s workload
      schema:
        type: string
    licenseTypeParameter:
      name: licenseType
      in: path
      description: The license type
      required: true
      schema:
        type: string
        enum:
          - identity
          - network
          - rpc
          - connect
          - externalAccess
    protocolType:
      name: protocolType
      in: query
      description: protocol type
      required: true
      schema:
        type: integer
    pushIdentityProviderIdParameter:
      name: pushIdentityProviderId
      in: path
      description: Push Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - duo
          - microsoftAuthenticator
          - okta
    reactivePolicyIdParameter:
      name: reactivePolicyId
      in: path
      description: The id of the MFA policy
      required: true
      schema:
        type: string
        format: uuid
    receiverTypeParameter:
      name: receiverType
      in: path
      description: receiver type
      required: true
      schema:
        type: string
        enum:
          - elastic
          - splunk
          - microsoft-sentinel
          - google-secops
    roleEntityIdParameter:
      name: roleEntityId
      in: path
      description: The id of the user or group
      required: true
      schema:
        type: string
    ruleDirectionParameter:
      name: ruleDirection
      in: query
      description: 'direction of the rule (1-Inbound, 2-Outbound)'
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
    ruleIdParameter:
      name: ruleId
      in: path
      description: The id of the rule
      required: true
      schema:
        type: string
        format: uuid
      example: d37077dc-0660-454d-81a0-f52f491fd5b8
    ruleTypeParameter:
      name: ruleType
      in: query
      description: rule type to filter on
      required: true
      schema:
        type: integer
        description: '1 - Inbound Allow, 2 - Inbound Block, 3 - Outbound Allow, 4 - Outbound Block'
    searchParameter:
      name: _search
      in: query
      description: Test to search for
      schema:
        type: string
    segmentConnectorDownloadParameter:
      name: platform
      in: query
      description: segment connector platform
      required: true
      schema:
        type: string
        enum:
          - MAC_ARM64
          - MAC_X64
          - LEGACY_WIN_X64
          - LINUX_X64
          - LINUX_X86
          - WIN_X64
          - WIN_X86
    sessionIdParameter:
      name: sessionId
      in: path
      description: The id of the session
      required: true
      schema:
        type: string
        pattern: '^s:a:[a-zA-Z0-9]{8}$'
    showInactiveParameter:
      name: showInactive
      in: query
      description: show inactive assets
      schema:
        type: boolean
        default: false
    showPodlessWorkloadsParameter:
      name: showPodlessWorkloads
      in: query
      description: show podless workloads
      schema:
        type: boolean
        default: false
    sidParameter:
      name: sid
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    siemEventTypeParameter:
      name: siemEventType
      in: path
      required: true
      description: siem event type for the query
      schema:
        type: string
        enum:
          - identityActivity
          - networkActivity
          - rpcActivity
          - audit
    simulationParams:
      name: simulationParams
      in: query
      required: false
      schema:
        type: string
      description: 'JSON string URI encoded object {"srcAssetId":"a:a:blah","srcUserId":"b:blah","srcProcess":"","dstAssetId":"a:a:blah","dstProcess":"","protocolType":6,"port":"3389"}'
    sortParameter:
      name: sort
      in: query
      description: sort for the query
      schema:
        type: string
      example: occurred_desc
    srcAssetId:
      name: srcAssetId
      in: query
      description: Src asset id
      required: true
      schema:
        type: string
    srcProcess:
      name: srcProcess
      in: query
      description: Src process
      schema:
        type: string
    srcUserId:
      name: srcUserId
      in: query
      description: Id of src user
      required: true
      schema:
        type: string
    switchIdParameter:
      name: switchId
      in: path
      description: switch to delete
      schema:
        type: string
      required: true
    timeFrameParameter:
      name: timeFrame
      in: query
      description: timeframe parameter
        Max = -1
        One Month = 1
        Three Monthes = 3
        Six Monthes = 6
        One Year = 12
      schema:
        type: integer
        format: int32
        enum:
          - -1
          - 1
          - 3
          - 6
          - 12
      required: true
    toParameter:
      name: to
      in: query
      description: endTime in epoch(ms)
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647305854366
    trafficTypeParameter:
      name: traffic_type
      in: query
      description: '1-Internal, 2-External or 3-Both'
      required: true
      schema:
        type: integer
    updateIdParameter:
      name: updateId
      in: query
      description: version
      required: true
      schema:
        type: integer
    userAccessConfigParameter:
      name: userAccessConfigId
      in: path
      description: userAccessConfigId to filter on
      required: true
      schema:
        type: string
        pattern: '^v:[a-zA-Z0-9]{8}$'
    userIdParameter:
      name: userId
      in: path
      description: userId to filter on
      required: true
      schema:
        type: string
        pattern: '^u:[a]:[a-zA-Z0-9]{8}$'
      example: 'u:a:w27loY5p'
    withCountParameter:
      name: with_count
      in: query
      description: return count of objects
      schema:
        type: boolean
        default: false
  responses:
    '204':
      description: No Content
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '409':
      description: Already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    200_empty:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/emptyResponse'
  schemas:
    accessInfo:
      type: object
      properties:
        hasAccess:
          type: boolean
        ruleFilters:
          type: array
          items:
            $ref: '#/components/schemas/ruleFilter'
    accessToken:
      description: Access Token
      type: object
      properties:
        clientId:
          type: string
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
        createdAt:
          type: string
        token:
          type: string
      x-examples:
        example-1:
          clientId: 'm:195d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
          accessType: 2
          name: example
          expiry: '2024-06-27T08:38:17.000Z'
          issuedAt: '2022-06-27T08:38:17.000Z'
          createdAt: '2022-06-27T08:21:21.000Z'
          token: eyJhbGciOiJSUzI1NiIsIna5cCI6IkpXVCJ9.eyJzdWIiOiJtOjY5NWQ3ZDUwZThjMGMyODY0Yzk4NWU3MmRlMWEyZmRlZjdkZmRjNmUiLCJuYW1lIjoiYXNkIiwiZWlkIjoiMTc2MjRhNTctNzI5ZS00ODA1LTk3MDMtNjc5NDdkM2RiMDFlIiwic2NvcGUiOjUsImVfbmFtZSI6ImxhYjgiLCJ2IjoxLCJpYXQiOjE2NTYzMTkwOTcsImV4cCI6MTcxOTQ3NzQ5NywiYXVkIjoicG9ydGFsLWxhYjguemVyb25ldHdvcmtzLmNvbSIsImlzcyI6Inplcm9uZXR3b3Jrcy5jb20vYXBpL3YxL2FjY2Vzcy10b2tlbiJ9.S0P3tyeU7BOPd0P27GKyFeWidoFSKEMiKhHbRLikyy4_34FafcpykiLO1vKBH6iB0utnEO4BwohlWeRWCi6LWkm5R2GxSLVo9GEuuTLPfqUkMzwpMpUkc-MniERH508z7LsxKrPA9VGCmMDKUh87PasooHfWaPgYtWTygV_uAtu1ppIde4V86WsqEmvbZt2gNGBLxwLgIgUgGuOExHu5MOM9fttiNKtuceJxP-RXFAFluXlfJwmjeY-WWHTU6AdvhB0HeJKAA7Pb8A60OkYxQsLxZKLS0K9WKFekYflh-nZBOQRfU3aUygmRyxtknvE0yZ7aK290y2Vb-lnqtl3k5Q
    accessTokenInfo:
      type: object
      properties:
        clientId:
          type: string
          readOnly: true
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
      title: ''
      x-examples:
        example-1:
          clientId: 'm:81a8735b5fed82c9c497163477c98fd835b58f83'
          accessType: 3
          name: access token - cloud connector provisioning
          expiry: '2022-07-26T15:49:49.000Z'
          issuedAt: '2022-06-26T15:49:49.000Z'
          createdAt: '2022-06-26T12:12:56.000Z'
        example-2:
          clientId: string
          accessType: 1
          name: string
          expiry: string
          issuedAt: string
          createdAt: string
    accessTypeEnum:
      description: '1=Full Access, 2=Read Only, 3=Cloud Connector Provisioning'
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      title: accessTypeEnum
    actionType:
      description: |
        * '1' - Allow
        * '2' - Block
      type: integer
      format: int32
      enum:
        - 1
        - 2
    activitiesDistictValue:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
        asset:
          $ref: '#/components/schemas/assetBasicInfo'
        logonTypeAndStatus:
          type: object
          properties:
            logonType:
              type: integer
            eventType:
              type: integer
        port:
          type: object
          properties:
            port:
              type: integer
            protocol:
              type: integer
        wfpFilter:
          type: object
          properties:
            layer:
              type: string
            name:
              type: string
            sublayer:
              type: string
    activitiesDistictValuesList:
      type: object
      properties:
        items:
          type: object
          properties:
            aggregations:
              type: array
              items:
                $ref: '#/components/schemas/activitiesDistictValue'
    activitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/activity'
        scrollCursor:
          type: string
    activity:
      type: object
      properties:
        conflictingInboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        conflictingOutboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              $ref: '#/components/schemas/source'
            assetType:
              $ref: '#/components/schemas/assetType'
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            ipThreatScore:
              type: integer
            networkProtectionState:
              $ref: '#/components/schemas/protectionState'
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            user:
              $ref: '#/components/schemas/userConnectionEnrichment'
            userId:
              type: string
            userName:
              type: string
        inboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        outboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        protocol:
          $ref: '#/components/schemas/protocol'
        reason:
          type: integer
          format: int32
          description: |
            * '1' - Requested,
            * '2' - RequestedDstProtected,
            * '3' - RequestedSrcAllowWithRule,
            * '4' - RequestedSrcAllowWithRuleDstProtected,
            * '5' - Established,
            * '6' - EstablishedBothWithAllowRules,
            * '7' - EstablishedDstAllowWithRule,
            * '8' - EstablishedDstAllowWithImplicitIcmpRule,
            * '9' - EstablishedBothAllowWithImplicitIcmpRule,
            * '10' - EstablishedSrcAllowWithRule,
            * '11' - BlockedSrc,
            * '12' - BlockedSrcProtected,
            * '13' - BlockedSrcProtectedDstOtAsset,
            * '14' - BlockedSrcWithRule,
            * '15' - Blocked,
            * '16' - BlockedDstProtected,
            * '17' - BlockedDstWithRule,
            * '18' - BlockedAllowSrcBlockDstWithRule,
            * '19' - BlockedAllowSrcBlockDstProtected,
            * '20' - BlockedSrcThirdParty,
            * '21' - BlockedThirdParty,
            * '22' - BlockedAllowSrcBlockDstThirdParty,
            * '23' - BlockedAllowSrcThirdPartyBlockDstWithRule,
            * '24' - BlockedAllowSrcThirdPartyBlockDstProtected,
            * '25' - BlockedAllowSrcThirdPartyBlockDst,
            * '26' - EstablishedDstThirdParty,
            * '27' - EstablishedSrcThirdPartyDstWithRule,
            * '28' - EstablishedSrcThirdPartyDstWithImplicitIcmpRule,
            * '29' - EstablishedSrcThirdParty,
            * '30' - BlockedAllowSrcThirdPartyBlockDstNoMfa,
            * '31' - BlockedAllowSrcThirdPartyBlockDstPromptMfa,
            * '32' - BlockedAllowSrcBlockDstzNoMfa,
            * '33' - BlockedAllowSrcBlockDstPromptMfa,
            * '34' - BlockedDstUnmonitoredNoMfa,
            * '35' - BlockedDstMonitoredNoMfa,
            * '36' - BlockedDstPromptMfa,
            * '37' - BlockedSrcNoMfa,
            * '38' - BlockedSrcPromptMfa,
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              $ref: '#/components/schemas/protectionState'
            assetSrc:
              $ref: '#/components/schemas/source'
            assetType:
              $ref: '#/components/schemas/assetType'
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            ipThreatScore:
              type: integer
            networkProtectionState:
              $ref: '#/components/schemas/protectionState'
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            user:
              $ref: '#/components/schemas/userConnectionEnrichment'
            userId:
              type: string
            userName:
              type: string
        state:
          description: |
            * '1' - Blocked
            * '2' - Requested
            * '3' - Established
            * '4' - Blocked At Source
            * '5' - Blocked By Third Party
            * '6' - Blocked At Source By Third Party
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          $ref: '#/components/schemas/trafficType'
    adDomain:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    adDomainsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/adDomain'
    aeExclusion:
      allOf:
        - $ref: '#/components/schemas/rule'
        - type: object
          properties:
            deletedAt:
              $ref: '#/components/schemas/epochMillis'
            deletedBy:
              $ref: '#/components/schemas/idNamePair'
    aeExclusionList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/aeExclusion'
    aeExclusionRuleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/aeExclusion'
    aeExclusionRuleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionType'
        description:
          type: string
        excludedLocalIdsList:
          type: array
          items:
            type: string
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
      required:
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
    ancestors:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    asset:
      allOf:
        - $ref: '#/components/schemas/assetBasicInfo'
        - type: object
          properties:
            assetStatus:
              $ref: '#/components/schemas/assetStatus'
            assignedDeploymentId:
              type: string
            externalDeviceId:
              type: string
            fqdn:
              type: string
              example: laptoppc.domain.local
            hasDns:
              type: boolean
            healthState:
              $ref: '#/components/schemas/healthState'
            identityProtectAt:
              $ref: '#/components/schemas/epochMillis'
            identityProtectedAt:
              $ref: '#/components/schemas/epochMillis'
            inactiveReason:
              $ref: '#/components/schemas/inactiveReason'
            inactiveSince:
              $ref: '#/components/schemas/epochMillis'
            ipV4Addresses:
              type: array
              items:
                type: string
                example: 1.1.1.1
            ipV6Addresses:
              type: array
              items:
                type: string
            lastLogon:
              $ref: '#/components/schemas/epochMillis'
            manufacturer:
              type: string
            operatingSystem:
              type: string
              example: Windows 10 Pro
            osType:
              type: integer
            outboundRestriction:
              type: integer
            passwordUpdateTime:
              $ref: '#/components/schemas/epochMillis'
            preferredDeploymentId:
              type: string
            principalName:
              type: string
            protectAt:
              $ref: '#/components/schemas/epochMillis'
            protectedAt:
              $ref: '#/components/schemas/epochMillis'
            purdueLevel:
              type: integer
            isQuarantined:
              type: boolean
            rpcMonitored:
              type: boolean
            rpcProtectAt:
              $ref: '#/components/schemas/epochMillis'
            rpcProtectedAt:
              $ref: '#/components/schemas/epochMillis'
            source:
              $ref: '#/components/schemas/source'
            switchLocationOverridden:
              type: boolean
    assetExtended:
      allOf:
        - $ref: '#/components/schemas/asset'
        - type: object
          properties:
            distinguishedName:
              type: string
            environmentGroup:
              $ref: '#/components/schemas/idNamePair'
            guid:
              type: string
            servicePrincipleNames:
              type: array
              items:
                type: string
            sid:
              type: string
            userAccountControl:
              type: integer
    assetActivateBody:
      type: object
      properties:
        comment:
          type: string
    assetIdentityAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            authenticationPackage:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            counts:
              type: object
              properties:
                authenticationPackage:
                  type: integer
                targetUsername:
                  type: integer
                logonType:
                  type: integer
                srcAsset:
                  type: integer
            srcAsset:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            logonType:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            targetUsername:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
    assetBasicInfo:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/assetType'
        breakGlassActivated:
          type: boolean
        domain:
          type: string
        id:
          type: string
        identityProtectionState:
          type: integer
        name:
          type: string
        otLocattion:
          $ref: '#/components/schemas/otLocation'
        protectionState:
          $ref: '#/components/schemas/protectionState'
        rpcProtectionState:
          type: integer
      x-examples:
        example-1:
          id: 'a:a:lELFlL34'
          name: TALM-DC-LAB11
          assetType: 2
          protectionState: 5
          domain: dev.zn.com
          identityProtectionState: 1
          rpcProtectionState: 1
          breakGlassActivated: false
    assetBasicInfoList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetBasicInfo'
    assetCandidate:
      type: object
      properties:
        assetType:
          type: integer
        breakGlassActivated:
          type: boolean
        domain:
          type: string
        id:
          type: string
        identityProtectionState:
          $ref: '#/components/schemas/identityProtectionState'
        name:
          type: string
        protectionState:
          $ref: '#/components/schemas/protectionState'
        rpcProtectionState:
          $ref: '#/components/schemas/rpcProtectionState'
    assetFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    assetIdSearch:
      type: object
      properties:
        assetId:
          type: string
    assetList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        count:
          type: integer
    assetManager:
      type: object
      properties:
        manager:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    assetManagersBody:
      type: object
      required:
        - managerIds
        - permission
      properties:
        managerIds:
          description: managers id
          type: array
          items:
            type: string
            pattern: '^[ug]:[ac]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'u:a:ab124as2'
        permission:
          description: '2 - Viewer, 3 - Manager'
          type: integer
          enum:
            - 2
            - 3
    assetManagersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetManager'
    assetManagersUpdateBody:
      type: object
      required:
        - managerId
        - permission
      properties:
        managerId:
          type: string
          pattern: '^[ug]:[a-z]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'u:a:ab124as2'
        permission:
          description: '2 - Viewer, 3 - Manager'
          type: integer
          enum:
            - 2
            - 3
    assetNetworkAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            byLocalAsset:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            byRemoteAsset:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            bySrcProcess:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            byUser:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            counts:
              type: object
              properties:
                byLocalAsset:
                  type: integer
                byPort:
                  type: integer
                byRemoteAsset:
                  type: integer
                bySrcProcess:
                  type: integer
                byUser:
                  type: integer
    assetOt:
      type: object
      properties:
        assetStatus:
          $ref: '#/components/schemas/assetStatus'
        assetType:
          $ref: '#/components/schemas/assetType'
        domain:
          type: string
          example: domain.local
        fqdn:
          type: string
          example: laptoppc.domain.local
        healthState:
          $ref: '#/components/schemas/healthState'
        id:
          type: string
          example: 'a:a:6d020055'
        ipV4Addresses:
          type: array
          items:
            type: string
            example: 1.1.1.1
        ipV6Addresses:
          type: array
          items:
            type: string
        name:
          type: string
          example: router
        principalName:
          type: string
        operatingSystem:
          type: string
        protectionState:
          $ref: '#/components/schemas/protectionState'
        source:
          $ref: '#/components/schemas/source'
        state:
          $ref: '#/components/schemas/state'
    assetOtList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetOt'
        count:
          type: integer
        nextOffset:
          type: integer
    assetOtResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/assetOt'
    assetResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/asset'
    assetsActivateBody:
      type: object
      required:
        - items
      properties:
        comment:
          type: string
        items:
          type: array
          items:
            type: string
    assetsBreakGlassBody:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: string
    assetsFiltersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetFilter'
    assetsIdentityQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsMirrorBody:
      type: object
      properties:
        originalAssetId:
          type: string
        targetAssetId:
          type: string
      required:
        - originalAssetId
        - targetAssetId
    assetsOrGroupsList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/asset'
              - $ref: '#/components/schemas/group'
        scrollCursor:
          type: string
    assetsPreferredSegmentServer:
      type: object
      properties:
        preferredDeployment:
          type: string
    assetsPreferredSegmentServerSetBody:
      type: object
      properties:
        assetIds:
          type: array
          items:
            type: string
        preferredDeploymentId:
          type: string
          description: If not provided sets the asset back to no preferred segment server
      required:
        - assetIds
    assetsPreferredSegmentServerBody:
      type: object
      properties:
        assetId:
          type: string
      required:
        - assetId
    assetsProtectBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetsQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsRpcBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetsRPCQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsSegmentationStatistic:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/epochMillis'
        monitorAssets:
          type: integer
        segmentedAssets:
          type: integer
        segmentedOutOfMonitor:
          type: number
    assetsSegmentationStatistics:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetsSegmentationStatistic'
    assetsStatesStatistics:
      type: object
      properties:
        assetsStatesStatistics:
          type: object
          properties:
            connectedAssetsCount:
              type: integer
      x-examples:
        example-1:
          assetsStatesStatistics:
            connectedAssetsCount: 13
    assetsStatistics:
      type: object
      properties:
        item:
          type: object
          properties:
            totalCount:
              type: integer
            deletedCount:
              type: integer
            protectedCount:
              type: integer
            queuedCount:
              type: integer
            monitoredCount:
              type: integer
            protectedDueToProtectionPolicyCount:
              type: integer
            queuedDueToProtectionPolicyCount:
              type: integer
            forcedUnprotectedCount:
              type: integer
            removingProtectionCount:
              type: integer
            forceRemovingProtectionCount:
              type: integer
            addingProtectionCount:
              type: integer
            forceAddingProtectionCount:
              type: integer
            notProtectedLink:
              type: array
              items:
                $ref: '#/components/schemas/requestedFilter'
      x-examples:
        example-1:
          item:
            totalCount: 82
            deletedCount: 2
            protectedCount: 31
            queuedCount: 2
            monitoredCount: 37
            protectedDueToProtectionPolicyCount: 0
            queuedDueToProtectionPolicyCount: 0
            forcedUnprotectedCount: 0
            removingProtectionCount: 1
            forceRemovingProtectionCount: 0
            addingProtectionCount: 3
            forceAddingProtectionCount: 6
            notProtectedLink:
              - id: protectionStatus
                includeValues:
                  - '1'
                  - '6'
              - id: status
                excludeValues:
                  - '3'
    assetStatus:
      description: |
        Possible asset status:
          * '1' - Not monitored
          * '2' - Segment server
          * '4' - Can't be monitored (unsupported OS)
          * '5' - Can't be monitored (unmonitorable)
          * '6' - Can't be monitored (unmonitorable)
          * '7' - Cloud connector
          * '8' - Not monitored (ansible unreachable)
          * '9' - Not monitored (cloud connector uninstalled)
          * '10' - Not monitored (cloud connector required)
          * '12' - Can't be monitored (inactive entity)
          * '13' - Stalked Externally
          * '14' - Lightweight Agent
      type: integer
      enum:
        - 1
        - 2
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 12
        - 13
        - 14
    assetSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    assetsUnprotectBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetType:
      description: |
        Possible asset status:
          * '0' - Unknown
          * '1' - Client
          * '2' - Server
          * '3' - Virtual cluster
          * '4' - IP camera
          * '5' - Smart TV
          * '6' - Factory controller
          * '7' - Medical device
          * '8' - Printer
          * '9' - Scanner
          * '10' - Smart card reader
          * '11' - Router
          * '12' - Hypervisor
          * '13' - PLC
          * '14' - HMI
          * '15' - Switch
          * '16' - Terminal station
          * '17' - RTU
          * '18' - Wireless access point
          * '19' - Historian
          * '20' - Game console
          * '21' - Fire alarm
          * '22' - UPS
          * '23' - Storage appliance
          * '24' - Virtualization appliance
          * '25' - Firewall appliance
          * '26' - Security scanner
          * '27' - Security controller
          * '28 ' - Door lock
          * '29' - Biometric entry system
          * '30' - HVAC
          * '31' - Room scheduler
          * '32' - Load Balancer Appliance
          * '33' - WAN Concentrator
          * '34' - IPAM Appliance
          * '35' - TEMPERATURE SENSOR GATEWAY
          * '36' - POWER METER
          * '37' - CONVEYOR SYSTEM
          * '38' - BUILDING AUTOMATION DEVICE
          * '39' - VISION CONTROLLER
          * '40' - MANUFACTURING EXECUTION SYSTEM
          * '41' - BACNET BROADCAST MANAGEMENT DEVICE BBMD
          * '42' - BACNET ROUTER AND BBMD
          * '43' - CLOCK
          * '44' - RFID
          * '45' - SCALE
          * '46' - MOBILE PRINTER
          * '47' - IED
          * '48' - CNC MILL
          * '49' - ROOM MONITOR
          * '50' - SMART SPEAKER
          * '51' - VENDING MACHINE
          * '52' - AUTONOMOUS VEHICLE
          * '53' - FLEET MANAGEMENT SYSTEM
          * '54' - BACNET ROUTER
          * '55' - MOTOR CONTROLLER
          * '56' - OT GATEWAY
          * '57' - CONTROLLER
          * '58' - BUILDING MANAGEMENT SYSTEM
          * '59' - VOIP PHONE
          * '60' - VISION SENSOR
          * '61' - REMOTE IO
          * '62' - VOIP SERVER
          * '63' - FLOW METER
          * '64' - BUILDING AUTOMATION CONTROLLER
          * '65' - SECURITY CAMERA
          * '66' - DIGITAL SIGN
          * '67' - REMOTE ACCESS GATEWAY
          * '68' - TEMPERATURE SENSOR
          * '69' - RTLS
          * '70' - SERIAL TO ETHERNET
          * '71' - INTERCOM
          * '72' - ENGINEERING STATION
          * '73' - DATA LOGGER GATEWAY
          * '74' - ROBOT
          * '75' - TABLET
          * '76' - SCADA SERVER
          * '77' - INDUSTRIAL PRINTER
          * '78' - VISION CAMERA
          * '79' - TIME CLOCK
          * '80' - VIDEO CONFERENCE
          * '81' - ELECTRICAL DRIVE
          * '82' - ACCESS CONTROL
          * '83' - PRINTER 3D
          * '84' - ACCESS CONTROL GATEWAY
          * '85' - ATM
          * '86' - AUDIO DECODER
          * '87' - AV SYSTEM
          * '88' - BACNET ROUTER BBMD
          * '89' - BADGE READER
          * '90' - BARCODE SCANNER
          * '91' - BUILDING AUTOMATION CONTROLLER GATEWAY
          * '92' - BUILDING MANAGEMENT SENSOR
          * '93' - BUILDING MANAGEMENT SENSOR GATEWAY
          * '94' - BUILDING MANAGEMENT SYSTEM GATEWAY
          * '95' - CAR
          * '96' - CIRCUIT MONITOR
          * '97' - CLINICAL MOBILE DEVICE
          * '98' - CLINICAL MOBILE DEVICE GATEWAY
          * '99' - CLOCK GATEWAY
          * '100' - CNC SYSTEM
          * '101' - CONFERENCE ROOM
          * '102' - DATA LOGGER
          * '103' - DIGITAL SIGN WORKSTATION
          * '104' - DISK PUBLISHER
          * '105' - DISPATCHER
          * '106' - EMBEDDED PC
          * '107' - ENCODER
          * '108' - EV CHARGING
          * '109' - FITNESS DEVICE
          * '110' - GENERIC MOBILE DEVICE
          * '111' - GPS NAVIGATOR
          * '112' - INDUSTRIAL BARCODE SCANNER
          * '113' - INDUSTRIAL METAL DETECTOR
          * '114' - INDUSTRIAL NETWORK EQUIPMENT
          * '115' - INDUSTRIAL THIN CLIENT
          * '116' - INDUSTRIAL THIN CLIENT GATEWAY
          * '117' - INDUSTRIAL WIRELESS
          * '118' - INDUSTRIAL WORKSTATION
          * '119' - INSPECTION SYSTEM
          * '120' - INTERACTIVE VOICE RESPONSE
          * '121' - INTERCOM GATEWAY
          * '122' - IOT CONTROLLER
          * '123' - LOCK BOX
          * '124' - MACHINERY HEALTH ANALYZER
          * '125' - MAILING SYSTEM
          * '126' - MEDIA GATEWAY
          * '127' - MEDIA PLAYER
          * '128' - MEDIA STREAMER
          * '129' - MICROSCOPE
          * '130' - MOBILE COMPUTER
          * '131' - MOTOR STARTER
          * '132' - MUSICAL INSTRUMENT
          * '133' - OPC SERVER
          * '134' - ORDER FULFILLMENT SYSTEM
          * '135' - OT DEVICE
          * '136' - OT SERVER
          * '137' - PA SYSTEM
          * '138' - PAYMENT KIOSK
          * '139' - PHYSICAL SECURITY PLATFORM
          * '140' - POINT OF SALE
          * '141' - POINT OF SALE GATEWAY
          * '142' - POWER DISTRIBUTION UNIT
          * '143' - POWER DISTRIBUTION UNIT GATEWAY
          * '144' - POWER SUPPLY
          * '145' - PRINT SERVER
          * '146' - PROJECTOR
          * '147' - RADIO
          * '148' - RADIO REPEATER
          * '149' - RECORDING SERVER
          * '150' - REPORTING SERVER
          * '151' - ROOM AUTOMATION STATION
          * '152' - ROOM DISPLAY
          * '153' - RTLS GATEWAY
          * '154' - SAFETY SYSTEM
          * '155' - SCADA CLIENT
          * '156' - SCREEN SHARE
          * '157' - SECURITY XRAY SCANNER
          * '158' - SENSOR
          * '159' - SERIAL TO ETHERNET GATEWAY
          * '160' - SERVICE TROLLEY
          * '161' - SMART BOARD
          * '162' - SMART HOME
          * '163' - SMART LIGHT
          * '164' - SMART LIGHT GATEWAY
          * '165' - SMART LOCK CONTROLLER
          * '166' - SMARTPHONE
          * '167' - SMARTWATCH
          * '168' - SOLAR ENERGY
          * '169' - TIME CLOCK GATEWAY
          * '170' - VIDEO CONFERENCE GATEWAY
          * '171' - VIDEO DECODER
          * '172' - VIDEO ENCODER
          * '173' - VIDEO SURVEILLANCE DEVICE
          * '174' - VOIP ADAPTER
          * '175' - VOIP PHONE GATEWAY
          * '176' - WATER SYSTEM
          * '177' - WIRELESS PHONE
          * '178' - WIRELESS PHONE GATEWAY
          * '1001' - OTHER OT
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
        - 142
        - 143
        - 144
        - 145
        - 146
        - 147
        - 148
        - 149
        - 150
        - 151
        - 152
        - 153
        - 154
        - 155
        - 156
        - 157
        - 158
        - 159
        - 160
        - 161
        - 162
        - 163
        - 164
        - 165
        - 166
        - 167
        - 168
        - 169
        - 170
        - 171
        - 172
        - 173
        - 174
        - 175
        - 176
        - 177
        - 178
        - 1001
    audienceType:
      description: |
        dictionary:
          * '0' PORTAL_AUDIENCE
          * '1' SSP_AUDIENCE
          * '2' RP_AUDIENCE
      type: integer
      enum:
        - 0
        - 1
        - 2
    audit:
      type: object
      properties:
        auditType:
          $ref: '#/components/schemas/auditType'
        destinationEntitiesList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        details:
          type: string
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        isoTimestamp:
          type: string
        parentObjectId:
          type: string
        performedBy:
          $ref: '#/components/schemas/idNamePair'
        reportedObjectId:
          type: string
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        userRole:
          $ref: '#/components/schemas/userRole'
    auditList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/audit'
        scrollCursor:
          type: string
    auditType:
      description: |
        * 1 - Asset is being segmented (network)
        * 2 - Asset segmented (network)
        * 3 - Asset failed segmenting
        * 4 - Asset is being unsegmented (network)
        * 5 - Asset unsegmented (network)
        * 6 - Asset failed unsegmenting
        * 7 - Asset added to learning (network)
        * 8 - Asset removed from learning (network)
        * 9 - Inbound allow rule created
        * 10 - Inbound allow rule deleted
        * 11 - Inbound allow rule expired
        * 12 - Inbound allow rule edited
        * 17 - Inbound MFA policy created
        * 18 - Inbound MFA policy deleted
        * 19 - Inbound MFA policy edited
        * 20 - Inbound JIT rule created
        * 21 - Inbound JIT rule deleted
        * 22 - Inbound JIT rule expired
        * 23 - Inbound JIT rule revived
        * 24 - Inbound JIT rule edited
        * 25 - API Token created
        * 26 - API Token deleted
        * 27 - API Token regenerated
        * 28 - Asset segmentation date postponed (network)
        * 29 - Outbound block rule created
        * 30 - Outbound block rule deleted
        * 31 - Outbound block rule expired
        * 32 - Outbound block rule edited
        * 33 - Inbound block rule created
        * 34 - Inbound block rule deleted
        * 35 - Inbound block rule expired
        * 36 - Inbound block rule edited
        * 39 - Asset unsegmented (network) (overriding policy)
        * 40 - Asset is being unsegmented (network) (overriding policy)
        * 41 - Asset removed from learning (network) (overriding policy)
        * 42 - Asset is being segmented (network) (policy)
        * 43 - Asset segmented (network) (policy)
        * 44 - Asset added to learning (network) (policy)
        * 45 - Network onboarding policy created
        * 46 - Network onboarding policy deleted
        * 47 - Network onboarding policy edited
        * 48 - Inbound JIT access rejected
        * 49 - Inbound JIT fallback rule created
        * 50 - Inbound JIT fallback rule deleted
        * 51 - Inbound JIT fallback rule expired
        * 53 - Outbound allow rule created
        * 54 - Outbound allow rule deleted
        * 55 - Outbound allow rule expired
        * 56 - Outbound allow rule edited
        * 58 - Admin portal role changed to admin
        * 59 - Admin portal role changed to viewer
        * 60 - Admin portal role revoked
        * 61 - Outbound JIT rule created
        * 62 - Outbound JIT rule deleted
        * 63 - Outbound JIT rule expired
        * 64 - Outbound MFA policy created
        * 65 - Outbound MFA policy deleted
        * 66 - Outbound MFA policy edited
        * 67 - Outbound JIT access rejected
        * 68 - Asset learning is done (network)
        * 69 - Asset learning (policy) is done (network)
        * 70 - Manual Linux asset created
        * 71 - Manual OT/IoT asset created
        * 72 - Asset learning extended (network)
        * 73 - Admin portal logon
        * 74 - Asset manager added
        * 75 - Asset manager removed
        * 76 - Asset is monitored by Cloud connector
        * 77 - Asset is no longer monitored by Cloud connector
        * 78 - Asset is monitored by Segment server
        * 79 - Asset is back to learning (network)
        * 80 - Manual OT/IoT asset edited
        * 81 - Admin portal role changed to operator
        * 82 - Segment server deployed
        * 83 - Automation engine inbound allow rule rejected
        * 84 - Automation engine inbound block rule rejected
        * 85 - Automation engine outbound allow rule rejected
        * 86 - Automation engine outbound block rule rejected
        * 87 - Automation engine inbound allow rule approved
        * 88 - Automation engine inbound block rule approved
        * 89 - Automation engine outbound allow rule approved
        * 90 - Automation engine outbound block rule approved
        * 91 - Automation engine inbound allow rule approved with changes
        * 92 - Automation engine inbound block rule approved with changes
        * 93 - Automation engine outbound allow rule approved with changes
        * 94 - Automation engine outbound block rule approved with changes
        * 95 - Region created
        * 96 - Connect session created
        * 97 - Connect session expired
        * 98 - Connect session revoked
        * 99 - Connect session logout
        * 100 - Connect policy created
        * 101 - Connect policy edited
        * 102 - Connect policy deleted
        * 103 - Connect server deployed
        * 104 - Connect asset created
        * 105 - Asset segmentation blocked (network)
        * 106 - Region edited
        * 107 - Connect server edited
        * 108 - Asset is being segmented (identity)
        * 109 - Asset segmented (identity)
        * 110 - Asset is being unsegmented (identity)
        * 111 - Asset unsegmented (identity)
        * 112 - Identity rule created
        * 113 - Identity rule deleted
        * 114 - Identity rule expired
        * 115 - Identity rule edited
        * 116 - User segmented (identity)
        * 117 - User unsegmented (identity)
        * 118 - User added to learning (identity)
        * 119 - User removed from learning (identity)
        * 120 - Asset added to RPC monitoring
        * 121 - Asset removed from RPC monitoring
        * 122 - User classification changed
        * 123 - Connect session extended
        * 124 - Asset marked as inactive by entity repository
        * 125 - Asset marked as active by entity repository
        * 126 - Asset manually marked as inactive
        * 127 - Asset manually marked as active
        * 128 - Break glass activated
        * 129 - Break glass deactivated
        * 132 - Break glass activated for asset
        * 133 - Break glass deactivated for asset
        * 134 - Asset is being segmented (RPC)
        * 135 - Asset segmented (RPC)
        * 136 - Asset is being unsegmented (RPC)
        * 137 - Asset unsegmented (RPC)
        * 138 - RPC rule created
        * 139 - RPC rule deleted
        * 140 - RPC rule expired
        * 141 - RPC rule edited
        * 142 - Asset was revived but still marked as inactive
        * 143 - User learning is done (identity)
        * 144 - User is back to learning (identity)
        * 145 - Asset added to tag
        * 146 - Asset removed from tag
        * 147 - Identity MFA policy created
        * 148 - Identity MFA policy edited
        * 149 - Identity MFA policy deleted
        * 150 - Identity JIT rule created
        * 151 - Identity JIT rule deleted
        * 152 - Identity JIT rule expired
        * 153 - Identity JIT rule edited
        * 154 - Identity JIT access rejected
        * 155 - Asset type changed
        * 156 - Asset added to learning (RPC)
        * 157 - Asset removed from learning (RPC)
        * 158 - Asset learning extended (RPC)
        * 159 - Asset segmentation date postponed (RPC)
        * 160 - Asset learning is done (RPC)
        * 161 - Asset is back to learning (RPC)
        * 162 - Asset added to environment
        * 163 - Asset removed from environment
        * 164 - Asset environment updated
        * 165 - Asset added to learning (identity)
        * 166 - Asset removed from learning (identity)
        * 167 - Asset learning extended (identity)
        * 168 - Asset segmentation date postponed (identity)
        * 169 - Asset learning is done (identity)
        * 170 - Asset is back to learning (identity)
        * 171 - Enforcing block rules
        * 172 - Enforcing block rules due to policy
        * 173 - Block rules enforced
        * 174 - Removing block rules
        * 175 - Group marked as inactive by entity repository
        * 176 - Group marked as active by entity repository
        * 177 - Cache MFA config created
        * 178 - Cache MFA config updated
        * 179 - Cache MFA config removed
        * 180 - Identity onboarding policy created
        * 181 - Identity onboarding policy deleted
        * 182 - Identity onboarding policy edited
        * 183 - Asset unsegmented (identity) (overriding policy)
        * 184 - Asset removed from learning (identity) (overriding policy)
        * 185 - Asset is being unsegmented (identity) (overriding policy)
        * 186 - Access portal logon
        * 187 - Asset OS type changed
        * 188 - User marked as inactive by entity repository
        * 189 - User marked as active by entity repository
        * 190 - Connect server deleted
        * 191 - Region deleted
        * 192 - External MFA policy created
        * 193 - External MFA policy removed
        * 194 - External MFA policy edited
        * 195 - Switch added
        * 196 - Switch edited
        * 197 - Switch deleted
        * 198 - OT/IoT is being segmented
        * 199 - OT/IoT segmented
        * 200 - OT/IoT is being unsegmented
        * 201 - OT/IoT unsegmented
        * 202 - OT/IoT rule added
        * 203 - OT/IoT rule deleted
        * 204 - OT/IoT rule edited
        * 205 - OT/IoT rule expired
        * 206 - Download portal logon
        * 207 - External access portal logon
        * 208 - Maintenance window added
        * 209 - Maintenance window deleted
        * 210 - Maintenance window edited
        * 211 - Maintenance window set as default
        * 212 - Tag group created
        * 213 - Custom user created
        * 214 - Custom user deleted
        * 215 - User learning extended (identity)
        * 216 - Asset restricted outbound enabled
        * 217 - Asset restricted outbound disabled
        * 218 - Asset restricted outbound changed
        * 219 - Asset mirrored
        * 220 - Asset quarantined
        * 221 - Asset unquarantined
        * 222 - Custom user invited
        * 223 - Custom user role changed to admin
        * 224 - Custom user role changed to viewer
        * 225 - Custom user role changed to operator
        * 226 - Custom user re-invited
        * 227 - Custom user approved invite
        * 228 - Custom user rejected invite
        * 229 - Inbound AE exclusion deleted
        * 230 - Outbound AE exclusion deleted
        * 231 - Asset manager permission changed
        * 232 - Added switch interfaces to monitor
        * 233 - Removed switch interfaces to monitor
        * 234 - Attempted to exceed network license limit
        * 235 - Network licenses available
        * 236 - Attempted to exceed identity license limit
        * 237 - Identity licenses available
        * 238 - Attempted to exceed RPC license limit
        * 239 - RPC licenses available
        * 240 - Network anti-tampering detected and handled
        * 241 - Identity anti-tampering detected and handled
        * 242 - RPC anti-tampering detected and handled
        * 243 - User manually marked as inactive
        * 244 - User manually marked as active
        * 245 - User was revived but still marked as inactive
        * 246 - Asset segmentation blocked (identity)
        * 247 - Asset segmentation blocked (rpc)
        * 248 - Outbound AE exclusion created
        * 249 - Inbound AE exclusion created
        * 250 - Outbound AE exclusion edited
        * 251 - Inbound AE exclusion edited
        * 252 - Cluster added
        * 253 - Cluster edited
        * 254 - Cluster deleted
        * 255 - User marked as disabled by entity repository
        * 256 - User marked as enabled by entity repository
        * 257 - User marked as disabled by entity repository (previously inactive)
        * 258 - User marked as inactive by entity repository (previously disabled)
        * 259 - User manually marked as inactive (previously disabled)
        * 260 - Attempted to exceed connect license limit
        * 261 - Connect licenses available
        * 287 -
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 53
        - 54
        - 55
        - 56
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
        - 142
        - 143
        - 144
        - 145
        - 146
        - 147
        - 148
        - 149
        - 150
        - 151
        - 152
        - 153
        - 154
        - 155
        - 156
        - 157
        - 158
        - 159
        - 160
        - 161
        - 162
        - 163
        - 164
        - 165
        - 166
        - 167
        - 168
        - 169
        - 170
        - 171
        - 172
        - 173
        - 174
        - 175
        - 176
        - 177
        - 178
        - 179
        - 180
        - 181
        - 182
        - 183
        - 184
        - 185
        - 186
        - 187
        - 188
        - 189
        - 190
        - 191
        - 192
        - 193
        - 194
        - 195
        - 196
        - 197
        - 198
        - 199
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 209
        - 210
        - 211
        - 212
        - 213
        - 214
        - 215
        - 216
        - 217
        - 218
        - 219
        - 220
        - 221
        - 222
        - 223
        - 224
        - 225
        - 226
        - 227
        - 228
        - 229
        - 230
        - 231
        - 232
        - 233
        - 234
        - 235
        - 236
        - 237
        - 238
        - 239
        - 240
        - 241
        - 242
        - 243
        - 244
        - 245
        - 246
        - 247
        - 248
        - 249
        - 250
        - 251
        - 252
        - 253
        - 254
        - 255
        - 256
        - 257
        - 258
        - 259
        - 260
        - 261
    authenticationPackageSummary:
      type: object
      properties:
        count:
          type: integer
        name:
          type: string
    byAsset:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
    byPort:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            port:
              type: object
              properties:
                protocol:
                  $ref: '#/components/schemas/protocol'
                port:
                  type: integer
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
    byProcess:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        connectionState:
          $ref: '#/components/schemas/connectionState'
    byUser:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
    candidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/assetCandidate'
              - $ref: '#/components/schemas/groupCandidate'
              - $ref: '#/components/schemas/userCandidate'
        scrollCursor:
          type: string
    challengeBody:
      type: object
      properties:
        email:
          type: string
        sendSkip:
          type: boolean
    challengeResponse:
      type: object
      properties:
        authenticatedVia:
          type: string
        isPhoneChallengeSupported:
          type: boolean
    clusterInfo:
      type: object
      properties:
        clusterInfo:
          type: object
          properties:
            clusterName:
              type: string
            clusterMembersList:
              type: array
              items:
                type: string
    connectionState:
      type: integer
      description: |
        dictionary:
          * '1' Blocked
          * '2' Requested
          * '3' Established
          * '4' Blocked at source
          * '5' All
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    connectionStatesCounts:
      type: object
      properties:
        established: 
          type: integer
        blocked:
          type: integer
        requested:
          type: integer
    connectivityStateAfterReboot:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      description: |
        dictionary:
          * '1' Previous connectivity state
          * '2' Connected (Always-on)
          * '3' Disconnected
          * '4' Signed out
    connectRegion:
      type: object
      properties:
        connectServers:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        createdBy:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        dnsServersIpAddressList:
          type: array
          items:
            type: string
        id:
          type: string
        ipAddress:
          type: string
          format: ipv4
        name:
          type: string
        updatedBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    connectRegionBody:
      type: object
      properties:
        name:
          type: string
        ipAddress:
          type: string
          format: ipv4
        dnsServersIpAddressList:
          type: array
          items:
            type: string
            format: ipv4
        dnsSuffixesList:
          type: array
          items:
            type: string
      required:
        - name
        - ipAddress
        - dnsServersIpAddressList
    connectRegionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectRegion'
    connectServer:
      type: object
      properties:
        assemblyVersion:
          type: string
        clientsDnsServerIPs:
          type: array
          items:
            type: string
        connectionState:
          type: integer
        externalIPAddress:
          type: string
          format: ipv4
        fqdn:
          type: string
        id:
          type: string
        installedAt:
          $ref: '#/components/schemas/epochMillis'
        internalIPAddress:
          type: string
          format: ipv4
        name:
          type: string
        port:
          type: integer
        region:
          $ref: '#/components/schemas/idNamePair'
        subnet:
          $ref: '#/components/schemas/idNamePair'
    connectServerBody:
      type: object
      properties:
        publicPort:
          type: string
      required:
        - publicPort
    connectServersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectServer'
    connectUserAccessConfig:
      type: object
      properties:
        allowedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedAssetSources:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedDestinations:
          type: array
          items:
            type: object
            properties:
              guid:
                type: string
              id:
                type: string
              name:
                type: string
              domain:
                type: string
              hasProtectionPolicy:
                type: boolean
        allowedRegions:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        connectivityStateAfterReboot:
          type: integer
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/userSimple'
        description:
          type: string
        excludedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        forceSsoAuthentication:
          type: boolean
        id:
          type: string
        name:
          type: string
        sessionTtlHours:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/userSimple'
    connectUserAccessConfigBody:
      type: object
      required:
        - allowedRegions
        - connectivityStateAfterReboot
        - dstEntityIdsList
        - forceSsoAuthentication
        - loginAuthorizedEntities
        - name
        - sessionTtlHours
      properties:
        allowedRegions:
          type: array
          items:
            type: string
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
        description:
          type: string
        dstEntityIdsList:
          type: array
          items:
            type: string
        loginAuthorizedEntities:
          type: object
          required:
            - allowedAssetIdsList
            - allowedAssetsSourcesList
            - allowedUsersIdsList
          properties:
            allowedAssetIdsList:
              type: array
              items:
                type: string
            allowedAssetsSourcesList:
              type: array
              items:
                type: string
            allowedUsersIdsList:
              type: array
              items:
                type: string
            excludedAssetIdsList:
              type: array
              items:
                type: string
            excludedUserIdsList:
              type: array
              items:
                type: string
        forceSsoAuthentication:
          type: boolean
        name:
          type: string
        sessionTtlHours:
          type: integer
    connectUserAccessConfigList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectUserAccessConfig'
    createdBy:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        email:
          type: string
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        userRole:
          $ref: '#/components/schemas/userRole'
    createOtAssetResponse:
      type: object
      properties:
        assetId:
          type: string
    customGroup:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        directMembersCount:
          type: integer
        domain:
          type: string
        guid:
          type: string
          format: uuid
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        principalName:
          type: string
        role:
          type: integer
        sid:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
    customGroupBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - name
    customGroupMembersBody:
      type: object
      properties:
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - membersId
    customGroupResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/customGroup'
    customUser:
      type: object
      properties:
        activeEnvironmentId:
          type: string
          format: uuid
        activeSince:
          type: string
        email:
          type: string
        fullName:
          type: string
        id:
          type: string
          format: uuid
        invitedAt:
          type: string
        invitedBy:
          type: string
        inviteExpiry:
          type: string
        inviter:
          $ref: '#/components/schemas/userSimple'
        jobTitle:
          type: string
        phone:
          type: string
        portalUserType:
          type: string
        role:
          $ref: '#/components/schemas/userRole'
        status:
          type: string
    customUsersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/customUser'
    deployment:
      type: object
      properties:
        assemblyVersion:
          type: string
        assetId:
          type: string
        id:
          type: string
        ipAddress:
          type: string
        defaultGateway:
          type: string
        dnsIPAddress:
          type: string
        name:
          type: string
        subnetMask:
          type: string
        status:
          type: integer
        state:
          type: integer
    deploymentsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/deployment'
    distribution:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        activitiesCount:
          type: integer
    downloadUrl:
      type: object
      properties:
        url:
          type: string
    emptyResponse:
      type: object
    encodedEntity:
      type: object
      properties:
        id:
          type: string
    enforcementSource:
      description: |
        * '1' - ReactivePolicy
        * '2' - Automated
        * '3' - AccessPortal
        * '4' - AdminPortal
        * '5' - AI
        * '6' - API
        * '7' - Setup
        * '8' - Connect
        * '9' - System
        * '10' - DownloadPortal
        * '11' - ExternalAccessPortal
        * '12' - DayTwo
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
    entitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        count:
          type: integer
        nextCursor:
          type: string
        nextOffset:
          type: integer
    entity:
      type: object
      anyOf:
        - $ref: '#/components/schemas/asset'
        - $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/group'
    envConfig:
      type: object
      properties:
        licenses:
          type: object
          properties:
            connect:
              $ref: '#/components/schemas/envConfigLicense'
            identity:
              $ref: '#/components/schemas/envConfigLicense'
            network:
              $ref: '#/components/schemas/envConfigLicense'
            rpc:
              $ref: '#/components/schemas/envConfigLicense'
        periodicallyCheckDeployments:
          type: boolean
          example: true
    envConfigLicense:
      type: object
      properties:
        activitiesRetentionDays:
          type: integer
        clientsLimit:
          type: integer
        endTime:
          $ref: '#/components/schemas/epochMillis'
        licenseMode:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        limit:
          type: integer
        otsLimit:
          type: integer
        serversLimit:
          type: integer
        startTime:
          $ref: '#/components/schemas/epochMillis'
    epochMillis:
      description: Epoch Millis
      type: integer
      format: int64
      title: epochMillis
    error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    exportBody:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
    switchInterfaceBody:
      type: object
      properties:
        interfaces:
          type: array
          items:
            type: string
        shouldMonitor:
          type: boolean
      required:
        - interfaces
        - shouldMonitor
    exportBodyActivities:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
        - _search
    exportBodyAnalysis:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
        - from
    exportBodyAssets:
      type: object
      properties:
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
    exportBodyRules:
      type: object
      properties:
        addAncestors:
          type: boolean
          default: true
        addBuiltins:
          type: boolean
          default: false
        assetDirection:
          $ref: '#/components/schemas/ruleDirection'
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - addAncestors
        - addBuiltins
        - localDateTimeFormat
        - _filters
    exportId:
      type: object
      properties:
        exportId:
          type: string
    externalAccessPolicy:
      type: object
      properties:
        changeTicket:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        dstAssetId:
          type: string
        dstAssetInfo:
          $ref: '#/components/schemas/asset'
        dstPortsList:
          $ref: '#/components/schemas/portsList'
        dstProcessNamesList:
          type: array
          items:
            type: string
        id:
          type: string
        name:
          type: string
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        url:
          type: string
    externalAccessPolicyBody:
      type: object
      properties:
        changeTicket:
          type: string
        description:
          type: string
        dstAssetId:
          type: string
        dstPortsList:
          $ref: '#/components/schemas/portsList'
        dstProcessNamesList:
          type: array
          items:
            type: string
        name:
          type: string
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        url:
          type: string
      required:
        - dstAssetId
        - dstPortsList
        - dstProcessNamesList
        - name
        - ruleDuration
        - srcUserIdsList
    externalAccessPolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyStatistics:
      type: object
      properties:
        policiesStatistics:
          type: object
          properties:
            totalCount:
              type: integer
    externalIpsList:
      description: Collection of Internet IPs that are trusted
      type: array
      items:
        type: string
        example: 192.168.0.0
    filter:
      type: object
      properties:
        allowedCharactersRegex:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        id:
          type: string
        isSingleValue:
          type: boolean
        name:
          type: string
        placeholder:
          type: string
        type:
          type: integer
        selections:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    filtersList:
      type: object
      properties:
        defaultSelectedFilterId:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/filter'
        hasActiveFiltersChanged:
          type: boolean
        resolvedFilters:
          type: object
        userFilter:
          type: object
          properties:
            resolvedFilters:
              type: object
    group:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        directMembersCount:
          type: integer
        domain:
          type: string
        externalId:
          type: string
        guid:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        principalName:
          type: string
        role:
          type: integer
          format: int32
        sid:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
    groupAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            byLocalAsset:
              type: array
              items:
                $ref: '#/components/schemas/byAsset'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/byPort'
            byRemoteAsset:
              type: array
              items:
                $ref: '#/components/schemas/byAsset'
            bySrcProcess:
              type: array
              items:
                $ref: '#/components/schemas/byProcess'
            byUser:
              type: array
              items:
                $ref: '#/components/schemas/byUser'
            counts:
              type: object
              properties:
                byLocalAsset:
                  type: integer
                byPort:
                  type: integer
                byRemoteAsset:
                  type: integer
                bySrcProcess:
                  type: integer
                byUser:
                  type: integer
    groupCandidate:
      type: object
      properties:
        domain:
          type: string
        guid:
          type: string
        hasIdentityProtectionPolicy:
          type: boolean
        hasNetworkProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        sid:
          type: string
    groupCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/groupCandidate'
        scrollCursor:
          type: string
    groupIdOrAssetId:
      type: string
      pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupIdOrUserId:
      type: string
      pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/group'
    groupItem:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/group'
    groupSimulateSegmentationEntity:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    groupSimulateSegmentationItem:
      type: object
      properties:
        coveredEntities:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationEntity'
        lastTimeSeen:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        localProcessesList:
          type: array
          items:
            type: string
        memberAssets:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        occurred:
          type: integer
        port:
          type: integer
        protocolType:
          $ref: '#/components/schemas/protocol'
        uncoveredEntities:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationEntity'
    groupSimulateSegmentationReport:
      type: object
      properties:
        from:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationItem'
        ruleStates:
          type: array
          items:
            $ref: '#/components/schemas/ruleState'
        to:
          type: string
        trafficType:
          $ref: '#/components/schemas/trafficType'
    groupSimulateSegmentationReportBody:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/epochMillis'
        ruleStates:
          type: array
          items:
            $ref: '#/components/schemas/ruleState'
        to:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          $ref: '#/components/schemas/trafficType'
    groupSimulateSegmentationReportRecord:
      type: array
      items:
        $ref: '#/components/schemas/groupSimulateSegmentationItem'
    groupSimulateSegmentationState:
      type: object
      properties:
        generationState:
          type: string
        hasReport:
          type: boolean
    groupsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
        count:
          type: integer
    groupsOrUsersList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    groupsStatistics:
      type: object
      properties:
        groupStatistics:
          type: object
          properties:
            adGroupsCount:
              type: integer
            customGroupsCount:
              type: integer
            protectionPoliciesCount:
              type: integer
      x-examples:
        example-1:
          groupStatistics:
            adGroupsCount: 106
            customGroupsCount: 1
            protectionPoliciesCount: 2
    healthIssue:
      type: object
      properties:
        issueCode:
          description: |
            * '0' - Unspecified
            * '1' - Unknown
            * '2' - Access Denied
            * '3' - IO Device Issue
            * '4' - DotNet 3.5
            * '5' - WMI Corrupted
            * '6' - URL Filtering
            * '7' - Out of Space
            * '8' - Unsupported HMAC
            * '9' - Unsupported Encryption
            * '10' - Setup Script Failed
            * '11' - Slow MFA
            * '12' - Unexpted GPO Rules
            * '13' - Zero Networks GPO Rule Mismatch
            * '14' - Audit Mismatch
            * '15' - Asset ID Mismatch
            * '16' - Unsupported HTTP Version
            * '17' - Registry Marked for Deletion
            * '18' - Unable to add to automation group
            * '19' - Incorrect Username or Password
            * '20' - RPC Open Source Installed
            * '21' - Timeout during initialization
            * '22' - Data collection timeout
            * '23' - Not in Sudoers
            * '24' - Invalid SSH Key
            * '25' - Events Unavailable
            * '26' - SSH Password Incorrect
            * '27' - SSH Password Expired
            * '28' - Segmneted Users not found
            * '29' - Unsupported Python Versions
            * '30' - Cound not query segmented users
            * '31' - Switch unreachable
            * '32' - Switch communication issue
            * '33' - Interface protection resource exceeded
            * '34' - Unsupported Package Manager
            * '35' - Firewall disabled by GPO
            * '36' - Linux firewall logs oversized
            * '1000' - First blocker issue code
            * '1001' - Cluster node ipv6 disabled
            * '1002' - Local rules merge disallowed
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 1000
            - 1001
            - 1002
        details:
          type: string
    healthStateObject:
      type: object
      properties:
        healthState:
          $ref: '#/components/schemas/healthState'
    healthState:
      type: object
      properties:
        healthStatus:
          description: |
            * '0' - Unspecified
            * '1' - Healthy
            * '2' - Error
            * '3' - Warning
            * '4' - N/A
            * '5' - Retrying
            * '6' - Blocker
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        healthIssuesList:
          type: array
          items:
            $ref: '#/components/schemas/healthIssue'
    historyRule:
      type: object
      properties:
        id:
          type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        localEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        localProcessesList:
          type: array
          items:
            type: string
        servicesList:
          type: array
          items:
            type: string
        createdBy:
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/idNamePair'
            enforcementSource:
              $ref: '#/components/schemas/enforcementSource'
    identityAnalysis:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            name:
              type: string
        authenticationPackages:
          type: array
          items:
            $ref: '#/components/schemas/authenticationPackageSummary'
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        eventType:
          type: integer
        lastTimeSeen:
          type: string
        logonTypes:
          type: array
          items:
            $ref: '#/components/schemas/logonTypeSummary'
        occurred:
          type: integer
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
    identityProtectionState:
      description: |
        Possible asset status:
          * '0' - Unspecified
          * '1' - Unsegmented
          * '2' - Unspecified
          * '3' - Segmented
          * '4' - Unsegmented
          * '5' - In learning
          * '6' - Forced Unprotected
          * '7' - Forced Removing Protection
          * '8' - Protected Due To Policy
          * '9' - Applying Protection Due To Policy
          * '10' - In learning Due To Policy
          * '11' - Learning Done
          * '12' - In learning Due To Policy Done
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
    identityReactivePolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        changeTicket:
          type: string
        description:
          type: string
        dstAssetId:
          type: string
        dstEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        excludedDstAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        extraIdentityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        fallbackToSingleLoggedOnUser:
          type: boolean
        id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        name:
          type: string
        mfaMethodsList:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcAssetIdsList:
          type: array
          items:
            type: string
        srcAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcUserIdsList:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        state:
          $ref: '#/components/schemas/reactivePolicyState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        useDefaultIdp:
          type: boolean
        useOccasionalMfa:
          type: boolean
    identityReactivePolicyBody:
      type: object
      properties:
        changeTicket:
          type: string
        description:
          type: string
        dstAssetId:
          type: string
        excludedDstAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetIdsList:
          type: array
          items:
            type: string
        extraIdentityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        fallbackToSingleLoggedOnUser:
          type: boolean
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        name:
          type: string
        mfaMethodsList:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcAssetIdsList:
          type: array
          items:
            type: string
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/reactivePolicyState'
        useDefaultIdp:
          type: boolean
        useOccasionalMfa:
          type: boolean
      required:
        - dstAssetId
        - fallbackToSingleLoggedOnUser
        - identityProtectionCategoryList
        - mfaMethodsList
        - overrideBuiltins
        - ruleDuration
        - srcAssetIdsList
        - srcUserIdsList
        - state
    identityReactivePolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/identityReactivePolicy'
    identityReactivePolicyList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/identityReactivePolicy'
        count:
          type: integer
    identityReactivePolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/identityReactivePolicy'
    identityRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        assetId:
          type: string
        changeTicket:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        excludedAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        ruleclass:
          $ref: '#/components/schemas/ruleClass'
        state:
          type: integer
          format: int32
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        userIdsList:
          type: array
          items:
            type: string
        userInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    identityRuleBody:
      type: object
      required:
        - action
        - assetId
        - identityProtectionCategoryList
        - state
        - userIdsList
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        assetId:
          type: string
        changeTicket:
          type: string
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        expiresAt:
          type: integer
          format: int64
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        name:
          type: string
        state:
          $ref: '#/components/schemas/ruleState'
        userIdsList:
          type: array
          items:
            type: string
    identityRuleItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/identityRule'
    identityRulesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/identityRule'
    idNamePair:
      type: object
      properties:
        id:
          description: EntityId
          type: string
        name:
          description: Entity Name
          type: string
    idNamePairList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    inactiveAssetsConfig:
      type: object
      required:
        - lastActiveDurationInMonths
      properties:
        lastActiveDurationInMonths:
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
    inactiveAssetsConfigBody:
      type: object
      properties:
        lastActiveDurationInMonths:
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
    inactiveReason:
      description: |
        * '1' - Duplicated in asset repository
        * '2' - Manually set as inactive
        * '3' - None
        * '4' - Disabled in asset repository
        * '5' - Inactive in asset repository
        * '6' - Deleted in asset repository
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
    interfaceUuidsList:
      type: array
      items:
        type: string
        format: uuid or string
      description: |
        one of the following: 
        * "rpcAnyInterface" for any interface 
        * List of interface uuids for explicit interfaces
    ipSecOpt:
      description: |
        * For allow rule only.
        * '1' - Off
        * '2' - Null encapsulation connections
        * '3' - Authenticated and integrity-protected connections
        * '4' - Encrypted connections and dynamically negotiate encryption (inbound rule only)
        * '5' - Encrypted connections
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    ipSubnet:
      type: string
      example: 192.168.1.0/24
      pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    iso8601DateTimeUTC:
      description: ISO 8601 Date Time in UTC
      type: string
      example: 'YYYY-HH-DDTHH:MM:SSSZ'
    k8s:
      type: object
      properties:
        agentExternalIp:
          type: string
        agentVersion:
          type: string
        clusterType:
          type: integer
        cniType:
          type: integer
        cniVersion:
          type: string
        connectedSince:
          $ref: '#/components/schemas/epochMillis'
        connectionState:
          type: integer
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        generation:
          type: integer
          format: int64
        id:
          type: string
        k8sClusterVersion:
          type: string
        k8sUid:
          type: string
          format: uuid
        lastConnected:
          $ref: '#/components/schemas/epochMillis'
        lastDisconnected:
          $ref: '#/components/schemas/epochMillis'
        name:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
    k8sApplication:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/idNamePair'
        name:
          type: string
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        workloads:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    k8sApplicationEntity:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/k8sApplication'
    k8sApplicationsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sApplication'
        count:
          type: integer
    k8sBody:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    k8sCommands:
      type: object
      properties:
        dockerLoginCommand:
          type: string
        installationCommand:
          type: string
        loginCommand:
          type: string
        pullActivityCollectorImageCommand:
          type: string
        pullHelmChartCommand:
          type: string
        pullImageCommand:
          type: string
        uninstallationCommand:
          type: string
    k8sEgressIp:
      type: object
      properties:
        affectedEntities:
          type: array
          items:
            $ref: '#/components/schemas/k8sEntityInfo'
        clusterId:
          type: string
        id:
          type: string
        ips:
          type: array
          items:
            type: string
        k8sUid:
          type: string
        name:
          type: string
        rawSelector:
          type: string
    k8sEgressIpList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sEgressIp'
        count:
          type: integer
    k8sEntity:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/k8s'
    k8sEntityInfo:
      type: object
      properties:
        application:
          type: string
        hostNamespace:
          $ref: '#/components/schemas/idNamePair'
        type:
          type: integer        
    k8sEntityType:
      description: |
        * 0 - Other
        * 1 - Cluster
        * 2 - Namespace
        * 3 - Node
        * 4 - Pod
        * 5 - Deployment
        * 6 - Daemonset
        * 7 - Statefulset
        * 8 - Job
        * 9 - Service
        * 10 - Network Policy
        * 11 - Ingress
        * 12 - Gateway
        * 13 - HTTP Route
        * 14 - gRPC Route
        * 15 - Replica Set
        * 16 - Replication Controller  
      type: integer
      format: int32
      enum: 
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
    k8sItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/k8s'
    k8sLabel:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/idNamePair'
        key:
          type: string
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        value:
          type: string
        workloads:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    k8sLabelEntity:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/k8sLabel'
    k8sLabelsList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sLabel'
    k8sList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8s'
    k8sNamespace:
      type: object
      properties:
        applicationsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        cluster:
          $ref: '#/components/schemas/idNamePair'
        id:
          type: string
        k8sUid:
          type: string
          format: uuid
        labelsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        name:
          type: string
        workloadsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    k8sNamespaceEntity:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/k8sNamespace'
    k8sNamespacesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sNamespace'
    k8sNetworkPolicy:
      type: object
      properties:
        clusterId:
          type: string
        egressRules:
          type: string
        id:
          type: string
        ingressRules:
          type: string
        isEgressPolicy:
          type: boolean
        isIngressPolicy:
          type: boolean
        k8sUid:
          type: string
          format: uuid
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/idNamePair'
        selectorString:
          type: string
    k8sNetworkPolicyList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sNetworkPolicy'
    k8sNode:
      type: object
      properties:
        id:
          type: string
        k8sUid:
          type: string
          format: uuid
        labelsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        name:
          type: string
    k8sNodesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sNode'
    k8sRule:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ruleAction"
        clusterId: 
          type: string
        direction:
          $ref: "#/components/schemas/k8sRuleDirection"
        environmentId:
          type: string
        excludedCidrsList:
          type: array
          items:
            type: string
        localEntity:
          $ref: '#/components/schemas/k8sTranslatedEntity'
        localSelectors:
          type: string
        namespace:
            $ref: '#/components/schemas/idNamePair'
        networkPolicyName:
          type: string
        networkPolicyUid:
          type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntities:
          type: array
          items:
            $ref: '#/components/schemas/k8sTranslatedEntity'
        remoteSelectors: 
          type: string
    k8sRuleDirection:
      description: |
        * '1' - Ingress
        * '2' - Egress
      enum:
        - 1
        - 2    
      format: int32
      type: integer
    k8sRulesList:
      type: object
      properties:
          items:
            type: array
            items:
                $ref: '#/components/schemas/k8sRule'
          scrollCursor:
            type: string
    k8sTranslatedEntity:
      type: object
      properties:
        hostNamespace:
          $ref: '#/components/schemas/idNamePair'
        application:
          type: string
        labelsMap:
          type: array
          items:
            $ref: '#/components/schemas/keyValuePair'
        subnet:
          type: string
        type:
          $ref: '#/components/schemas/k8sTranslatedEntityType'
    k8sTranslatedEntityType:
      description: |
        * 1 - Unsupported
        * 2 - Namespace
        * 3 - App
        * 4 - Label
        * 5 - App in Namespace
        * 6 - Label in Namespace
        * 7 - Namespace with constraints
        * 8 - Labels
        * 9 - Subnet
        * 10 - Any
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
    k8sWorkload:
      type: object
      properties:
        annotationsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        applicationsList:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        cluster:
          $ref: '#/components/schemas/idNamePair'
        id:
          type: string
        k8sUid:
          type: string
          format: uuid
        labelsList:
          items:
            type: array
            items:
              $ref: '#/components/schemas/keyValuePair'
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/idNamePair'
        podsCount:
          type: integer
        type:
          $ref: '#/components/schemas/k8sEntityType'
    k8sWorkloadEntity:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/k8sWorkload'
    k8sWorkloadsList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/k8sWorkload'
    keyValuePair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    licensedUserInfo:
      type: object
      properties:
        email:
          type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        lastConnected:
          $ref: '#/components/schemas/epochMillis'
        name:
          type: string
    licensesConfig:
      type: object
      properties:
        licenseState:
          type: object
          properties:
            configInfo:
              type: object
              properties:
                activitiesRetentionDays:
                  type: integer
                enableActivitySync:
                  type: boolean
                clientsLimit:
                  type: integer
                endTime:
                  $ref: '#/components/schemas/epochMillis'
                k8sLicenseMode:
                  description: '1-On, 2-Off, 3-Trial, 4-Trial_NoLimits, 5-On_WithLimits'
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                licenseMode:
                  description: '1-On, 2-Off, 3-Trial, 4-Trial_NoLimits, 5-On_WithLimits'
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                limit:
                  type: integer
                nodesLimit:
                  type: integer
                otsLimit:
                  type: integer
                serversLimit:
                  type: integer
                selfTrialAvailable:
                  type: boolean
                startTime:
                  $ref: '#/components/schemas/epochMillis'
            inUse:
              type: integer
            counts:
              type: object
              properties:
                nodesCount:
                  type: integer
                totalClientUsed:
                  type: integer
                totalOtsUsed:
                  type: integer
                totalServerUsed:
                  type: integer
    licenseConfigBody:
      type: object
      properties:
        licenseConfig:
          type: object
          properties:
            activitiesRetentionDays:
              type: integer
            clientsLimit:
              type: integer
            endTime:
              $ref: '#/components/schemas/epochMillis'
            licenseMode:
              type: integer
            otsLimit:
              type: integer
            selfTrialAvailable:
              type: boolean
              default: false
            serversLimit:
              type: integer
            startTime:
              $ref: '#/components/schemas/epochMillis'
    licensesInUse:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/licensedUserInfo'
    linuxBody:
      type: object
      properties:
        displayName:
          type: string
          example: linuxserver
        fqdn:
          type: string
          example: linuxserver.domain.local
      required:
        - displayName
        - fqdn
    linuxResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
    linuxScriptAvailable:
      type: object
      properties:
        userScriptAvailable:
          type: boolean
    listeningAddress:
      type: object
      properties:
        ipAddress:
          type: string
        tcpPorts:
          type: string
        udpPorts:
          type: string
    listeningPort:
      type: object
      properties:
        processName:
          type: string
        processId:
          type: integer
        username:
          type: string
        listeningAddressList:
          type: array
          items:
            $ref: '#/components/schemas/listeningAddress'
    listeningPortsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/listeningPort'
    loginBody:
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
    loginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        token:
          type: string
    logonActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/logonActivity'
        scrollCursor:
          type: string
    logonActivity:
      type: object
      properties:
        authenticationPackageName:
          type: string
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            identityProtectionState:
              type: integer
            networkProtectionState:
              type: integer
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            identityProtectionState:
              type: integer
            ip:
              type: string
            networkProtectionState:
              type: integer
            port:
              type: integer
        eventType:
          type: integer
        impersonationLevel:
          type: integer
        logonProvider:
          type: string
        logonType:
          type: integer
        processId:
          type: string
        processName:
          type: string
        recordId:
          type: integer
          format: int64
        subjectUser:
          $ref: '#/components/schemas/userConnectionEnrichment'
        targetUser:
          $ref: '#/components/schemas/userConnectionEnrichment'
        timestamp:
          $ref: '#/components/schemas/epochMillis'
    logonTypeSummary:
      type: object
      properties:
        count:
          type: integer
        logonType:
          type: integer
    maintenanceWindow:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        id:
          type: string
        isDefault:
          type: boolean
        name:
          type: string
        startTime:
          type: integer
          description: '0-24 in UTC. 1 would be 01:00-02:00UTC'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        weekday:
          type: integer
          description: 'Sunday is 1, Saturday is 7'
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
    maintenanceWindowBody:
      type: object
      properties:
        isDefault:
          type: boolean
        name:
          type: string
        startTime:
          type: integer
          description: '0-24 in UTC. 1 would be 01:00-02:00UTC'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
        weekday:
          type: integer
          description: 'Sunday is 1, Saturday is 7'
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
      required:
        - isDefault
        - name
        - startTime
        - weekday
    maintenanceWindowItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/maintenanceWindow'
    maintenanceWindowItems:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/maintenanceWindow'
    maintenanceWindowList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/maintenanceWindow'
    manageableOSType:
      description: |
        Possible osType:
          * '1' - Windows
          * '2' - Linux
          * '3' - Mac
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    managedAsset:
      type: object
      properties:
        entity:
          type: object
          anyOf:
            - $ref: '#/components/schemas/asset'
            - $ref: '#/components/schemas/group'
        entityId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    managedAssetsBody:
      type: object
      properties:
        entityIds:
          description: managed asset ids
          type: array
          items:
            type: string
            pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'a:a:ab124as2'
        permission:
          type: integer
          format: int32
    managedAssetsUpdateBody:
      type: object
      properties:
        managedEntityId:
          description: managed asset id
          type: string
          pattern: '^[ag]:[a-z]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'a:a:ab124as2'
        permission:
          type: integer
          format: int32
      required:
        - managedEntityId
        - permission
    managedAssetsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/managedAsset'
    manager:
      type: object
      properties:
        manager:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    managersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/manager'
    mfaMethods:
      description: |
        * '1' - SMS
        * '2' - Email
        * '3' - Duo
        * '4' - Browser
        * '5' - No MFA
        * '6' - MicrosoftAuthenticator
        * '7' - Okta
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    networkActivityMap:
      type: object
      properties:
        incoming:
          $ref: '#/components/schemas/networkActivityMapAnalysisResult'
        outgoing:
          $ref: '#/components/schemas/networkActivityMapAnalysisResult'
    networkActivityMapAnalysisResult:
      type: object
      properties:
        byRemoteAsset:
          type: object
          properties:
            clients:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
            clusters:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
            externalIps:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
            ot:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
            servers:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
            swtiches:
              type: array
              items:
                $ref: '#/components/schemas/networkAssetAnalysisRecord'
    networkAssetAnalysisRecord:
      type: object
      properties:
        aggregation:
          $ref: '#/components/schemas/networkAnalysisRecordData'
        connectionState:
          $ref: '#/components/schemas/connectionState'
        lastTimeSeen:
          type: string
          format: date-time
        localAssets:
          $ref: '#/components/schemas/networkAnalysisRecordData'
        occurred:
          type: integer
        ports:
          $ref: '#/components/schemas/networkAnalysisRecordData'
        remoteAssets:
          $ref: '#/components/schemas/networkAnalysisRecordData'
        srcProcesses:
          $ref: '#/components/schemas/networkAnalysisRecordData'
        users:
          $ref: '#/components/schemas/networkAnalysisRecordData'
    networkAnalysisRecordData:
      type: object
      properties:
        connectionStatesCounts:
          $ref: '#/components/schemas/connectionStatesCounts'
        count:
          type: integer
        id: 
          type: string
        name: 
          type: string
        port: 
          $ref: '#/components/schemas/protocolAndPortAndProcess'
        protectionType: 
          type: integer
    networkAnalysis:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        connectionState:
          $ref: '#/components/schemas/connectionState'
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
    nextBatch:
      type: object
      properties:
        networkIt:
          type: integer
          format: int64
        identityAssets:
          type: integer
          format: int64
        rpc:
          type: integer
          format: int64
    nonOtAssetType:
      description: |
        Possible asset status:
          * '1' - Client
          * '2' - Server
      type: integer
      format: int32
      enum:
        - 1
        - 2
    orderedReactivePolicies:
      type: array
      items:
        $ref: '#/components/schemas/reactivePolicy'
    otAssetBody:
      type: object
      properties:
        ipv4:
          type: string
          format: ipv4
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
        fqdn:
          type: string
        switchId:
          type: string
        interfaceName:
          type: string
      required:
        - ipv4
        - type
        - displayName
        - fqdn
      title: otAssetBody
      x-examples:
        example-1:
          value:
            ipv4: 192.168.0.1
            type: 4
            displayName: string
    otAssetEditBody:
      type: object
      properties:
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
          description: Display name of the asset
          example: Smart Bell
        fqdn:
          type: string
          description: Fully Qualified Domain Name
          example: rafa.com
        switchId:
          type: string
        interfaceName:
          type: string
        ipv4:
          type: string
          description: IPv4 address of the asset
          format: ipv4
          example: 10.0.1.49
      required:
        - type
        - displayName
        - fqdn
        - ipv4
      title: otAssetEditBody
    otLocation:
      type: object
      properties:
        interfaceName:
          type: string
        name:
          type: string
        switchId:
          type: string
    overridingProtectionPolicyBody:
      type: object
      properties:
        memberIds:
          type: array
          items:
            type: string
    portsList:
      type: array
      items:
        type: object
        properties:
          ports:
            type: string
          protocolType:
            $ref: '#/components/schemas/protocol'
    portSummary:
      type: object
      properties:
        count:
          type: integer
        port:
          type: object
          properties:
            protocol:
              $ref: '#/components/schemas/protocol'
            port:
              type: integer
    privateIpv4NetworksList:
      description: Collection of IPv4 subnets that are internal
      type: array
      items:
        type: string
        example: 192.168.0.0/24
    privateIpv6NetworksList:
      description: Collection of IPv6 subnets that are internal
      type: array
      items:
        type: string
        example: 'fd12:3456:789a:1::/64'
    PrivilegedPorts:
      type: string
      x-example: '1,3,4,5-8'
    processSummary:
      type: object
      properties:
        count:
          type: integer
        name:
          type: string
    profileResponse:
      type: object
      properties:
        envConfig:
          $ref: '#/components/schemas/envConfig'
        features:
          type: array
          items:
            type: string
        portalEnvUrl:
          type: string
        user:
          $ref: '#/components/schemas/profileUser'
    profileUser:
      type: object
      properties:
        activeEnvironmentId:
          type: string
          example: 17624a57-729e-4805-9703-67947d3bd888
        activeEnvironmentName:
          type: string
          example: office-windows
        distributor:
          type: string
        email:
          type: string
          example: team@zeronetworks.com
        fullName:
          type: string
          example: Zero Networks
        id:
          type: string
          example: 1f352ed0-86f1-454f-90a5-592c197c8000
        isExperimental:
          type: boolean
          example: true
        jobTitle:
          type: string
        role:
          $ref: '#/components/schemas/role'
        partnerName:
          type: string
        phone:
          type: string
          example: '+14242997613'
        platformType:
          type: integer
          example: 5
        portalUserType:
          type: integer
        tenantId:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/audienceType'
    protectionPoliciesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/protectionPolicy'
    protectionPolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
        existingMembersLearningDays:
          type: integer
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        groupId:
          type: string
        groupInfo:
          type: object
          properties:
            domain:
              type: string
            guid:
              type: string
            hasIdentityProtectionPolicy:
              type: boolean
            hasNetworkProtectionPolicy:
              type: boolean
            id:
              type: string
            name:
              type: string
        id:
          type: string
        initialProtectAt:
          $ref: '#/components/schemas/epochMillis'
        newMembersLearningDays:
          type: integer
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        policyType:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    protectionPolicyBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
        existingMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        groupId:
          type: string
        maintenanceWindowId:
          type: string
        newMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
      required:
        - groupId
        - existingMembersLearningDays
        - newMembersLearningDays
    protectionPolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/protectionPolicy'
    protectionPolicyUpdateBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
          default: false
        existingMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        id:
          type: string
        newMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
      required:
        - existingMembersLearningDays
        - newMembersLearningDays
        - enforceBlocks
    protectionState:
      description: |
        * '0' - Unspecified
        * '1' - Unsegmented
        * '2' - Unsegmenting
        * '3' - Segmented
        * '4' - Segmenting
        * '5' - Learning until
        * '6' - forced_unprotected
        * '7' - Unsegmenting' - Due to Policy
        * '8' - Segmented' - Due to Policy
        * '9' - Segmenting- Due to Policy
        * '10' - Learning until' - Due to Policy
        * '11' - Learning done
        * '12' - Learning done- Due to Policy
        * '13' - APPLYING_QUEUE_WITH_BLOCKS
        * '14' - APPLYING_QUEUE_WITH_BLOCKS_DUE_TO_POLICY
        * '15' - QUEUED_WITH_BLOCKS
        * '16' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY
        * '17' - QUEUED_WITH_BLOCKS_DONE
        * '18' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY_DONE
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
    protocol:
      description: |
        * '0' - HOPOPT
        * '1' - ICMP
        * '2' - IGMP
        * '3' - GGP
        * '4' - IPv4
        * '5' - ST
        * '6' - TCP
        * '7' - CBT
        * '8' - EGP
        * '9' - IGP
        * '10' - BBN-RCC-MON
        * '11' - NVP-II
        * '12' - PUP
        * '13' - ARGUS
        * '14' - EMCON
        * '15' - XNET
        * '16' - CHAOS
        * '17' - UDP
        * '18' - MUX
        * '19' - DCN-MEAS
        * '20' - HMP
        * '21' - PRM
        * '22' - XNS-IDP
        * '23' - TRUNK-1
        * '24' - TRUNK-2
        * '25' - LEAF-1
        * '26' - LEAF-2
        * '27' - RDP
        * '28' - IRTP
        * '29' - ISO-TP4
        * '30' - NETBLT
        * '31' - MFE-NSP
        * '32' - MERIT-INP
        * '33' - DCCP
        * '34' - 3PC
        * '35' - IDPR
        * '36' - XTP
        * '37' - DDP
        * '38' - IDPR-CMTP
        * '39' - TP++
        * '40' - IL
        * '41' - Embedded
        * '42' - SDRP
        * '43' - IPv6RoutingHeader
        * '44' - IPv6FragmentHeader
        * '45' - IDRP
        * '46' - RSVP
        * '47' - GRE
        * '48' - DSR
        * '49' - BNA
        * '50' - ESP
        * '51' - AH
        * '52' - I-NLSP
        * '53' - SwIPe
        * '54' - NARP
        * '55' - MOBILE
        * '56' - TLSP
        * '57' - SKIP
        * '58' - ICMPv6
        * '59' - IPv6NonExtHeader
        * '60' - IPv6DestinationOptions
        * '61' - Host-interanl
        * '62' - CFTP
        * '63' - local-network
        * '64' - SAT-EXPAK
        * '65' - KRYPTOLAN
        * '66' - RVD
        * '67' - IPPC
        * '68' - distributed-file-system
        * '69' - SAT-MON
        * '70' - VISA
        * '71' - IPCU
        * '72' - CPNX
        * '73' - CPHB
        * '74' - WSN
        * '75' - PVP
        * '76' - BR-SAT-MON
        * '77' - ND
        * '78' - WB-MON
        * '79' - WB-EXPAK
        * '80' - ISO-IP
        * '81' - VMTP
        * '82' - SECURE-VMTP
        * '83' - VINES
        * '84' - IPTM
        * '85' - NSFNET-IGP
        * '86' - DGP
        * '87' - TCF
        * '88' - EIGRP
        * '89' - OSPF
        * '90' - Sprite-RPC
        * '91' - LARP
        * '92' - MTP
        * '93' - AX.25
        * '94' - OS
        * '95' - MICP
        * '96' - SCC-SP
        * '97' - ETHERIP
        * '98' - ENCAP
        * '99' - private-encryption
        * '100' - GMTP
        * '101' - IFMP
        * '102' - PNNI
        * '103' - PIM
        * '104' - ARIS
        * '105' - SCPS
        * '106' - QNX
        * '107' - A/N
        * '108' - IPComp
        * '109' - SNP
        * '110' - Compaq-Peer
        * '111' - IPX-in-IP
        * '112' - VRRP
        * '113' - PGM
        * '114' - 0-hop
        * '115' - L2TP
        * '116' - DDX
        * '117' - IATP
        * '118' - STP
        * '119' - SRP
        * '120' - UTI
        * '121' - SMP
        * '122' - SM
        * '123' - PTP
        * '124' - IS-IS-over-IPv4
        * '125' - FIRE
        * '126' - CRTP
        * '127' - CRUDP
        * '128' - SSCOPMCE
        * '129' - IPLT
        * '130' - SPS
        * '131' - PIPE
        * '132' - SCTP
        * '133' - FC
        * '134' - RSVP-E2E-IGNORE
        * '135' - Mobility-Header
        * '136' - UDPLite
        * '137' - MPLS-in-IP
        * '138' - manet
        * '139' - HIP
        * '140' - Shim6
        * '141' - WESP
        * '142' - ROHC
        * '143' - Ethernet
        * '144' - 144 (custom)
        * '145' - 145 (custom)
        * '146' - 146 (custom)
        * '147' - 147 (custom)
        * '148' - 148 (custom)
        * '149' - 149 (custom)
        * '150' - 150 (custom)
        * '151' - 151 (custom)
        * '152' - 152 (custom)
        * '153' - 153 (custom)
        * '154' - 154 (custom)
        * '155' - 155 (custom)
        * '156' - 156 (custom)
        * '157' - 157 (custom)
        * '158' - 158 (custom)
        * '159' - 159 (custom)
        * '160' - 160 (custom)
        * '161' - 161 (custom)
        * '162' - 162 (custom)
        * '163' - 163 (custom)
        * '164' - 164 (custom)
        * '165' - 165 (custom)
        * '166' - 166 (custom)
        * '167' - 167 (custom)
        * '168' - 168 (custom)
        * '169' - 169 (custom)
        * '170' - 170 (custom)
        * '171' - 171 (custom)
        * '172' - 172 (custom)
        * '173' - 173 (custom)
        * '174' - 174 (custom)
        * '175' - 175 (custom)
        * '176' - 176 (custom)
        * '177' - 177 (custom)
        * '178' - 178 (custom)
        * '179' - 179 (custom)
        * '180' - 180 (custom)
        * '181' - 181 (custom)
        * '182' - 182 (custom)
        * '183' - 183 (custom)
        * '184' - 184 (custom)
        * '185' - 185 (custom)
        * '186' - 186 (custom)
        * '187' - 187 (custom)
        * '188' - 188 (custom)
        * '189' - 189 (custom)
        * '190' - 190 (custom)
        * '191' - 191 (custom)
        * '192' - 192 (custom)
        * '193' - 193 (custom)
        * '194' - 194 (custom)
        * '195' - 195 (custom)
        * '196' - 196 (custom)
        * '197' - 197 (custom)
        * '198' - 198 (custom)
        * '199' - 199 (custom)
        * '200' - 200 (custom)
        * '201' - 201 (custom)
        * '202' - 202 (custom)
        * '203' - 203 (custom)
        * '204' - 204 (custom)
        * '205' - 205 (custom)
        * '206' - 206 (custom)
        * '207' - 207 (custom)
        * '208' - 208 (custom)
        * '209' - 209 (custom)
        * '210' - 210 (custom)
        * '211' - 211 (custom)
        * '212' - 212 (custom)
        * '213' - 213 (custom)
        * '214' - 214 (custom)
        * '215' - 215 (custom)
        * '216' - 216 (custom)
        * '217' - 217 (custom)
        * '218' - 218 (custom)
        * '219' - 219 (custom)
        * '220' - 220 (custom)
        * '221' - 221 (custom)
        * '222' - 222 (custom)
        * '223' - 223 (custom)
        * '224' - 224 (custom)
        * '225' - 225 (custom)
        * '226' - 226 (custom)
        * '227' - 227 (custom)
        * '228' - 228 (custom)
        * '229' - 229 (custom)
        * '230' - 230 (custom)
        * '231' - 231 (custom)
        * '232' - 232 (custom)
        * '233' - 233 (custom)
        * '234' - 234 (custom)
        * '235' - 235 (custom)
        * '236' - 236 (custom)
        * '237' - 237 (custom)
        * '238' - 238 (custom)
        * '239' - 239 (custom)
        * '240' - 240 (custom)
        * '241' - 241 (custom)
        * '242' - 242 (custom)
        * '243' - 243 (custom)
        * '244' - 244 (custom)
        * '245' - 245 (custom)
        * '246' - 246 (custom)
        * '247' - 247 (custom)
        * '248' - 248 (custom)
        * '249' - 249 (custom)
        * '250' - 250 (custom)
        * '251' - 251 (custom)
        * '252' - 252 (custom)
        * '253' - 253 (custom)
        * '254' - 254 (custom)
        * '255' - Raw
        * '256' - Any
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
        - 142
        - 143
        - 144
        - 145
        - 146
        - 147
        - 148
        - 149
        - 150
        - 151
        - 152
        - 153
        - 154
        - 155
        - 156
        - 157
        - 158
        - 159
        - 160
        - 161
        - 162
        - 163
        - 164
        - 165
        - 166
        - 167
        - 168
        - 169
        - 170
        - 171
        - 172
        - 173
        - 174
        - 175
        - 176
        - 177
        - 178
        - 179
        - 180
        - 181
        - 182
        - 183
        - 184
        - 185
        - 186
        - 187
        - 188
        - 189
        - 190
        - 191
        - 192
        - 193
        - 194
        - 195
        - 196
        - 197
        - 198
        - 199
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 209
        - 210
        - 211
        - 212
        - 213
        - 214
        - 215
        - 216
        - 217
        - 218
        - 219
        - 220
        - 221
        - 222
        - 223
        - 224
        - 225
        - 226
        - 227
        - 228
        - 229
        - 230
        - 231
        - 232
        - 233
        - 234
        - 235
        - 236
        - 237
        - 238
        - 239
        - 240
        - 241
        - 242
        - 243
        - 244
        - 245
        - 246
        - 247
        - 248
        - 249
        - 250
        - 251
        - 252
        - 253
        - 254
        - 255
        - 256
    protocolAndPortAndProcess:
      type: object
      properties:
        protocol:
          $ref: '#/components/schemas/protocol'
        port:
          type: integer
        process:
          type: string
    queueAssetBody:
      type: object
      properties:
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - queueDays
    queueAssetExtendBody:
      type: object
      properties:
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - extendByDays
    queueAssetIdentityBody:
      type: object
      properties:
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - queueDays
    queueAssetIdentityExtendBody:
      type: object
      properties:
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - extendByDays
    queueExtendBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    queueExtendIdentityBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    queueExtendRPCBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    reactivePoliciesStatistics:
      type: object
      properties:
        reactivePoliciesStatistics:
          type: object
          properties:
            totalCount:
              type: integer
    reactivePolicy:
      type: object
      properties:
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          type: string
        createdByName:
          type: string
          example: User Name
        changeTicket:
          type: string
        context:
          type: integer
        description:
          type: string
        dstEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        dstPort:
          type: string
          example: '3389'
        dstProcessNames:
          type: array
          items:
            type: string
            example: 'c:\test.exe'
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        excludedSrcEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        name:
          type: string
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          description: '6=TCP, 17=UDP'
          type: integer
          format: int32
          enum:
            - 6
            - 17
        restrictToOriginatedUser:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcProcessNames:
          type: array
          items:
            type: string
            example: system
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        state:
          $ref: '#/components/schemas/reactivePolicyState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          type: string
        updatedByName:
          type: string
          example: User Name
        useDefaultIdp:
          type: boolean
        useOccasionalMfa:
          type: boolean
    reactivePolicyDistribution:
      type: object
      properties:
        mfaDistribution:
          type: array
          items:
            type: object
            properties:
              timestamp:
                $ref: '#/components/schemas/epochMillis'
              approved:
                type: integer
              rejected:
                type: integer
      x-examples:
        example-1:
          mfaDistribution:
            - timestamp: 1654905600000
              approved: 0
              rejected: 0
            - timestamp: 1654992000000
              approved: 5
              rejected: 0
            - timestamp: 1655078400000
              approved: 7
              rejected: 0
            - timestamp: 1655164800000
              approved: 13
              rejected: 0
            - timestamp: 1655251200000
              approved: 7
              rejected: 0
            - timestamp: 1655337600000
              approved: 2
              rejected: 0
            - timestamp: 1655424000000
              approved: 6
              rejected: 0
            - timestamp: 1655510400000
              approved: 0
              rejected: 0
            - timestamp: 1655596800000
              approved: 1
              rejected: 0
            - timestamp: 1655683200000
              approved: 7
              rejected: 0
            - timestamp: 1655769600000
              approved: 3
              rejected: 0
            - timestamp: 1655856000000
              approved: 7
              rejected: 0
            - timestamp: 1655942400000
              approved: 4
              rejected: 0
            - timestamp: 1656028800000
              approved: 4
              rejected: 0
            - timestamp: 1656115200000
              approved: 0
              rejected: 0
            - timestamp: 1656201600000
              approved: 2
              rejected: 0
            - timestamp: 1656288000000
              approved: 4
              rejected: 0
            - timestamp: 1656374400000
              approved: 8
              rejected: 0
            - timestamp: 1656460800000
              approved: 7
              rejected: 0
            - timestamp: 1656547200000
              approved: 9
              rejected: 0
            - timestamp: 1656633600000
              approved: 3
              rejected: 0
            - timestamp: 1656720000000
              approved: 0
              rejected: 0
            - timestamp: 1656806400000
              approved: 4
              rejected: 1
            - timestamp: 1656892800000
              approved: 2
              rejected: 0
            - timestamp: 1656979200000
              approved: 3
              rejected: 0
            - timestamp: 1657065600000
              approved: 16
              rejected: 2
            - timestamp: 1657152000000
              approved: 17
              rejected: 0
            - timestamp: 1657238400000
              approved: 13
              rejected: 0
            - timestamp: 1657324800000
              approved: 0
              rejected: 0
            - timestamp: 1657411200000
              approved: 3
              rejected: 0
            - timestamp: 1657497600000
              approved: 4
              rejected: 0
    reactivePolicyInboundBody:
      type: object
      properties:
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
        changeTicket:
          type: string
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        identityProtectionCategoryList:
          type: array
          items:
            $ref: '#/components/schemas/identityProtectionCategory'
        name:
          type: string
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          $ref: '#/components/schemas/reactivePolicyState'
        useDefaultIdp:
          type: boolean
        useOccasionalMfa:
          type: boolean
      required:
        - dstEntityInfo
        - dstPort
        - dstProcessNames
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - state
        - additionalPortsList
    reactivePolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyMethods:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
    reactivePolicyOutboundBody:
      type: object
      properties:
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
        changeTicket:
          type: string
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        name:
          type: string
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        restrictToOriginatedUser:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          $ref: '#/components/schemas/reactivePolicyState'
        useDefaultIdp:
          type: boolean
        useOccasionalMfa:
          type: boolean
      required:
        - dstEntityInfo
        - dstPort
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - state
        - additionalPortsList
    reactivePolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyState:
      description: |
        * '1' - Enabled
        * '2' - Disabled
      type: integer
      format: int32
      enum:
        - 1
        - 2
    requestedFilter:
      type: object
      properties:
        id:
          type: string
        excludeValues:
          type: array
          items:
            type: string
        includeValues:
          type: array
          items:
            type: string
      required:
        - id
      title: requestedFilter
    role:
      description: |
        dictionary:
          * '0' ROLE_UNSPECIFIED
          * '1' ROLE_ADMIN
          * '2' ROLE_VIEWER
          * '3' ROLE_REGULAR
          * '4' ROLE_MACHINE_FULL_ACCESS
          * '5' ROLE_MACHINE_READ_ONLY
          * '6' ROLE_SELF_SERVICE
          * '7' ROLE_CLOUD_CONNECTOR_PROVISIONING
          * '8' ROLE_JAMF_ASSET
          * '9' ROLE_ASSET_MANAGER
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
    roleBody:
      type: object
      properties:
        role:
          description: '1 - Viewer, 2 - Admin'
          type: integer
    roleCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rolesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rpcActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcActivity'
        scrollCursor:
          type: string
    rpcActivity:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          type: integer
        protocolType:
          type: integer
        user:
          $ref: '#/components/schemas/userConnectionEnrichment'
        userName:
          type: string
        interfaceUuid:
          type: string
        opNumber:
          type: integer
        status:
          type: integer
        srcAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            ip:
              type: string
        srcPort:
          type: integer
        dstAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            ip:
              type: string
        dstEndpoint:
          type: object
          properties:
            port:
              type: integer
        dstEventRecordId:
          type: integer
          format: int64
        dstProcessId:
          type: integer
        dstProcessNames:
          type: string
        dstProcessPath:
          type: string
    rpcFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        placeholder:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        allowedCharactersRegex:
          type: string
        selections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    rpcFiltersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcFilter'
    rpcProtectionState:
      description: |
        * '0' - Unspecified
        * '1' - Unsegmented
        * '2' - Unsegmenting
        * '3' - Segmented
        * '4' - Segmenting
        * '5' - Learning until
        * '6' - forced_unprotected
        * '7' - Unsegmenting' - Due to Policy
        * '8' - Segmented' - Due to Policy
        * '9' - Segmenting- Due to Policy
        * '10' - Learning until' - Due to Policy
        * '11' - Learning done
        * '12' - Learning done- Due to Policy
        * '13' - APPLYING_QUEUE_WITH_BLOCKS
        * '14' - APPLYING_QUEUE_WITH_BLOCKS_DUE_TO_POLICY
        * '15' - QUEUED_WITH_BLOCKS
        * '16' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY
        * '17' - QUEUED_WITH_BLOCKS_DONE
        * '18' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY_DONE
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
    rpcProtocolsList:
      type: array
      items:
        type: integer
      description: |
        * NULL - Any
        * '1' - Rules RPC over SMB
        * '2' - Rules RPC over TCP
    rpcRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        changeTicket:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        excludedAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        interfaceUuidsList:
          $ref: '#/components/schemas/interfaceUuidsList'
        localAssetId:
          type: string
        localAssetInfo:
          $ref: '#/components/schemas/idNamePair'
        name:
          type: string
        opNumbersList:
          type: array
          items:
            type: integer
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        protocolsList:
          $ref: '#/components/schemas/rpcProtocolsList'
        remoteAssetIdsList:
          type: array
          items:
            type: string
        remoteAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        ruleClass:
          $ref: '#/components/schemas/ruleClass'
        state:
          $ref: '#/components/schemas/ruleState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        userIdsList:
          type: array
          items:
            type: string
        userInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    rpcRuleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        changeTicket:
          type: string
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        interfaceUuidsList:
          $ref: '#/components/schemas/interfaceUuidsList'
        localAssetId:
          type: string
        name:
          type: string
        opNumbersList:
          type: array
          items:
            type: integer
        protocolsList:
          $ref: '#/components/schemas/rpcProtocolsList'
        remoteAssetIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        userIdsList:
          type: array
          items:
            type: string
      required:
        - action
        - description
        - excludedAssetIdsList
        - interfaceUuidsList
        - localAssetId
        - opNumbersList
        - protocolsList
        - remoteAssetIdsList
        - state
        - userIdsList
    rpcRuleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rpcRule'
    rpcRulesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcRule'
    rule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        aeOverridden:
          type: boolean
        activitiesCount:
          type: integer
          format: int32
        approvedAt:
          $ref: '#/components/schemas/epochMillis'
        approvedBy:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        changeTicket:
          type: string
        context:
          type: integer
        deletedAt:
          $ref: '#/components/schemas/epochMillis'
        deletedBy:
          $ref: '#/components/schemas/idNamePair'
        description:
          type: string
        direction:
          $ref: '#/components/schemas/ruleDirection'
        excludedEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
          format: uuid
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        localEntityInfos:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/asset'
              - $ref: '#/components/schemas/group'
        multipleLocalEntityIdsList:
          type: array
          items:
            type: string
        name:
          type: string
        parentId:
          type: string
        parentSwitchRuleId:
          type: string
        parentSwitchRuleType:
          type: integer
          format: int32
        parentType:
          type: integer
          format: int32
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        ruleclass:
          $ref: '#/components/schemas/ruleClass'
        ruleReview:
          $ref: '#/components/schemas/ruleReviewReason'
        servicesList:
          type: array
          items:
            type: string
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          $ref: '#/components/schemas/ruleState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        isRejectOnLinux:
          type: boolean
    ruleAction:
      description: |
        * 1 - Allow
        * 2 - Block
      type: integer
      format: int32
      enum:
        - 1
        - 2
    ruleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        changeTicket:
          type: string
        description:
          type: string
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        name:
          type: string
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        servicesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          $ref: '#/components/schemas/ruleState'
        context:
          type: integer
          format: int32
      required:
        - action
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleClass:
      description: |
        * '1' - Trivial
        * '2' - Permissive
        * '3' - Privileged
        * '4' - Critical
        * '5' - System
        * '6' - Preventative
        * '8' - Dangerous
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 8
    ruleDirection:
      description: |
        * '1' - Inbound
        * '2' - Outbound
        * '3' - Both
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    ruleDistribution:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/distribution'
    ruleDuration:
      description: |
        * '1' - Hour
        * '2' - Day
        * '3' - Week
        * '4' - Month
        * '5' - Never
        * '6' - 4 hours
        * '7' - 12 hours
        * '8' - 8 hours
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
    ruleFilter:
      type: object
      properties:
        id:
          type: string
        includeValues:
          type: array
          items:
            type: string
    ruleItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rule'
    ruleMatch:
      type: object
      properties:
        ruleId:
          description: Id of the Rule
          type: string
          format: uuid
          example: b4565b6b-d20f-407d-9075-e354da6ffc64
        updateId:
          type: number
    ruleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rule'
    ruleReviewApproveWithChanges:
      description: Mandatory object for rule review approve_with_changes / reject.
      type: object
      properties:
        review:
          $ref: '#/components/schemas/ruleReviewReason'
        ruleInfo:
          $ref: '#/components/schemas/ruleReviewBody'
      required:
        - review
        - ruleInfo
      x-examples:
        example-1:
          review:
            reason: 4
          ruleInfo:
            action: 1
            description: string
            direction: 1
            excludedLocalIdsList:
              - string
            expiresAt: 0
            localEntityId: string
            localProcessesList:
              - string
            portsList:
              - ports: string
              - protocolType: 0
            remoteEntityIdsList:
              - string
            state: 1
            updatedAt: 0
            updatedBy:
              id: string
              name: string
    ruleReviewBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        description:
          type: string
        direction:
          $ref: '#/components/schemas/ruleDirection'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        servicesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
      required:
        - action
        - direction
        - expiresAt
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleReviewReason:
      description: |-
        Mandatory object for rule review approve_with_changes / reject.

        reason: {
            HUMAN_TRAFFIC_COVERED_BY_MFA = 1,
            TIGHTEN_RULE_SCOPE = 2,
            MISSING_PORT_OR_PROCESS = 3,
            AFFECTED_ENTITIES_CONTAINED_IN_AN_EXISTING_GROUP = 4,
            REDUNDANT_RULE = 5,
            TRAFFIC_SHOULD_BE_BLOCKED = 6,
            OTHER = 7
        }
      type: object
      properties:
        reason:
          type: integer
        details:
          description: 'Optional if reason != OTHER(7), mandatory if reason == OTHER(7)'
          type: string
      required:
        - reason
      x-examples:
        example-1:
          review:
            reason: 7
            details: 'reason == 7 means OTHER, so details field is mandatory'
        example-2:
          review:
            reason: 2
    rulesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rule'
        count:
          type: integer
    ruleState:
      description: |
        * '1' - Enabled
        * '2' - Disabled
        * '3' - Deleted By User
        * '4' - Pending Review
        * '5' - Pending Review Auto
        * '6' - Rejected by User
        * '7' - Excluded by User
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    ruleStatistics:
      type: object
      properties:
        aiStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        mfaStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        sspStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        portalStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
    ruleStatisticsObject:
      type: object
      properties:
        enabledCount:
          type: integer
        disabledCount:
          type: integer
        pendingReviewCount:
          type: integer
    ruleStatisticsType:
      type: object
      properties:
        inboundAllow:
          $ref: '#/components/schemas/ruleStatisticsObject'
        inboundBlock:
          $ref: '#/components/schemas/ruleStatisticsObject'
        outboundAllow:
          $ref: '#/components/schemas/ruleStatisticsObject'
        outboundBlock:
          $ref: '#/components/schemas/ruleStatisticsObject'
    savedFilter:
      type: object
      properties:
        excludeValues:
          type: array
          items:
            type: string
        id:
          type: string
        includeValues:
          type: array
          items:
            type: string
      required:
        - id
    savedFilterBody:
      type: object
      properties:
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        name:
          type: string
        permission:
          $ref: '#/components/schemas/savedFilterPermission'
      required:
        - description
        - filters
        - name
        - permission
    savedFilterId:
      type: object
      properties:
        userFilterId:
          type: string
    savedFilterPermission:
      type: string
      description: |
        * 'private' - only the creator can see the filter
        * 'public' - all users can see the filter
    savedFilterObject:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        createdById:
          type: string
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        id:
          type: string
        name:
          type: string
        permission:
          $ref: '#/components/schemas/savedFilterPermission'
        updatedAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
    savedFiltersList:
      type: object
      properties:
        private:
          type: array
          items:
            $ref: '#/components/schemas/savedFilterObject'
        public:
          type: array
          items:
            $ref: '#/components/schemas/savedFilterObject'
    savedFilterUpdateBody:
      type: object
      properties:
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        name:
          type: string
      required:
        - description
        - filters
        - name
    searchAssetsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        count:
          type: integer
        nextCursor:
          type: string
        nextOffset:
          type: integer
    searchGroupsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
        count:
          type: integer
        nextCursor:
          type: string
        nextOffset:
          type: integer
    searchUsersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/user'
        count:
          type: integer
        nextCursor:
          type: string
        nextOffset:
          type: integer
    session:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        clientPrivateIp:
          type: string
          format: ipv4
        clientVersion:
          type: string
        connectedSince:
          $ref: '#/components/schemas/epochMillis'
        connectionState:
          type: integer
        currentPublicIp:
          type: string
          format: ipv4
        id:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        lastLogon:
          $ref: '#/components/schemas/epochMillis'
        roleId:
          type: string
        server:
          $ref: '#/components/schemas/idNamePair'
        user:
          $ref: '#/components/schemas/idNamePair'
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
    sessionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/session'
    setAssetType:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/nonOtAssetType'
      required:
        - type
    setOSType:
      type: object
      properties:
        assetIds:
          type: array
          items:
            type: string
        osType:
          $ref: '#/components/schemas/manageableOSType'
      required:
        - assetIds
        - osType
    setOutboundRestriction:
      type: object
      properties:
        assetIds:
          type: array
          items:
            type: string
          maxItems: 100
        outboundRestriction:
          type: integer
          description: |
            * 1 - NO_RESTRICTION
            * 2 - RESTRICTED_INTERNAL
            * 3 - RESTRICTED_EXTERNAL
            * 4 - RESTRICTED_INTERNAL_EXTERNAL
          enum:
            - 1
            - 2
            - 3
            - 4
      required:
        - assetIds
        - outboundRestriction
    settingsActivities:
      type: object
      properties:
        config:
          type: object
          properties:
            shouldFilterExternalTraffic:
              description: Disable/Enable external traffic collection
              type: boolean
    settingsActivitiesBody:
      type: object
      properties:
        shouldFilterExternalTraffic:
          description: Disable/Enable external traffic collection
          type: boolean
      required:
        - shouldFilterExternalTraffic
    settingsAdForest:
      type: object
      properties:
        activeDirectoryInfo:
          $ref: '#/components/schemas/settingsAdInfo'
        allowNtlmFallback:
          type: boolean
        automationGroups:
          $ref: '#/components/schemas/settingsProtectionAutomationResponse'
        forestId:
          type: string
        linuxAutomationGroups:
          $ref: '#/components/schemas/settingsLinuxAutomationResponse'
        secondaryDomains:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdSecondaryBody'
        usePrimaryLinuxUserForAllDomains:
          type: boolean
        usePrimaryUserForAllDomains:
          type: boolean
    settingsAdInfo:
      type: object
      properties:
        allowInstallLinuxPackages:
          type: boolean
        domainControllerFqdn:
          description: Domain Controller from AD Domain
          type: string
          example: dc.zeronetworks.com
        domainName:
          description: FQDN of the AD domain
          type: string
          example: zeronetworks.com
        useLdaps:
          description: Use LDAP or LDAPs
          type: boolean
        userFqdn:
          description: Service Account for Zero Networks
          type: string
          example: znremotemanagement
    settingsAdInfoBody:
      type: object
      properties:
        primaryDomainConfig:
          type: object
          properties:
            domainControllerFqdn:
              description: Domain Controller from AD Domain
              type: string
              example: dc.zeronetworks.com
            domainName:
              description: FQDN of the AD domain
              type: string
              example: zeronetworks.com
            password:
              type: string
              description: password for the service account
            useLdaps:
              description: Use LDAP or LDAPs
              type: boolean
            userFqdn:
              description: Service Account for Zero Networks
              type: string
              example: znremotemanagement
          required:
            - domainControllerFqdn
            - domainName
            - password
            - useLdaps
            - userFqdn
        usePrimaryUserForAllDomains:
          type: boolean
        allowNtlmFallback:
          type: boolean
      required:
        - primaryDomainConfig
        - usePrimaryUserForAllDomains
        - allowNtlmFallback
    settingsAdInfoResponse:
      type: object
      properties:
        forests:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdForest'
    settingsAdLinuxAutomationGroupsBody:
      type: object
      properties:
        monitoredGroupId:
          type: string
      required:
        - monitoredGroupId
    settingsAdLinuxBody:
      type: object
      properties:
        adLinuxConfig:
          type: object
          properties:
            allowInstallPackages:
              type: boolean
            password:
              type: string
            privateKey:
              type: string
            username:
              type: string
          required:
            - allowInstallPackages
            - password
            - privateKey
            - username
        useForAllDomains:
          type: boolean
      required:
        - adLinuxConfig
    settingsAdSecondaryBody:
      type: object
      properties:
        secondaryDomainConfig:
          type: object
          properties:
            domainControllerFqdn:
              type: string
              example: dc.child.zeronetworks.com
            domainName:
              type: string
              example: child.zeronetworks.com
      required:
        - secondaryDomainConfig
    getOuConfigs:
      type: object
      properties:
        ouInfo:
          type: object
          properties:
            ouConfigs:
              type: array
              items:
                type: object
                properties:
                  ouName:
                    type: string
                  userFqdn:
                    type: string
                  password:
                    type: string
                required:
                  - ouName
                  - userFqdn
          required:
            - ouConfigs
      required:
        - ouInfo
    ouConfig:
      type: object
      properties:
        ouName:
          type: string
        userFqdn:
          type: string
        password:
          type: string
      required:
        - ouName
        - userFqdn
        - password
    createOuConfigs:
      type: object
      properties:
        ouConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ouConfig'
      required:
        - ouConfigs
    editOuConfigs:
      type: object
      properties:
        ouConfigs:
          type: array
          items:
            $ref: '#/components/schemas/ouConfig'
      required:
        - ouConfigs
    deleteOuConfigs:
      type: object
      properties:
        ouNames:
          type: array
          items:
            type: string
      required:
        - ouNames
    settingsAdSyncInfoResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/settingsAdSyncInfoResponseForestItem'
    settingsAdSyncInfoResponseDcItem:
      type: object
      properties:
        dcFqdn:
          type: string
        lastUpdateTime:
          $ref: '#/components/schemas/epochMillis'
        lastUsn:
          type: integer
          format: int32
    settingsAdSyncInfoResponseDomainItem:
      type: object
      properties:
        dcToSyncInfo:
          type: object
          properties:
            errorType:
              type: integer
            serverType:
              type: integer
            lastErrorMsg:
              type: string
          additionalProperties:
            $ref: '#/components/schemas/settingsAdSyncInfoResponseDcItem'
    settingsAdSyncInfoResponseForestItem:
      type: object
      properties:
        domainToSyncInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/settingsAdSyncInfoResponseDomainItem'
    settingsAdWindowsAutomationGroupsBody:
      type: object
      properties:
        monitoredGroupId:
          type: string
        protectedGroupId:
          type: string
    settingsAiRuleReview:
      type: object
      properties:
        ruleClassesList:
          type: array
          items:
            type: integer
        postponeProtection:
          type: boolean
      x-examples:
        example-1:
          ruleClassesList:
            - 1
            - 6
    settingsCyberarkConfig:
      type: object
      properties:
        address:
          type: string
        cyberArkLogonType:
          type: integer
        secretsType:
          type: integer
        userName:
          type: string
        vaultType:
          type: integer
    settingsCyberarkConfigBody:
      type: object
      properties:
        address:
          type: string
        cyberArkLogonType:
          type: integer
          description: |
            * 1 - CyberArk
            * 2 - LDAP
            * 3 - Radius
            * 4 - Windows
          enum:
            - 1
            - 2
            - 3
            - 4 
        password:
          type: string
        secretsType:
          type: integer
          description: |
            * 1 - Plain
            * 2 - RDP File
          enum:
            - 1
            - 2
        userName:
          type: string
        vaultType:
          type: integer
          description: |
            * 1 - CyberArk
          enum:
            - 1
      required:
        - address
        - cyberArkLogonType
        - password
        - secretsType
        - userName
        - vaultType
    settingsCyberarkConfigTest:
      type: object
      properties:
        errMsg:
          type: string
        success:
          type: boolean
    settingsAnsible:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
    settingsAnsibleBody:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        password:
          description: password to access Ansible API
          type: string
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
        clientSecret:
          description: OAuth Client Secret
          type: string
      required:
        - clientId
        - credentialsName
        - disableCertificateValidation
        - password
        - url
        - username
        - clientSecret
    settingsAntitamper:
      type: object
      properties:
        config:
          type: object
          properties:
            auditCooldownMinutes:
              type: integer
    settingsAntitamperBody:
      type: object
      properties:
        auditCooldownMinutes:
          type: integer
      required:
        - auditCooldownMinutes
    settingsAssetsManagersBody:
      type: object
      properties:
        entityIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrAssetId'
        managerIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrUserId'
    sessionTtl:
      type: object
      properties:
        item:
          type: object
          properties:
            portalTokenTtl:
              description: Portal session token timeout (in minutes)
              type: integer
      title: sessionTtl
    sessionTtlBody:
      type: object
      properties:
        portalTokenTtl:
          description: Portal session token timeout (in minutes)
          type: integer
      title: sessionTtlBody
    allowedIps:
      type: object
      properties:
        item:
          type: object
          properties:
            allowedIPs:
              description: Portal allowed ips and subnets
              type: array
              items:
                type: string
      title: allowedIps
    allowedIpsBody:
      type: object
      properties:
        allowedIPs:
          description: Portal allowed ips and subnets
          type: array
          items:
            type: string
      required:
        - allowedIPs
      title: allowedIpsBody
    settingsAzureAd:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsAzureAdBody:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsClaroty:
      type: object
      properties:
        apiUrl:
          type: string
        errorType:
          type: integer
    settingsClarotyBody:
      type: object
      properties:
        apiUrl:
          type: string
        token:
          type: string
      required:
        - apiUrl
        - token
    settingsBreakGlass:
      type: object
      properties:
        agentConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
            allowRpc:
              type: boolean
        trustConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
            allowRpc:
              type: boolean
    settingsBreakGlassBody:
      type: object
      properties:
        agentConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
            allowRpc:
              type: boolean
          required:
            - allowInbound
            - allowOutbound
            - allowIdentity
            - allowRpc
        trustConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
            allowRpc:
              type: boolean
          required:
            - allowInbound
            - allowOutbound
            - allowIdentity
            - allowRpc
      required:
        - agentConfig
        - trustConfig
    settingsBreakGlassMFA:
      type: object
      properties:
        enabled:
          type: boolean
    settingsBreakGlassMFABody:
      type: object
      properties:
        isBreakGlassMfaEnabled:
          type: boolean
      required:
        - isBreakGlassMfaEnabled
    settingsBreakGlassSwitches:
      type: object
      properties:
        allowNetworkTraffic:
          type: boolean
        stopMonitoring:
          type: boolean
    settingsBreakGlassSwitchesBody:
      type: object
      properties:
        allowNetworkTraffic:
          type: boolean
        stopMonitoring:
          type: boolean
      required:
        - allowNetworkTraffic
        - stopMonitoring
    settingsClientSubnets:
      type: object
      properties:
        config:
          type: object
          properties:
            privateIpv4NetworksList:
              $ref: '#/components/schemas/privateIpv4NetworksList'
    settingsClientSubnetsBody:
      type: object
      properties:
        privateIpv4NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
      required:
        - privateIpv4NetworksList
    settingsClusterStrategy:
      type: object
      properties:
        preferredDeploymentId:
          type: string
        strategy:
          type: integer
    settingsClusterStrategyBody:
      type: object
      properties:
        preferredDeploymentId:
          type: string
        strategy:
          type: integer
      required:
        - preferredDeploymentId
        - strategy
    settingsConnectClientAutoUpdate:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
    settingsConnectClientAutoUpdateBody:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
      required:
        - clientAutoUpdate
    settingsCustomerUserBody:
      type: object
      properties:
        permission:
          type: integer
      required:
        - permission
    settingsCustomerUserInviteBody:
      type: object
      properties:
        email:
          type: string
        permission:
          $ref: '#/components/schemas/userRole'
      required:
        - email
        - permission
    settingsDay2Automation:
      type: object
      properties:
        state:
          type: boolean
    settingsDay2AutomationBody:
      type: object
      properties:
        state:
          type: boolean
      required:
        - state
    settingsDomain:
      type: object
      properties:
        ip:
          type: string
        url:
          type: string
        urlType:
          type: integer
    settingsDomains:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsDomain'
    settingsEventsReceiverConfig:
      type: object
      properties:
        config:
          type: object
          properties:
            auditsEndpoint:
              type: string
            identityActivitiesEndpoint:
              type: string
            networkActivitiesEndpoint:
              type: string
            receiverType:
              type: integer
            receiverConfig:
                oneOf:
                  - $ref: '#/components/schemas/settingsEventsReceiverConfigElastic'
                  - $ref: '#/components/schemas/settingsEventsReceiverConfigMicrosoftSentinel'
                  - $ref: '#/components/schemas/settingsEventsReceiverConfigSplunk'
            rpcActivitiesEndpoint:
              type: string
    settingsEventsReceiverConfigBody:
      type: object
      properties:
        auditsEndpoint:
          type: string
        identityActivitiesEndpoint:
          type: string
        networkActivitiesEndpoint:
          type: string
        receiverConfig:
            oneOf:
              - $ref: '#/components/schemas/settingsEventsReceiverConfigElasticBody'
              - $ref: '#/components/schemas/settingsEventsReceiverConfigMicrosoftSentinelBody'
              - $ref: '#/components/schemas/settingsEventsReceiverConfigSplunkBody'
        rpcActivitiesEndpoint:
          type: string
      required:
        - receiverConfig
    settingsEventsReceiverConfigElastic:
      type: object
      properties:
        url:
          type: string
    settingsEventsReceiverConfigElasticBody:
      type: object
      properties:
        url:
          type: string
        apiKey:
          type: string
      required:
        - url
        - apiKey
    settingsEventsReceiverConfigMicrosoftSentinel:
      type: object
      properties:
        tenantId:
          type: string
        clientId:
          type: string
        url:
          type: string
    settingsEventsReceiverConfigMicrosoftSentinelBody:
      type: object
      properties:
        tenantId:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
        url:
          type: string
      required:
        - tenantId
        - clientId
        - clientSecret
        - url
    settingsEventsReceiverConfigSplunk:
      type: object
      properties:
        hecUri:
          type: string
    settingsEventsReceiverConfigSplunkBody:
      type: object
      properties:
        hecUri:
          type: string
        token:
          type: string
      required:
        - hecUri
        - token
    settingsEventsReceiverSyncStatus:
      type: object
      properties:
        identityActivity:
          $ref: '#/components/schemas/settingsEventsReceiverSyncState'
        networkActivity:
          $ref: '#/components/schemas/settingsEventsReceiverSyncState'
        rpcActivity:
          $ref: '#/components/schemas/settingsEventsReceiverSyncState'
        audit:
          $ref: '#/components/schemas/settingsEventsReceiverSyncState'
    settingsEventsReceiverSyncState:
      type: object
      properties:
        errorType:
          type: integer
        errorMessage:
          type: string
        lastSyncTime:
          $ref: '#/components/schemas/epochMillis'
        lastSuccessfulSyncTime:
          $ref: '#/components/schemas/epochMillis'
    settingsFirewall:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
    settingsFirewallBody:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
      required:
        - implicitIcmpRuleEnabled
    settingsFirewallIgnoredGPO:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredGPOBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRules:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRulesBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallProfiles:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
    settingsFirewallProfilesBody:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
      required:
        - inboundAllow
        - inboundBlock
        - outboundBlock
    settingsIdentityLogoff:
      type: object
      properties:
        enforceLogoffDeniedUsers:
          type: boolean
    settingsIdentityLogoffBody:
      type: object
      properties:
        enforceLogoffDeniedUsers:
          type: boolean
      required:
        - enforceLogoffDeniedUsers
    settingsIdp:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        createdAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        createdBy:
          type: string
          format: uuid
        identityProviderType:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
        updatedAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        updatedBy:
          type: string
          format: uuid
    settingsIdpBody:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        identityProvider:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - ping-identity
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
      required:
        - certificate
        - identityProvider
        - isDefault
        - sloUrl
        - ssoUrl
    settingsIdpDefaultApplication:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
    settingsIdpDefaultApplicationBody:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
      required:
        - application
    settingsIdpList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsIdp'
    settingsInternalSubnets:
      type: object
      properties:
        config:
          type: object
          properties:
            privateIpv4NetworksList:
              $ref: '#/components/schemas/privateIpv4NetworksList'
            privateIpv6NetworksList:
              $ref: '#/components/schemas/privateIpv6NetworksList'
    settingsInternalSubnetsBody:
      type: object
      properties:
        privateIpv4NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
        privateIpv6NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
      required:
        - privateIpv4NetworksList
        - privateIpv6NetworksList
    settingsJamfCredentials:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          type: string
        username:
          description: JAMF username
          type: string
    settingsJamfCredentialsBody:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          description: JAMF Password
          type: string
        username:
          description: JAMF username
          type: string
      required:
        - host
        - password
        - username
    settingsK8sApplicationsLabel:
      type: object
      properties:
        label:
          type: string
    settingsK8sApplicationsLabelBody:
      type: object
      properties:
        overrideApplicationLabel:
          type: string
      required:
        - overrideApplicationLabel
    settingsLearningConfig:
      type: object
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
        enforceBlocksAsDefault:
          type: boolean
    settingsLearningConfigBody:
      type: object
      required:
        - allowQueueForever
        - allowQuickLearning
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
    settingsLearnWithBlockInbound:
      type: object
      properties:
        portsList:
          $ref: '#/components/schemas/portsList'
    settingsLearnWithBlockInboundBody:
      $ref: '#/components/schemas/portsList'
    settingsLinuxAutomationResponse:
      type: object
      properties:
        monitoredGroup:
          $ref: '#/components/schemas/groupCandidate'
    settingsLinuxSetup:
      type: object
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxSetupBody:
      type: object
      required:
        - allowInstallPackages
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxUser:
      type: object
      properties:
        username:
          description: The linux username for ssh
          type: string
    settingsLinuxUserBody:
      type: object
      properties:
        password:
          description: password for the linux user
          type: string
        privateKey:
          description: private key for the linux user
          type: string
        username:
          description: the linux user name
          type: string
      required:
        - password
        - privateKey
        - username
    settingsMfaAuthentication:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Required
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to live in minutes
          type: integer
          example: 1440
    settingsMfaAuthenticationBody:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Required
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to live in minutes
          type: integer
          example: 1440
      required:
        - isRequiresAuth
        - isSsoForceAuth
        - tokenTtl
    settingsMfaAuthenticationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaAuthentication'
    settingsMfaCache:
      type: object
      properties:
        assetLimit:
          type: integer
        entityId:
          type: string
        entityInfo:
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        ttlMinutes:
          type: integer
    settingsMfaCacheBody:
      type: object
      properties:
        assetLimit:
          type: integer
        entityId:
          type: string
        ttlMinutes:
          type: integer
      required:
        - assetLimit
        - entityId
        - ttlMinutes
    settingsMfaCacheItem:
      type: object
      properties:
        item:
          type: object
          properties:
            assetLimit:
              type: integer
            entityId:
              type: string
            ttlMinutes:
              type: integer
    settingsMfaCacheList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsMfaCache'
        count:
          type: integer
    settingsMfaDetection:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
    settingsMfaDetectionBody:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
      required:
        - timeoutMinutes
    settingsMfaDetectionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaDetection'
    settingsNotification:
      type: array
      items: 
        type: object
        properties:
          type:
            type: integer
            enum: 
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
          enabled:
            type: boolean
          roles:
            type: array
            items:
              type: integer
              enum:
                - 1
                - 2
                - 10
    settingsNotificationBody:
      type: array
      items: 
        type: object
        properties:
          type:
            type: integer
            enum: 
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              - 17
              - 18
              - 19
              - 20
              - 21
              - 22
          enabled:
            type: boolean
          roles:
            type: array
            items:
              type: integer
              enum:
                - 1
                - 2
                - 10
    settingsPrivilegedPorts:
      type: object
      properties:
        item:
          type: object
          properties:
            tcpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
            UdpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
    settingsPrivilegedPortsBody:
      type: object
      required:
        - tcpPorts
        - udpPorts
      properties:
        tcpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
        udpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
    settingsProtectionAutomationResponse:
      type: object
      properties:
        monitoredGroup:
          $ref: '#/components/schemas/groupCandidate'
        protectedGroup:
          $ref: '#/components/schemas/groupCandidate'
    settingsPushNotifications:
      type: object
      properties:
        host:
          type: string
        id:
          type: string
        identityProvider:
          type: string
    settingsPushNotificationsBody:
      type: object
      properties:
        host:
          description: empty for microsoftAuthentictor
          type: string
        id:
          type: string
        identityProvider:
          type: string
        secretKey:
          type: string
      required:
        - id
        - identityProvider
        - secretKey
    settingsPushNotificationsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsPushNotifications'
    settingsTrustedInternet:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
    settingsTrustedInternetAddresses:
      type: object
      properties:
        config:
          type: object
          properties:
            externalIpsList:
              $ref: '#/components/schemas/externalIpsList'
    settingsTrustedInternetAddressesBody:
      type: object
      properties:
        externalIpsList:
          $ref: '#/components/schemas/externalIpsList'
      required:
        - externalIpsList
    settingsTrustedInternetBody:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
      required:
        - ports
    settingsUntrustedInternet:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
    settingsUntrustedInternetBody:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
      required:
        - ports
    settingsSegmentConnectorUpdateRecoveryBody:
      type: object
      properties:
        maxUpdateTries:
          type: integer
        updateCooldownHours:
          type: integer
        updateCooldownMinutes:
          type: integer
      required:
        - maxUpdateTries
        - updateCooldownHours
        - updateCooldownMinutes
    settingsZpa:
      type: object
      properties:
        config:
          type: object
          properties:
            isEnabled:
              type: boolean
            clientOutboundSubnet:
              $ref: '#/components/schemas/ipSubnet'
            gatewayIpsList:
              type: array
              items:
                type: string
                pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
            portsToMfaTcp:
              type: string
              pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
            portsToMfaUdp:
              type: string
              pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
    settingsZpaBody:
      type: object
      required:
        - isEnabled
        - clientOutboundSubnet
        - gatewayIpsList
        - portsToMfaTcp
        - portsToMfaUdp
      properties:
        isEnabled:
          type: boolean
        clientOutboundSubnet:
          $ref: '#/components/schemas/ipSubnet'
        gatewayIpsList:
          type: array
          items:
            type: string
            pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
        portsToMfaTcp:
          type: string
          pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
        portsToMfaUdp:
          type: string
          pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
    setUsersTypeBody:
      type: object
      required:
        - userIds
        - userType
        - comment
      properties:
        userIds:
          type: array
          items:
            type: string
        userType:
          type: integer
        comment:
          type: string
    setUserTypeBody:
      type: object
      required:
        - userType
      properties:
        userType:
          type: integer
        comment:
          type: string
    simulateAccess:
      type: array
      items:
        $ref: '#/components/schemas/simulateAccessRecord'
    simulateAccessBody:
      type: object
      properties:
        assetId:
          type: string
        direction:
          type: integer
        records:
          type: array
          items:
            $ref: '#/components/schemas/simulateAccessRecordBody'
        ruleStates:
          type: array
          items:
            type: integer
            enum: 
              - 1
              - 2
              - 4
      required:
        - assetId
        - direction
        - records
        - ruleStates
    simulateAccessRecord:
      type: object
      properties:
        coveredIdsList:
          type: string
        uncoveredIdsList:
          type: string
        coveredByMfaIdsList:
          type: string
    simulateAccessRecordBody:
      type: object
      properties:
        entitiesIdsList:
          type: array
          items:
            type: string
        localProcessesList:
          type: array
          items:
            type: string
        port:
          type: integer
        protocolType:
          type: integer
    simulationParams:
      type: object
      properties:
        dstAsset:
          $ref: '#/components/schemas/assetBasicInfo'
        dstProcess:
          type: string
        port:
          type: string
        protocolType:
          type: integer
        srcAsset:
          $ref: '#/components/schemas/assetBasicInfo'
        srcProcess:
          type: string
        srcUserId:
          $ref: '#/components/schemas/idNamePair'
    simulationResponse:
      type: object
      properties:
        accessInfo:
          $ref: '#/components/schemas/accessInfo'
        dstAssetInfo:
          $ref: '#/components/schemas/asset'
        orderedReactivePolicies:
          $ref: '#/components/schemas/orderedReactivePolicies'
        srcAssetInfo:
          $ref: '#/components/schemas/asset'
    source:
      description: |
        Possible asset sources:
          * '1' - Access portal
          * '2' - SSP
          * '3' - Active directory
          * '4' - Custom
          * '5' - System
          * '6' - Ansible
          * '7' - Manual OT/IoT
          * '8' - Workgroup
          * '9' - Azure active directory
          * '10' - Azure
          * '11' - AWS
          * '12' - GCP
          * '14' - Jamf
          * '15' - Manual Linux
          * '16' - IBM cloud
          * '17' - Oracle cloud
          * '18' - VMware cloud
          * '19' - Alibaba cloud
          * '20' - Lumen cloud
          * '21' - OVH cloud
          * '22' - Connect
          * '23' - AI
          * '24' - SNOW
          * '25' - Google Workspace
          * '26' - OU
          * '27' - Environment
          * '28' - Conditional
          * '29' - Claroty OT
          * '30' - Manual Mac
      type: integer
      format: int32
      enum:
        - 2
        - 3
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
    userCandidate:
      type: object
      properties:
        domain:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
        sid:
          type: string
    srcUserCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/userCandidate'
        scrollCursor:
          type: string
    srcUsersList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          sid:
            type: string
    state:
      type: object
      properties:
        assetId:
          type: string
        identityProtectedAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectionState:
          $ref: '#/components/schemas/identityProtectionState'
        isAssetConnected:
          type: boolean
        lastConnectedAt:
          $ref: '#/components/schemas/epochMillis'
        lastDisconnectedAt:
          $ref: '#/components/schemas/epochMillis'
        protectedAt:
          $ref: '#/components/schemas/epochMillis'
        protectionState:
          $ref: '#/components/schemas/protectionState'
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectionState:
          $ref: '#/components/schemas/protectionState'
        rpcProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectedAt:
          $ref: '#/components/schemas/epochMillis'
    switch:
      type: object
      properties:
        healthState:
          $ref: '#/components/schemas/healthState'
        id:
          type: string
        interfacesList:
          type: array
          items:
            type: string
        ip:
          type: string
        monitorInterfaceOnOtAdded:
          type: boolean
        monitorOnInterfaceDiscovery:
          type: boolean
        name:
          type: string
        numOfOts:
          type: integer
        type:
          type: integer
        username:
          type: string
    switchBody:
      type: object
      properties:
        name:
          type: string
        ip:
          type: string
        monitorInterfaceOnOtAdded:
          type: boolean
        monitorOnInterfaceDiscovery:
          type: boolean
        type:
          type: integer
          default: 1
        username:
          type: string
        password:
          type: string
      required:
        - name
        - ip
        - monitorInterfaceOnOtAdded
        - monitorOnInterfaceDiscovery
        - type
        - username
        - password
    switchesMonitoringBreakGlassBody:
      allOf:
        - $ref: '#/components/schemas/switchMonitoringBreakGlassBody'
        - type: object
          properties:
            switchIds:
              type: array
              items:
                type: string
          required:
            - switchIds
    switchesNetworkBreakGlassBody:
      allOf:
        - $ref: '#/components/schemas/switchNetworkBreakGlassBody'
        - type: object
          properties:
            switchIds:
              type: array
              items:
                type: string
          required:
            - switchIds
    switchId:
      type: object
      properties:
        switchId:
          type: string
    switchItem:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/switch'
        permission:
          description: '2 - Viewer, 3 - Manager'
          type: integer
          enum:
            - 2
            - 3
    switchInterface:
      type: object
      properties:
        isMonitored:
          type: boolean
        name:
          type: string
        numOfOts:
          type: integer
    switchInterfacesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/switchInterface'
    switchList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/switch'
    switchMonitoringBreakGlassBody:
      type: object
      properties:
        monitoringBreakGlassEnabled:
          type: boolean
      required:
        - monitoringBreakGlassEnabled
    switchNetworkBreakGlassBody:
      type: object
      properties:
        networkBreakGlassEnabled:
          type: boolean
      required:
        - networkBreakGlassEnabled    
    switchProtocolsList:
      type: object
      properties:
        localPorts:
          type: string
        protocolType:
          $ref: '#/components/schemas/protocol'
        remotePorts:
          type: string
    switchProtocolsListBody:
      type: array
      items:
        type: object
        properties:
          localPorts:
            type: string
          ports:
            type: string
          protocolType:
            $ref: '#/components/schemas/protocol'
          remotePorts:
            type: string
    switchRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        activitiesCount:
          type: integer
          format: int32
        changeTicket:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        direction:
          $ref: '#/components/schemas/ruleDirection'
        excludedEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        localEntityId:
          type: string
        localEntityInfoss:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/asset'
              - $ref: '#/components/schemas/group'
        localProcessesList:
          type: array
          items:
            type: string
        name:
          type: string
        mirrorNetworkRuleId:
          type: string
          format: uuid
        mirrorSwitchRuleId:
          type: string
          format: uuid
        multipleLocalEntityIdsList:
          type: array
          items:
            type: string
        policyParentRuleId:
          type: string
        policyParentRuleType:
          type: integer
        protocolsList:
          type: array
          items:
            $ref: '#/components/schemas/switchProtocolsList'
        remoteEntitiesIdList:
          type: array
          items:
            type: string
        remoteEntitiesInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        servicesList:
          type: array
          items:
            type: string
        shouldBuildMirrorRules:
          type: boolean
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          $ref: '#/components/schemas/ruleState'
        switchParentRuleId:
          type: string
        switchParentRuleType:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
    switchRuleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        changeTicket:
          type: string
        description:
          type: string
        direction:
          type: integer
          enum:
            - 1
            - 2
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        protocolsList:
          $ref: '#/components/schemas/switchProtocolsListBody'
        remoteEntitiesIdList:
          type: array
          items:
            type: string
        shouldBuildMirrorRules:
          type: boolean
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        servicesList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
      required:
        - action
        - direction
        - localEntityId
        - protocolsList
        - remoteEntityIdsList
        - shouldBuildMirrorRules
        - state
    switchRuleItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/switchRule'
    switchRulesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/switchRule'
    systemHealthIssue:
      type: object
      properties:
        type:
          type: string
        severity:
          type: string
    systemHealthList:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/systemHealthIssue'
    tagGroupBody:
      type: object
      properties:
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^a:[ault]:[a-zA-Z0-9]{8}$'
          example:
            - 'a:a:8ErCHXe8'
        comment:
          type: string
      required:
        - membersId
    tags:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    trafficType:
      description: |
        * '1' - Internal
        * '2' - External
        * '3' - Both
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    user:
      type: object
      properties:
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          $ref: '#/components/schemas/epochMillis'
        classifiedBy:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        disabledSince:
          $ref: '#/components/schemas/epochMillis'
        distinguishedName:
          type: string
        domain:
          type: string
        email:
          type: string
        firstName:
          type: string
        guid:
          type: string
        id:
          type: string
        inactiveReason:
          type: integer
        inactiveSince:
          $ref: '#/components/schemas/epochMillis'
        isDisabled:
          type: boolean
        isQuarantined:
          type: boolean
        jobTitle:
          type: string
        lastLogon:
          $ref: '#/components/schemas/epochMillis'
        lastName:
          type: string
        name:
          type: string
        officePhone:
          type: string
        passwordUpdateTime:
          $ref: '#/components/schemas/epochMillis'
        phone:
          type: string
        principalName:
          type: string
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        protectedAt:
          $ref: '#/components/schemas/epochMillis'
        protectionState:
          $ref: '#/components/schemas/userProtectionState'
        role:
          type: integer
        sid:
          type: string
        source:
          type: integer
        status:
          type: integer
        userPrincipleName:
          type: string
        userType:
          type: integer
    userIdentityAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            authenticationPackage:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            counts:
              type: object
              properties:
                authenticationPackage:
                  type: integer
                dstAsset:
                  type: integer
                logonType:
                  type: integer
                srcAsset:
                  type: integer
            dstAsset:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            logonType:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
            srcAsset:
              type: array
              items:
                $ref: '#/components/schemas/identityAnalysis'
    userIdResponse:
      type: object
      properties:
        userId:
          type: string
      x-examples:
        example-1:
          userId: 'u:a:tOUovcIQ'
    userNetworkAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            counts:
              type: object
              properties:
                byDstAsset:
                  type: integer
                byPort:
                  type: integer
                bySrcAsset:
                  type: integer
                bySrcProcess:
                  type: integer
            byDstAsset:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            bySrcAsset:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
            bySrcProcess:
              type: array
              items:
                $ref: '#/components/schemas/networkAnalysis'
    userProtectionState:
      description: |
        * '1' - Unsegmented
        * '3' - Segmented
        * '5' - Learning until
        * '6' - Learning done
      type: integer
      format: int32
      enum:
        - 1
        - 3
        - 5
        - 6
    userResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/user'
    userRole:
      description: |
        * '0' - Unspecified
        * '1' - Admin
        * '2' - Viewer
        * '3' - Regular
        * '4' - API-FullAccess
        * '5' - API-ReadOnly
        * '6' - SelfService
        * '7' - CloudConnectorProvisioning
        * '8' - JAMF Asset
        * '9' - Asset Manager
        * '10' - Operator
        * '11' - Service Now Token
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
    userSimple:
      type: object
      properties:
        domain:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
    usersProtectBody:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
      required:
        - userIds
    usersQueueBody:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        queueDays:
          type: integer
          enum:
            - 14
            - 30
      required:
        - userIds
        - queueDays
    userStatistics:
      type: object
      properties:
        userStatistics:
          type: object
          properties:
            totalCount:
              type: integer
            adminsCount:
              type: integer
            viewersCount:
              type: integer
      x-examples:
        example-1:
          userStatistics:
            totalCount: 87
            adminsCount: 14
            viewersCount: 6
    userSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    usersActivateBody:
      type: object
      required:
        - items
      properties:
        comment:
          type: string
        items:
          type: array
          items:
            type: string
    userActivateBody:
      type: object
      properties:
        comment:
          type: string
    userConnectionEnrichment:
      type: object
      properties:
        domain:
          type: string
        id:
          type: string
        logonId:
          type: string
        name:
          type: string
        protectionState:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 3
            - 5
            - 6
        riskTypes:
          type: array
          items:
            type: integer
            format: int32
            enum:
              - 0
              - 1
              - 2
        sid:
          type: string
        status:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
        userType:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
    validateResponse:
      type: object
      properties:
        affectedAssetsCount:
          type: integer
    identityProtectionCategory:
      description: |
        * '0' - Unspecified
        * '1' - Locally
        * '2' - Network
        * '3' - Batch
        * '4' - Service
        * '5' - RDP
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
security:
  - api_key: []
tags:
  - name: Activities
    description: API calls related to Activities.
  - name: AE Exclusions
    description: API calls related to AE Exclusions.
  - name: Asset
    description: API calls related to a specific Asset.
  - name: Asset actions
    description: API calls related to a specific Asset actions.
  - name: Asset activities
    description: API calls related to a specific Asset activities.
  - name: Asset analysis
    description: API calls related to a specific Asset analysis.
  - name: Asset ancestors
    description: API calls related to a specific Asset ancestors.
  - name: Asset audit
    description: API calls related to a specific Asset audit.
  - name: Asset identity-actions
    description: API calls related to a specific Asset identity actions.
  - name: Asset managers
    description: API calls related to a specific Asset managers.
  - name: Asset protection
    description: API calls related to a specific Asset protection.
  - name: Asset rpc-actions
    description: API calls related to a specific Asset rpc actions.
  - name: Asset OT/IoT
    description: API calls related to a specific OT/IoT Asset.
  - name: Asset OT/IoT actions
    description: API calls related to a Asset OT/IoT actions.
  - name: Asset OT/IoT activities
    description: API calls related to a Asset OT/IoT activities.
  - name: Asset OT/IoT analysis
    description: API calls related to a Asset OT/IoT analysis.
  - name: Asset OT/IoT ancestors
    description: API calls related to a Asset OT/IoT ancestors.
  - name: Asset OT/IoT audit
    description: API calls related to a Asset OT/IoT audit.
  - name: Asset OT/IoT managers
    description: API calls related to a Asset OT/IoT managers.
  - name: Asset OT/IoT protection
    description: API calls related to a Asset OT/IoT protection.
  - name: Asset OT/IoT tags
    description: API calls related to a Asset OT/IoT tags.
  - name: Assets
    description: API calls related to Assets.
  - name: Assets OT/IoT
    description: API calls related to OT/IoT Assets.
  - name: Assets OT/IoT actions
    description: API calls related to a Assets OT/IoT actions.
  - name: Assets Switches
    description: API calls related to Switches.
  - name: Audit
    description: API calls related to Audits.
  - name: Auth
    description: API calls related to Authentication.
  - name: Entity
    description: API calls related to Entities.
  - name: Environment
    description: API calls related to Environment.
  - name: External Access Policy
    description: API calls related to a External Access Policy.
  - name: Group
    description: API calls related to a specific Group.
  - name: Groups
    description: API calls related to Groups.
  - name: Groups activities
    description: API calls related to Groups activities.
  - name: Groups Active Directory
    description: API calls related to Active Directory Groups.
  - name: Groups Custom
    description: API calls related to Custom Groups.
  - name: Groups protection
    description: API calls related to Groups Protection.
  - name: Groups Tag
    description: API calls related to Tag Groups.
  - name: K8s
    description: API calls related to K8s.
  - name: K8s audit
    description: API calls related to K8s Audit.
  - name: K8s namespaces
    description: API calls related to K8s Namespaces.
  - name: K8s network policy
    description: API calls related to K8s Network Policy.
  - name: K8s nodes
    description: API calls related to K8s Nodes.
  - name: K8s workloads
    description: API calls related to K8s Workloads.
  - name: MFA
    description: API calls related to MFA policies.
  - name: MFA Identity
    description: API Calls related to MFA Identity settings.
  - name: MFA Inbound
    description: API calls related to Inbound MFA policies.
  - name: MFA Outbound
    description: API calls related to Outbound MFA policies.
  - name: Onboarding Policies
    description: API calls related to Onboarding policies.
  - name: Profile
    description: API calls related to profile.
  - name: Rules
    description: API calls related to Rules.
  - name: Rules Identity
    description: API calls related to Identity Rules.
  - name: Rules Inbound
    description: API calls related to Inbound rules.
  - name: Rules Outbound
    description: API calls related to Outbound rules.
  - name: Rules OT/IoT Inbound
    description: API calls related to OT/IoT Inbound rules.
  - name: Rules OT/IoT Outbound
    description: API calls related to OT/IoT Outbound rules.
  - name: Rules RPC
    description: API calls related to RPC Rules
  - name: Sessions
    description: API calls related to Sessions.
  - name: Settings
    description: API calls related to Settings.
  - name: Settings Access Tokens
    description: API calls related to Access Tokens settings.
  - name: Settings Activities
    description: API calls related to Activities settings.
  - name: Settings AE
    description: API calls related to AI settings.
  - name: Settings AE Learning
    description: API calls related to AI Learning settings.
  - name: Settings AE Rules Review
    description: API calls related to AI Rule Review settings.
  - name: Settings Antitampering
    description: API calls related to Antitampering settings.
  - name: Settings Asset Management
    description: API calls related to Asset Management settings.
  - name: Settings Asset Managers
    description: API calls related to Asset Managers settings.
  - name: Settings Break Glass
    description: API calls related to Break Glass settings.
  - name: Settings Cloud Connector
    description: API calls related to Cloud Connector settings.
  - name: Settings Connect
    description: API calls related to Connect settings.
  - name: Settings Custom Users
    description: API calls related to Custom Users settings.
  - name: Settings Domains
    description: API calls related to Domains.
  - name: Settings Firewall
    description: API calls related to Firewall settings.
  - name: Settings Identity Providers
    description: API calls related to Identity Providers settings.
  - name: Settings Inactive Assets
    description: API calls related to Inactive Assets settings.
  - name: Settings Internal Subnets
    description: API Calls related to Internal Subnets settings.
  - name: Settings Learning
    description: API calls related to AI Learning settings.
  - name: Settings Licenses
    description: API calls related to Licenses settings.
  - name: Settings Mail Notifications
    description: API calls related to Mail Notifications settings.
  - name: Settings Maintenance Window
    description: API calls related to Maintenance Window settings.
  - name: Settings MFA
    description: API Calls related to MFA settings.
  - name: Settings MFA Cache
    description: API Calls related to MFA Cache settings.
  - name: Settings Portal Security
    description: API calls related to Portal Security settings.
  - name: Settings Privileged Ports
    description: API calls related to Privileged Ports settings.
  - name: Settings Protection Policies
    description: API calls related to Protection Automation settings.
  - name: Settings Push Notifications
    description: API calls related to Push Notifications settings.
  - name: Settings Roles
    description: API calls related to Roles settings.
  - name: Settings Segment Servers
    description: API Calls related to Segment Server Settings.
  - name: Settings Segment Connector
    description: API calls related to Segment Connector settings.
  - name: Settings CMDB
    description: API calls related to CMDB settings.
  - name: Settings Trusted Internet
    description: API calls related to Trust Internet Settings
  - name: Settings ZTNA proxy
    description: API calls related to ZPA Settings.
  - name: Switch
    description: API calls related to switches
  - name: Switch activities
    description: API calls related to a specific Switch activities.
  - name: Switch audit
    description: API calls related to a specific Switch audit.
  - name: Switch OT/IoT
    description: API calls related to switch OT/IoT
  - name: Switch protection
    description: API calls related to a specific Switch protection.
  - name: User
    description: API calls related to a specific User.
  - name: Users
    description: API calls related to Users.

openapi: 3.0.1
info:
  title: Zero Networks
  version: 1.0.6
  description: APIs for Zero Networks
  contact:
    name: Support
    url: https://support.zeronetworks.com
    email: support@zeronetworks.com
servers:
  - url: 'https://{accountName}.zeronetworks.com/api/v1'
    description: The production API server
    variables:
      accountName:
        description: this value is per customer / partner
        default: portal
paths:
  /activities/logon:
    get:
      operationId: LogonActivities_List
      summary: List Logon Activities
      description: Returns a list of logon activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/export:
    post:
      operationId: LogonActivities_Export
      summary: Export logon activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/export/csv/{exportId}:
    get:
      operationId: LogonActivitiesExport_Get
      summary: Download logon activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/filters:
    get:
      operationId: LogonActivitiesFilters_List
      summary: Get logon activity filters
      description: Returns the filters that can be used for logon activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/user-filters:
    get:
      operationId: LogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: LogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/logon/user-filters/{filterId}:
    get:
      operationId: LogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: LogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: LogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network:
    get:
      operationId: NetworkActivities_List
      summary: List Network Activities
      description: Returns a list of network activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/export:
    post:
      operationId: NetworkActivities_Export
      summary: Export network activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/export/csv/{exportId}:
    get:
      operationId: NetworkActivitiesExport_Get
      summary: Download network activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/filters:
    get:
      operationId: NetworkActivitiesFilters_List
      summary: Get network activity filters
      description: Returns the filters that can be used for network activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/user-filters:
    get:
      operationId: NetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: NetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/network/user-filters/{filterId}:
    get:
      operationId: NetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: NetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: NetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc:
    get:
      operationId: RPCActivities_List
      summary: List RPC Activities
      description: Returns a list of RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/export:
    post:
      operationId: RPCActivities_Export
      summary: Export RPC activities
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/export/csv/{exportId}:
    get:
      operationId: RPCActivitiesExport_Get
      summary: Download RPC activities export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters:
    get:
      operationId: RPCActivitiesFilters_List
      summary: Get RPC activity filters
      description: Returns the filters that can be used for RPC activities.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/interface-candidates:
    get:
      operationId: RPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters
      description: Returns the interface name filters that can be used for RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/filters/op-candidates:
    get:
      operationId: RPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters
      description: Returns the operation filters that can be used for RPC activities.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/user-filters:
    get:
      operationId: RPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    post:
      operationId: RPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /activities/rpc/user-filters/{filterId}:
    get:
      operationId: RPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    put:
      operationId: RPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
    delete:
      operationId: RPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Activities
  /ai/next-batch:
    get:
      operationId: AINextBatch_Get
      summary: AI Next Batch
      description: Returns a date in epoch(ms) for the next batch of AI rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/nextBatch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /assets:
    get:
      operationId: Assets_List
      summary: Assets
      description: Returns a list of assets. Pass the returned 'nextCursor' as the '_cursor' query param of the next request for batches, when the '_offset' param is not used.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}:
    get:
      operationId: Asset_Get
      summary: Get an asset
      description: Returns the properties of an asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/activate:
    post:
      operationId: AssetActive_Set
      summary: Mark asset active
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/activate-break-glass:
    post:
      operationId: AssetBreakGlass_Activate
      summary: Activate break glass for asset
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/deactivate-break-glass:
    post:
      operationId: AssetBreakGlass_Deactivate
      summary: Deactivate break glass for asset.
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/inactivate:
    post:
      operationId: AssetInactive_Set
      summary: Mark asset inactive
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/mirror:
    post:
      operationId: Asset_Mirror
      summary: Mirror one asset to another
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: The assetIds of the source and target
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsMirrorBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset  
  /assets/{assetId}/actions/os-type:
    put:
      operationId: AssetOSType_Update
      summary: Set OS type
      description: Set the OS type (Windows/Linux/Mac) for multiple assets
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: OS type and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOSType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/outbound-restriction:
    put:
      operationId: AssetOutboundRestriction_Update
      summary: Set outbound restriction
      description: Set the outbound restriction (Enable Internal, Enable External, Enable Both, Disable) for multiple assets
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Outbound restriction and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOutboundRestriction'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/preferred-deployment:
    put:
      operationId: AssetPreferredSegmentServer_Update
      summary: Set the preferred segment server for an asset
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: The assetId and Segment Server Id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerSetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/protect:
    post:
      operationId: AssetNetworkSegment_Protect
      summary: Move specific asset from learning to network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/protect/validate:
    post:
      operationId: AssetNetworkSegment_Validate
      summary: Validate specific asset for network segmentation
      description: Returns a number of assets that are valid for network segmentation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/quarantine:
    put:
      operationId: AssetQuarantine_Enable
      summary: Enable quarantine for asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an object with a quarantine boolean
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/queue:
    put:
      operationId: AssetExtendNetwork_Queue
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days to extend by
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetNetwork_Queue
      summary: Extend asset learning
      description: Extend asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/retry-health:
    post:
      operationId: AssetRetryHealth_Invoke
      summary: Retry asset health checks
      description: Retry asset health checks
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/type:
    put:
      operationId: AssetType_Update
      summary: Set asset type
      description: Set the asset type (Client/server)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setAssetType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/actions/unprotect:
    post:
      operationId: AssetNetworkSegment_Unprotect
      summary: Unprotect a specific asset from network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/actions/unprotect/validate:
    post:
      operationId: AssetNetworkUnprotect_Validate
      summary: Validate a specific asset for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon:
    get:
      operationId: AssetLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon/export:
    post:
      operationId: AssetLogonActivities_Export
      summary: Export logon activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: AssetLogonActivitiesExport_Get
      summary: Download logon activities for a specific asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon/filters:
    get:
      operationId: AssetLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific asset
      description: Returns the filters that can be used for logon activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon/user-filters:
    get:
      operationId: AssetLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: AssetLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network:
    get:
      operationId: AssetNetworkActivities_List
      summary: List Network Activities for a specific asset
      description: Returns a list of network activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network/export:
    post:
      operationId: AssetNetworkActivities_Export
      summary: Export network activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network/export/csv/{exportId}:
    get:
      operationId: AssetNetworkActivitiesExport_Get
      summary: Download network activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network/filters:
    get:
      operationId: AssetNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific asset
      description: Returns the filters that can be used for network activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network/user-filters:
    get:
      operationId: AssetNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/network/user-filters/{filterId}:
    get:
      operationId: AssetNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc:
    get:
      operationId: AssetRPCActivities_List
      summary: List RPC Activities for a specific asset
      description: Returns a list of RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/export:
    post:
      operationId: AssetRPCActivities_Export
      summary: Export RPC activities for a specific asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/export/csv/{exportId}:
    get:
      operationId: AssetRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/filters:
    get:
      operationId: AssetRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific asset
      description: Returns the filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/filters/interface-candidates:
    get:
      operationId: AssetRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific asset
      description: Returns the interface name filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/filters/op-candidates:
    get:
      operationId: AssetRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific asset
      description: Returns the operation filters that can be used for RPC activities for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/user-filters:
    get:
      operationId: AssetRPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetRPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/activities/rpc/user-filters/{filterId}:
    get:
      operationId: AssetRPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetRPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetRPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis:
    get:
      operationId: AssetAnalysis_Get
      summary: Get an asset analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/directlyRetrievedFromAssetParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis/export:
    post:
      operationId: AssetAnalysis_Export
      summary: Export asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/analysis/export/csv/{exportId}:
    get:
      operationId: AssetAnalysisExport_Get
      summary: Download asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/ancestors:
    get:
      operationId: AssetMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/ancestors/candidates:
    get:
      operationId: AssetMemberOfGroupCandidates_Get
      summary: Get candidates for adding the asset to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/audit:
    get:
      operationId: AssetAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/audit/export:
    post:
      operationId: AssetAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/audit/export/csv/{exportId}:
    get:
      operationId: AssetAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/audit/filters:
    get:
      operationId: AssetAuditsFilters_List
      summary: List Audit Filters for a specific asset
      description: Returns a list of filters for Audit events for a specific asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/cluster-info:
    get:
      operationId: AssetClusterInfo_Get
      summary: Get asset cluster info
      description: Returns an object of cluster name and cluster members
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clusterInfo'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/health-state:
    get:
      operationId: AssetHealthState_Get
      summary: Get asset health state
      description: Get asset health state
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/healthStateObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/identity-actions/protect:
    post:
      operationId: AssetIdentitySegment_Protect
      summary: Move asset to Identity Segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/identity-actions/protect/validate:
    post:
      operationId: AssetIdentityProtect_Validate
      summary: Validate specific asset for identity segmentation
      description: Returns a number of assets that are valid for identity segmentation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/identity-actions/queue:
    post:
      operationId: AssetIdentity_Queue
      summary: Move asset from monitored to Identity learning
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of assetIds to move to Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetIdentityBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetExtendIdentity_Queue
      summary: Extend asset Identity learning period
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of assetIds to extend Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetIdentityExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/{assetId}/identity-actions/unprotect:
    post:
      operationId: AssetIdentitySegment_Unprotect
      summary: Unprotect a specific asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/identity-actions/unprotect/validate:
    post:
      operationId: AssetIdentityUnprotect_Validate
      summary: Validate a specific asset for removing from protection
      description: Returns a number of assets that are valid to unprotect.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/listening-ports:
    get:
      operationId: AssetListeningPorts_List
      summary: List listening ports of asset
      description: List listening ports of an asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listeningPortsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/managers:
    get:
      operationId: AssetAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetAssetManagers_Update
      summary: Update manager of asset
      description: Update an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/managers/{groupOrUserId}:
    delete:
      operationId: AssetAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/managers/candidates:
    get:
      operationId: AssetAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies:
    get:
      operationId: AssetExternalAccessPolicy_List
      summary: List External Access policies for an asset
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetExternalAccessPolicy_Create
      summary: Create an external access policy for an asset
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/{policyId}:
    get:
      operationId: AssetExternalAccessPolicy_Get
      summary: Get an External Access policy for an asset
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetExternalAccessPolicy_Update
      summary: Update an External Access policy for an asset
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetExternalAccessPolicy_Delete
      summary: Delete an External Access policy for an asset
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: AssetExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for an asset
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/filters:
    get:
      operationId: AssetExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for an asset
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for an asset
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: AssetExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for an asset
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: AssetExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for an asset
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/external-access-policies/statistics:
    get:
      operationId: AssetExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for an asset
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules:
    get:
      operationId: AssetIdentityRules_List
      summary: Asset List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetIdentityRules_Create
      summary: Asset Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/{ruleId}:
    get:
      operationId: AssetIdentityRules_Get
      summary: Asset Get Identity Rule
      description: Returns the properties of an Identity rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetIdentityRules_Update
      summary: Asset Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetIdentityRules_Delete
      summary: Asset Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/asset-candidates:
    get:
      operationId: AssetIdentityRulesAssetsCandidates_List
      summary: Asset List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: AssetIdentityRulesExcludedAssetsCandidates_List
      summary: Asset List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/export:
    post:
      operationId: AssetIdentityRules_Export
      summary: Asset Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: AssetIdentityRulesExport_Get
      summary: Asset Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/filters:
    get:
      operationId: AssetIdentityRulesFilters_List
      summary: Asset List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: AssetIdentityRulesAssetsCandidatesFilters_List
      summary: Asset List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: AssetIdentityRulesUserCandidatesFilters_List
      summary: Asset List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity-rules/user-candidates:
    get:
      operationId: AssetIdentityRulesUserCandidates_List
      summary: Asset List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies:
    get:
      operationId: AssetMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: AssetMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/filters:
    get:
      operationId: AssetMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: AssetMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: AssetMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound:
    get:
      operationId: AssetMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: AssetMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: AssetMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: AssetMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: AssetMFAInboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: AssetMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: AssetMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound:
    get:
      operationId: AssetMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: AssetMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: AssetMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: AssetMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: AssetMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: AssetMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules:
    get:
      operationId: AssetRPCRules_List
      summary: Asset List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetRPCRules_Create
      summary: Asset Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: AssetRPCRule_Get
      summary: Asset Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetRPCRule_Update
      summary: Asset Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetRPCRule_Delete
      summary: Asset Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: AssetRPCRulesExcludedDestinationCandidates_List
      summary: Asset Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/export:
    post:
      operationId: AssetRPCRules_Export
      summary: Asset Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: AssetRPCRulesExport_Get
      summary: Download assets RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/filters:
    get:
      operationId: AssetRPCRulesFilters_List
      summary: Asset List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: AssetRPCRulesDestinationCandidatesFilters_List
      summary: Asset List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: AssetRPCRulesSourceCandidatesFilters_List
      summary: Asset Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: AssetRPCRulesUserCandidatesFilters_List
      summary: Asset List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/local-candidates:
    get:
      operationId: AssetRPCRulesDestinationCandidates_List
      summary: Asset List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: AssetRPCRulesSourceCandidates_List
      summary: Asset List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rpc-rules/user-candidates:
    get:
      operationId: AssetRPCRulesUserCandidates_List
      summary: Asset List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: AssetRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/history/{ruleId}:
    get:
      operationId: AssetRulesHistory_Get
      summary: Get a historic version of an rule for a specific asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound:
    get:
      operationId: AssetInboundRules_List
      summary: Asset List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetInboundRules_Create
      summary: Asset Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: AssetInboundRule_Get
      summary: Asset Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetInboundRule_Update
      summary: Asset Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetInboundRule_Delete
      summary: Asset Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetInboundRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/export:
    post:
      operationId: AssetInboundRules_Export
      summary: Asset Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetInboundRulesExport_Get
      summary: Download assets inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/filters:
    get:
      operationId: AssetInboundRulesFilters_List
      summary: Asset List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: AssetInboundRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetInboundRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/local-candidates:
    get:
      operationId: AssetInboundRulesDestinationCandidates_List
      summary: Asset List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: AssetInboundRulesSourceCandidates_List
      summary: Asset List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetInboundRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: AssetInboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset
  /assets/{assetId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: AssetInboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound:
    get:
      operationId: AssetOutboundRules_List
      summary: Asset List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    post:
      operationId: AssetOutboundRules_Create
      summary: Asset Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: AssetOutboundRule_Get
      summary: Asset Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetOutboundRule_Update
      summary: Asset Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    delete:
      operationId: AssetOutboundRule_Delete
      summary: Asset Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOutboundRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/export:
    post:
      operationId: AssetOutboundRules_Export
      summary: Asset Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetOutboundRulesExport_Get
      summary: Download assets outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/filters:
    get:
      operationId: AssetOutboundRulesFilters_List
      summary: Asset List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: AssetOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOutboundRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOutboundRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: AssetOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for an asset
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/local-candidates:
    get:
      operationId: AssetOutboundRulesSourceCandidates_List
      summary: Asset List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: AssetOutboundRulesDestinationCandidates_List
      summary: Asset List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOutboundRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: AssetOutboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOutboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset
  /assets/{assetId}/protection/rules/outbound/user-candidates:
    get:
      operationId: AssetOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/rpc-actions/monitor:
    post:
      operationId: AssetRpcMonitoring_Add
      summary: Adds a specific asset to RPC monitoring
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/rpc-actions/protect:
    post:
      operationId: AssetRpcSegment_Protect
      summary: Add asset to RPC segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/rpc-actions/queue:
    post:
      operationId: AssetRPC_Queue
      summary: Move asset from monitored to RPC learning
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
    put:
      operationId: AssetExtendRPC_Queue
      summary: Extend asset RPC learning period
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/rpc-actions/unmonitor:
    post:
      operationId: AssetRpcMonitoring_Delete
      summary: Removes a specific asset from RPC monitoring
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/rpc-actions/unprotect:
    post:
      operationId: AssetRpcSegment_Unprotect
      summary: Remove asset from RPC segmentation
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Send an empty object
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/{assetId}/tags:
    get:
      operationId: AssetTags_Get
      summary: Get asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/actions/activate:
    post:
      operationId: AssetsActive_Set
      summary: Mark assets active
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to activate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/activate-break-glass:
    post:
      operationId: AssetsBreakGlass_Activate
      summary: Activate break glass for assets.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to activate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/deactivate-break-glass:
    post:
      operationId: AssetsBreakGlass_Deactivate
      summary: Deactivate break glass for assets.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to deactivate break glass
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsBreakGlassBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/inactivate:
    post:
      operationId: AssetsInactive_Set
      summary: Mark assets inactive
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to mark inactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/mirror:
    post:
      operationId: Assets_Mirror
      summary: Mirror one asset to another
      description: Returns and empty object.
      requestBody:
        description: The assetIds of the source and target
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsMirrorBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/os-type:
    put:
      operationId: AssetsOSType_Update
      summary: Set OS type
      description: Set the OS type (Windows/Linux/Mac) for multiple assets
      requestBody:
        description: OS type and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOSType'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/outbound-restriction:
    put:
      operationId: AssetsOutboundRestriction_Update
      summary: Set outbound restriction
      description: Set the outbound restriction (Enable Internal, Enable External, Enable Both, Disable) for multiple assets
      requestBody:
        description: Outbound restriction and Array of assetIds to set to
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setOutboundRestriction'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/preferred-deployment:
    put:
      operationId: AssetsPreferredSegmentServer_Update
      summary: Set the preferred segment server for an asset
      description: Returns and empty object.
      requestBody:
        description: The assetId and Segment Server Id
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerSetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/protect:
    post:
      operationId: AssetsNetworkSegment_Protect
      summary: Move asset from learning to network segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/protect/validate:
    post:
      operationId: AssetsNetworkSegment_Validate
      summary: Validate assets for network segmentation
      description: Returns a number of assets that are valid for network segmentation.
      requestBody:
        description: Array of assetIds to move to network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/quarantine:
    put:
      operationId: AssetsQuarantine_Enable
      summary: Enable quarantine for assets
      description: Returns an empty object.
      requestBody:
        description: Send an object with a quarantine boolean and list of assets
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetIds:
                  type: array
                  items:
                    type: string
                quarantine:
                  type: boolean
                  description: Indicates whether to enable or disable quarantine
              required:
                - assetIds
                - quarantine
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/queue:
    post:
      operationId: AssetsNetwork_Queue
      summary: Move asset from monitored to network learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to network learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendNetwork_Queue
      summary: Extend asset network learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend network learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/unprotect:
    post:
      operationId: AssetsNetworkSegment_Unprotect
      summary: Unprotect an asset from network segmentation
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/actions/unprotect/validate:
    post:
      operationId: AssetsNetworkUnprotect_Validate
      summary: Validate assets for removing from network segmentation
      description: Returns a number of assets that are valid to unprotect.
      requestBody:
        description: Array of assetIds to remove from network segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/export:
    post:
      operationId: Assets_Export
      summary: Export assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/export/csv/{exportId}:
    get:
      operationId: AssetsExport_Get
      summary: Download assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/filters:
    get:
      operationId: AssetsFilters_List
      summary: Assets Filters
      description: Returns the filters that can be used for assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/protect:
    post:
      operationId: AssetsIdentitySegment_Protect
      summary: Move assets from to identity segmentation.
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/protect/validate:
    post:
      operationId: AssetsIdentityProtect_Validate
      summary: Validate assets for identity segmentation
      description: Returns a number of assets that are valid for identity segmentation.
      requestBody:
        description: Array of assetIds to move to identity segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/queue:
    post:
      operationId: AssetsIdentity_Queue
      summary: Move asset from monitored to Identity learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsIdentityQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendIdentity_Queue
      summary: Extend asset Identity learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend Identity learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendIdentityBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/unprotect:
    post:
      operationId: AssetsIdentitySegment_Unprotect
      summary: Unprotect assets
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity-actions/unprotect/validate:
    post:
      operationId: AssetsIdentityUnprotect_Validate
      summary: Validate assets for removing from identity segmentation
      description: Returns a number of assets that are valid to unprotect.
      requestBody:
        description: Array of assetIds to remove from identity segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validateResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected:
    get:
      operationId: AssetsIdentitySegmented_List
      summary: Identity Segmented Assets
      description: Returns a list of assets that are identity segmented.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/export:
    post:
      operationId: AssetsIdentitySegmented_Export
      summary: Export identity protected assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/export/csv/{exportId}:
    get:
      operationId: AssetsIdentityProtectedExport_Get
      summary: Download identity protected assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/protected/filters:
    get:
      operationId: AssetsIdentitySegmentedFilters_List
      summary: List Identity Segmented Assets Filters
      description: Returns the filters that can be used for identity segmented assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued:
    get:
      operationId: AssetsIdentityQueued_List
      summary: Identity Learning Assets
      description: Returns a list of assets that are identity learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/export:
    post:
      operationId: AssetsIdentityQueued_Export
      summary: Export identity learning assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/export/csv/{exportId}:
    get:
      operationId: AssetsIdentityQueuedExport_Get
      summary: Download identity learning assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/identity/queued/filters:
    get:
      operationId: AssetsIdentityQueuedFilters_List
      summary: List Identity learning Assets Filters
      description: Returns the filters that can be used for identity learning assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive:
    get:
      operationId: AssetsInactive_List
      summary: Inactive Assets
      description: Returns a list of assets that are inactive.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/export:
    post:
      operationId: AssetsInactive_Export
      summary: Export inactive assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/export/csv/{exportId}:
    get:
      operationId: AssetsInactiveExport_Get
      summary: Download inactive assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/inactive/filters:
    get:
      operationId: AssetsInactiveFilters_List
      summary: List Inactive Assets Filters
      description: Returns the filters that can be used for inactive assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux:
    post:
      operationId: AssetsLinux_Create
      summary: Create linux asset
      description: Returns the assetId of the created Linux asset.
      requestBody:
        description: Linux asset details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/linuxBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/linuxResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux/scripts/add-user:
    get:
      operationId: AssetsLinuxScript_Get
      summary: Get add_znuser.sh script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/linux/scripts/add-user-available:
    get:
      operationId: AssetsLinuxScriptAvailable_Get
      summary: Check is Linux script is available
      description: Check is Linux script is available
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/linuxScriptAvailable'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored:
    get:
      operationId: AssetsMonitored_List
      summary: Monitored Assets
      description: Returns a list of assets that are monitored.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/export:
    post:
      operationId: AssetsMonitored_Export
      summary: Export monitored assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/export/csv/{exportId}:
    get:
      operationId: AssetsMonitoredExport_Get
      summary: Download monitored assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/monitored/filters:
    get:
      operationId: AssetsMonitoredFilters_List
      summary: List Monitored Assets Filters
      description: Returns the filters that can be used for monitored assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/ot:
    get:
      operationId: AssetsOT_List
      summary: List OT/IoT Assets
      description: Returns a list of OT/IoT assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
        - $ref: '#/components/parameters/showInactiveParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
    post:
      operationId: AssetsOT_Create
      summary: Create an OT/IoT asset
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createOtAssetResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/{assetId}:
    get:
      operationId: AssetOT_Get
      summary: Get an OT asset
      description: Returns the properties of an OT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetOtResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOT_Update
      summary: Edit OT/IoT asset
      description: Edit an OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otAssetEditBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/actions/protect:
    post:
      operationId: AssetOTNetworkSegment_Protect
      summary: Move specific OT/IoT asset from learning to network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/actions/queue:
    post:
      operationId: AssetOtNetwork_Queue
      summary: Add OT Asset to learning
      description: Add OT Asset to learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOtExtendNetwork_Queue
      summary: Extend OT asset learning
      description: Extend OT asset learning
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Queue days to extend by
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueAssetExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset
  /assets/ot/{assetId}/actions/unprotect:
    post:
      operationId: AssetOTNetworkSegment_Unprotect
      summary: Unprotect a specific OT/IoT asset from network segmentation
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon:
    get:
      operationId: AssetOTLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon/export:
    post:
      operationId: AssetOTLogonActivities_Export
      summary: Export logon activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: AssetOTLogonActivitiesExport_Get
      summary: Download logon activities for a specific OT/IoT asset export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon/filters:
    get:
      operationId: AssetOTLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for logon activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon/user-filters:
    get:
      operationId: AssetOTLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: AssetOTLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network:
    get:
      operationId: AssetOTNetworkActivities_List
      summary: List Network Activities for a specific OT/IoT asset
      description: Returns a list of network activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network/export:
    post:
      operationId: AssetOTNetworkActivities_Export
      summary: Export network activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network/export/csv/{exportId}:
    get:
      operationId: AssetOTNetworkActivitiesExport_Get
      summary: Download network activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network/filters:
    get:
      operationId: AssetOTNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for network activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network/user-filters:
    get:
      operationId: AssetOTNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/network/user-filters/{filterId}:
    get:
      operationId: AssetOTNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc:
    get:
      operationId: AssetOTRPCActivities_List
      summary: List RPC Activities for a specific OT/IoT asset
      description: Returns a list of RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/export:
    post:
      operationId: AssetOTRPCActivities_Export
      summary: Export RPC activities for a specific OT/IoT asset
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/export/csv/{exportId}:
    get:
      operationId: AssetOTRPCActivitiesExport_Get
      summary: Download RPC activities export for a specific OT/IoT asset
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/filters:
    get:
      operationId: AssetOTRPCActivitiesFilters_List
      summary: Get RPC activity filters for a specific OT/IoT asset
      description: Returns the filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/filters/interface-candidates:
    get:
      operationId: AssetOTRPCActivitiesInterfaceCandidatesFilters_List
      summary: Get RPC activity Interface Name filters for a specific OT/IoT asset
      description: Returns the interface name filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/filters/op-candidates:
    get:
      operationId: AssetOTRPCActivitiesOperationFilters_List
      summary: Get RPC activity operation filters for a specific OT/IoT asset
      description: Returns the operation filters that can be used for RPC activities for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/user-filters:
    get:
      operationId: AssetOTRPCActivitiesSavedFilters_List
      summary: List Saved Filters for RPC Activities
      description: Returns a list of saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTRPCActivitiesSavedFilters_Create
      summary: Create a Saved Filter for RPC Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/activities/rpc/user-filters/{filterId}:
    get:
      operationId: AssetOTRPCActivitiesSavedFilters_Get
      summary: Get a Saved Filter for RPC Activities
      description: Returns a saved filters for RPC activities.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTRPCActivitiesSavedFilters_Update
      summary: update a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTRPCActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for RPC Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/analysis:
    get:
      operationId: AssetOTAnalysis_Get
      summary: Get an OT/IoT asset analysis
      description: Returns an object with OT/IoT asset analysis data.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/analysisDirectionParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/analysis/export:
    post:
      operationId: AssetOTAnalysis_Export
      summary: Export OT/IoT asset analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/analysis/export/csv/{exportId}:
    get:
      operationId: AssetOTAnalysisExport_Get
      summary: Download OT/IoT asset analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/ancestors:
    get:
      operationId: AssetOTMemberOf_Get
      summary: Get an asset ancestors
      description: Returns a list of groups the asset is a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/ancestors/candidates:
    get:
      operationId: AssetOTMemberOfGroupCandidates_Get
      summary: Get candidates for adding the asset to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/audit:
    get:
      operationId: AssetOTAudit_Get
      summary: Get a assets audits
      description: Returns a list of audits for the asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/audit/export:
    post:
      operationId: AssetOTAudit_Export
      summary: Export assets audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/audit/export/csv/{exportId}:
    get:
      operationId: AssetOTAuditExport_Get
      summary: Download assets audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/audit/filters:
    get:
      operationId: AssetOTAuditsFilters_List
      summary: List Audit Filters for a specific OT/IoT asset
      description: Returns a list of filters for Audit events for a specific OT/IoT asset.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/managers:
    get:
      operationId: AssetOTAssetManagers_List
      summary: Get managers of asset
      description: Get asset managers of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTAssetManagers_Add
      summary: Add manager of asset
      description: Add an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTAssetManagers_Update
      summary: Update manager of asset
      description: Update an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/managers/{groupOrUserId}:
    delete:
      operationId: AssetOTAssetManagers_Delete
      summary: Remove manager of asset
      description: Remove an asset manager of asset
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/managers/candidates:
    get:
      operationId: AssetOTAssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for asset managers
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules:
    get:
      operationId: AssetOTIdentityRules_List
      summary: OT Asset List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTIdentityRules_Create
      summary: Asset Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/{ruleId}:
    get:
      operationId: AssetOTIdentityRules_Get
      summary: AssetOT Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTIdentityRules_Update
      summary: AssetOT Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTIdentityRules_Delete
      summary: AssetOT Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/asset-candidates:
    get:
      operationId: AssetOTIdentityRulesAssetsCandidates_List
      summary: AssetOT List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: AssetOTIdentityRulesExcludedAssetsCandidates_List
      summary: AssetOT List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/export:
    post:
      operationId: AssetOTIdentityRules_Export
      summary: AssetOT Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: AssetOTIdentityRulesExport_Get
      summary: AssetOT Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/filters:
    get:
      operationId: AssetOTIdentityRulesFilters_List
      summary: AssetOT List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: AssetOTIdentityRulesAssetsCandidatesFilters_List
      summary: AssetOT List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: AssetOTIdentityRulesUserCandidatesFilters_List
      summary: AssetOT List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity-rules/user-candidates:
    get:
      operationId: AssetOTIdentityRulesUserCandidates_List
      summary: AssetOT List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies:
    get:
      operationId: AssetOTMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters:
    get:
      operationId: AssetOTMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: AssetOTMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: AssetOTMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound:
    get:
      operationId: AssetOTMFAInboundPolicies_List
      summary: Asset List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTMFAInboundPolicies_Create
      summary: Asset Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAInboundPolicies_Get
      summary: Asset Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTMFAInboundPolicies_Update
      summary: Asset Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTMFAInboundPolicies_Delete
      summary: Asset Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidates_List
      summary: Asset Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: AssetOTMFAInboundPoliciesFilters_List
      summary: Asset List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulate_Test
      summary: Simulate Inbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Asset List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: AssetOTMFAInboundPoliciesMFAMethods_List
      summary: Asset List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceCandidates_List
      summary: Asset List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: AssetOTMFAInboundPoliciesSourceUserCandidates_List
      summary: Asset List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound:
    get:
      operationId: AssetOTMFAOutboundPolicies_List
      summary: Asset List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTMFAOutboundPolicies_Create
      summary: Asset Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: AssetOTMFAOutboundPolicies_Get
      summary: Asset Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTMFAOutboundPolicies_Update
      summary: Asset Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTMFAOutboundPolicies_Delete
      summary: Asset Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidates_List
      summary: Asset List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Asset get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: AssetOTMFAOutboundPoliciesFilters_Get
      summary: Asset List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Asset Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Asset List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: AssetOTMFAOutboundPoliciesMFAMethods_List
      summary: Asset List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceCandidates_List
      summary: Asset List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: AssetOTMFAOutboundPoliciesSourceUserCandidates_List
      summary: Asset Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules:
    get:
      operationId: AssetOTRPCRules_List
      summary: Asset List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTRPCRules_Create
      summary: Asset Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: AssetOTRPCRule_Get
      summary: Asset Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTRPCRule_Update
      summary: Asset Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTRPCRule_Delete
      summary: Asset Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: AssetOTRPCRulesExcludedDestinationCandidates_List
      summary: Asset Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/export:
    post:
      operationId: AssetOTRPCRules_Export
      summary: Asset Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: AssetOTRPCRulesExport_Get
      summary: Download assets RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/filters:
    get:
      operationId: AssetOTRPCRulesFilters_List
      summary: Asset List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: AssetOTRPCRulesDestinationCandidatesFilters_List
      summary: Asset List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: AssetOTRPCRulesSourceCandidatesFilters_List
      summary: Asset Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: AssetOTRPCRulesUserCandidatesFilters_List
      summary: AssetOT List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/local-candidates:
    get:
      operationId: AssetOTRPCRulesDestinationCandidates_List
      summary: Asset List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: AssetOTRPCRulesSourceCandidates_List
      summary: Asset List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rpc-rules/user-candidates:
    get:
      operationId: AssetOTRPCRulesUserCandidates_List
      summary: AssetOT List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: AssetOTRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific OT/IoT asset
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/history/{ruleId}:
    get:
      operationId: AssetOTRulesHistory_Get
      summary: Get a historic version of an rule for a specific OT/IoT asset
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound:
    get:
      operationId: AssetOTInboundRules_List
      summary: Asset List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTInboundRules_Create
      summary: Asset Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: AssetOTInboundRule_Get
      summary: Asset Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTInboundRule_Update
      summary: Asset Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTInboundRule_Delete
      summary: Asset Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: AssetOTInboundRulesExcludedDestinationCandidates_List
      summary: Asset Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/export:
    post:
      operationId: AssetOTInboundRules_Export
      summary: Asset Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: AssetOTInboundRulesExport_Get
      summary: Download assets inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/filters:
    get:
      operationId: AssetOTInboundRulesFilters_List
      summary: Asset List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: AssetOTInboundRulesDestinationCandidatesFilters_List
      summary: Asset List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: AssetOTInboundRulesSourceCandidatesFilters_List
      summary: Asset Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/local-candidates:
    get:
      operationId: AssetOTInboundRulesDestinationCandidates_List
      summary: Asset List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: AssetOTInboundRulesSourceCandidates_List
      summary: Asset List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOTInboundRulesReview_ApproveWithChanges
      summary: Asset Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: AssetOTInboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOTInboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound:
    get:
      operationId: AssetOTOutboundRules_List
      summary: Asset List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    post:
      operationId: AssetOTOutboundRules_Create
      summary: Asset Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: AssetOTOutboundRule_Get
      summary: Asset Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    put:
      operationId: AssetOTOutboundRule_Update
      summary: Asset Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
    delete:
      operationId: AssetOTOutboundRule_Delete
      summary: Asset Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: AssetOTOutboundRulesExcludedSourceCandidates_List
      summary: Asset List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/export:
    post:
      operationId: AssetOTOutboundRules_Export
      summary: Asset Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: AssetOTOutboundRulesExport_Get
      summary: Download assets outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/filters:
    get:
      operationId: AssetOTOutboundRulesFilters_List
      summary: Asset List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: AssetOTOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: AssetOTOutboundRulesSourceCandidatesFilters_List
      summary: Asset List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: AssetOTOutboundRulesDestinationCandidatesFilters_List
      summary: Asset List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: AssetOTOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for an asset
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/local-candidates:
    get:
      operationId: AssetOTOutboundRulesSourceCandidates_List
      summary: Asset List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: AssetOTOutboundRulesDestinationCandidates_List
      summary: Asset List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/user-candidates:
    get:
      operationId: AssetOTOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for an asset
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: AssetOTOutboundRulesReview_ApproveWithChanges
      summary: Asset Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: AssetOTOutboundRulesReview_Approve
      summary: Asset Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: AssetOTOutboundRulesReview_Deny
      summary: Asset ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Asset OT/IoT
  /assets/ot/{assetId}/tags:
    get:
      operationId: AssetOTTags_Get
      summary: Get OT asset tags
      description: Returns a list of tags for an entity.
      parameters:
        - $ref: '#/components/parameters/assetIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tags'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Asset OT/IoT
  /assets/ot/actions/protect:
    post:
      operationId: AssetsOTNetworkSegment_Protect
      summary: Assets OT/IoT add to network segmentation
      description: Returns an empty response.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/actions/queue:
    post:
      operationId: AssetsOtNetwork_Queue
      summary: Move OT asset from monitored to learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsOtExtendNetwork_Queue
      summary: Extend OT asset learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/ot/actions/unprotect:
    post:
      operationId: AssetsOTNetworkSegment_Unprotect
      summary: Unprotect OT/IoT Asset from network segmentation
      description: Returns and empty body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsUnprotectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/ot/export:
    post:
      operationId: AssetsOT_Export
      summary: Export ot assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/ot/export/csv/{exportId}:
    get:
      operationId: AssetsOTExport_Get
      summary: Download ot assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/ot/filters:
    get:
      operationId: AssetsOTFilters_List
      summary: List OT/IoT Assets Filters
      description: Returns a list of filters for OT/IoT assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets OT/IoT
  /assets/preferred-deployment:
    get:
      operationId: AssetsPreferredSegmentServer_Get
      summary: get the preferred segment server for an asset
      description: Returns the preferred segment server id.
      requestBody:
        description: The assetId
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsPreferredSegmentServerBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsPreferredSegmentServer'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected:
    get:
      operationId: AssetsNetworkSegmented_List
      summary: List Protected Assets
      description: Returns a list of Protected assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/export:
    post:
      operationId: AssetsNetworkSegmented_Export
      summary: Export Protected assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/export/csv/{exportId}:
    get:
      operationId: AssetsProtectedExport_Get
      summary: Download Protected assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/filters:
    get:
      operationId: AssetsProtectedFilters_List
      summary: List Assets Protected Filters
      description: Returns a list of filters for Protected assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/protected/searchId:
    get:
      operationId: AssetsNetworkSegmented_Search
      tags:
        - Assets
      summary: Search protected asset by FQDN
      description: 'Given fqdn, returns assetId, if asset is found and is protected'
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdSearch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /assets/queued:
    get:
      operationId: AssetsNetworkQueued_List
      summary: List Assets in network learning
      description: Returns a list of assets in network learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/export:
    post:
      operationId: AssetsNetworkQueued_Export
      summary: Export Network Queued assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/export/csv/{exportId}:
    get:
      operationId: AssetsNetworkQueuedExport_Get
      summary: Download Network Queued assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/queued/filters:
    get:
      operationId: AssetsNetworkQueuedFilters_List
      summary: List Assets in network learning Filters
      description: Returns a list of filters for assets in network learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/monitor:
    post:
      operationId: AssetsRpcMonitoring_Add
      summary: Add assets to RPC monitoring
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to add to RPC monitoring
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/protect:
    post:
      operationId: AssetsRpcSegment_Protect
      summary: Add assets to RPC segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to add to RPC segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/queue:
    post:
      operationId: AssetsRPC_Queue
      summary: Move asset from monitored to RPC learning
      description: Returns and empty object.
      requestBody:
        description: Array of assetIds to move to RPC learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRPCQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
    put:
      operationId: AssetsExtendRPC_Queue
      summary: Extend asset RPC learning period
      description: Returns an empty object.
      requestBody:
        description: Array of assetIds to extend RPC learning
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueExtendRPCBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/unmonitor:
    post:
      operationId: AssetsRpcMonitoring_Delete
      summary: Remove assets from RPC monitoring
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to remove from RPC monitoring
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc-actions/unprotect:
    post:
      operationId: AssetsRpcSegment_Unprotect
      summary: Remove assets from RPC segmentation
      description: Returns and empty object.
      requestBody:
        description: Array of asset ids to remove from RPC segmentation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetsRpcBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored:
    get:
      operationId: AssetsRPCMonitored_List
      summary: RPC Monitored Assets
      description: Returns a list of assets that are RPC monitored.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/export:
    post:
      operationId: AssetsRPCMonitored_Export
      summary: Export RPC Monitored assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/export/csv/{exportId}:
    get:
      operationId: AssetsRPCMonitoredExport_Get
      summary: Download RPCMonitored assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/monitored/filters:
    get:
      operationId: AssetsRPCMonitoredFilters_List
      summary: List RPC Monitored Assets Filters
      description: Returns the filters that can be used for RPC monitored assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected:
    get:
      operationId: AssetsRPCSegmented_List
      summary: List RPC Segmented Assets
      description: Returns a list of assets that are RPC Segmented.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/export:
    post:
      operationId: AssetsRPCSegmented_Export
      summary: Export RPC Segmented assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/export/csv/{exportId}:
    get:
      operationId: AssetsRPCSegmentedExport_Get
      summary: Download RPC Segmented assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/protected/filters:
    get:
      operationId: AssetsRPCSegmentedFilters_List
      summary: List RPC Protected Assets Filters
      description: Returns the filters that can be used for RPC Protected assets.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued:
    get:
      operationId: AssetsRPCQueued_List
      summary: List Assets in RPC learning
      description: Returns a list of assets in RPC learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchAssetsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/export:
    post:
      operationId: AssetsRPCQueued_Export
      summary: Export RPC Queued assets
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAssets'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/export/csv/{exportId}:
    get:
      operationId: AssetsRPCQueuedExport_Get
      summary: Download RPC Queued assets export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/rpc/queued/filters:
    get:
      operationId: AssetsRPCQueuedFilters_List
      summary: List Assets in RPC learning Filters
      description: Returns a list of filters for assets in RPC learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/fix-wmi:
    get:
      operationId: AssetsScripts_FixWmi
      summary: Get fix-wmi.sh script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/test-udp-net-connection/powershell:
    get:
      operationId: AssetsScriptsPowerShellTestUdpNetConnection_Get
      summary: Get testUdpNetConnection.ps1 script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/scripts/test-udp-net-connection/python:
    get:
      operationId: AssetsScriptsPythonTestUdpNetConnection_Get
      summary: Get testUdpNetConnection.py script
      description: Returns the script as application/octet-stream.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/searchId:
    get:
      operationId: Assets_Search
      summary: Search Asset by FQDN
      description: Returns an assetId.
      parameters:
        - $ref: '#/components/parameters/fqdnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetIdSearch'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/states/statistics:
    get:
      operationId: AssetsStatesStatistics_Get
      summary: Get asset state statistics
      description: Returns an object with asset state statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/statistics:
    get:
      operationId: AssetsStatistics_Get
      summary: Get asset statistics
      description: Returns an object with asset statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /assets/switches:
    get:
      operationId: Switches_Get
      summary: Get switches
      description: Returns all switches.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/switchArray'
              examples:
                example-1:
                  value: { }
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
    put:
      operationId: Switches_put
      description: create a switch
      summary: add new switch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switch'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
  /assets/switches/{switchId}:
    patch:
      operationId: Switches_patch
      summary: edit switch
      description: update a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switch'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
    delete:
      operationId: Switches_delete
      summary: delete switch
      description: delete a switch
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
  /assets/switches/{switchId}/interfaces:
    get:
      operationId: Switches_get_interfaces
      summary: get switches interfaces
      description: list switch interfaces
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Switch
    put:
      operationId: Update_switch_interfaces_monitor
      summary: update switch interfaces monitor
      parameters:
        - $ref: '#/components/parameters/switchIdParameter'
      requestBody:
        description: 'update switch interfaces monitor state'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/switchInterfacesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: [ ]
      tags:
        - Switch
  /audit:
    get:
      operationId: Audits_List
      summary: List Audit Logs
      description: Returns a list of audit events.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/export:
    post:
      operationId: Audits_Export
      summary: Export audit log
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/export/csv/{exportId}:
    get:
      operationId: AuditExport_Get
      summary: Download audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Audit
  /audit/filters:
    get:
      operationId: AuditsFilters_List
      summary: List Audit Filters
      description: Returns a list of filters for Audit events.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Audit
  /auth/challenge:
    post:
      operationId: AuthChallenge_POST
      summary: Challenge API to get token
      description: Request OTP for login API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/challengeBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/challengeResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/login:
    post:
      operationId: AuthLogin_POST
      summary: Login to get token
      description: Login API after getting challenge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Auth
  /auth/logout:
    post:
      operationId: AuthLogout_POST
      summary: Logout
      description: Logout API
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Auth
  /download/cloud-connector/installer:
    get:
      operationId: CloudConnectorInstaller_Download
      summary: Download the Cloud Connector installer
      description: Returns a temporary url to the Cloud Connector installer.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/connect/client:
    get:
      operationId: ConnectClient_Download
      summary: Download the Connect client
      description: Returns a temporary url to the Connect client zip.
      parameters:
        - $ref: '#/components/parameters/connectClientDownloadParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/connect/server:
    get:
      operationId: ConnectServer_Download
      summary: Download the Connect server
      description: Returns a temporary url to the Connect server zip.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /download/segment/server:
    get:
      operationId: SegmentServer_Download
      summary: Download the Segment server
      description: Returns a temporary url to the Segment server zip.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadUrl'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /entities/encode-ip:
    get:
      operationId: Entity_EncodeIP
      summary: Encode IP to Asset
      description: Returns the assetId after encoding the IP address.
      parameters:
        - $ref: '#/components/parameters/ipParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-ip-range:
    get:
      operationId: Entity_EncodeIPRange
      summary: Encode IP range
      description: Returns the assetId after encoding the IP range.
      parameters:
        - $ref: '#/components/parameters/ipRangeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /entities/encode-subnet:
    get:
      operationId: Entity_EncodeSubnet
      summary: Encode IP Subnet
      description: Returns the assetId after encoding the IP subnet.
      parameters:
        - $ref: '#/components/parameters/ipSubnetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/encodedEntity'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Entity
  /environments/cluster-strategy:
    get:
      operationId: SettingsClusterStrategy_Get
      summary: Get cluster strategy configuration
      description: Returns cluster strategy configuration.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClusterStrategy'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
    put:
      operationId: SettingsClusterStrategy_Update
      summary: Set cluster strategy configuration
      description: Returns an empty response.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClusterStrategyBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings
  /environments/deployments:
    get:
      operationId: SegmentServers_List
      summary: List segment server deployments
      description: Returns a list of segment servers.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploymentsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Servers
  /environments/deployments/access-token:
    post:
      operationId: SegmentServersInstallToken_Create
      summary: Create segment server installation token
      description: Returns a an access token.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Segment Servers
  /groups:
    get:
      operationId: Groups_List
      summary: List Groups
      description: Returns a list of groups. Pass the returned 'nextCursor' as the '_cursor' query param of the next request for batches, when the '_offset' param is not used.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchGroupsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}:
    get:
      operationId: GroupsByType_List
      summary: List Groups
      description: Returns a list of groups. Pass the returned 'nextCursor' as the '_cursor' query param of the next request for batches, when the '_offset' param is not used.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchGroupsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/externalId/{externalId}:
    get:
      operationId: GroupsExternalId_Search
      summary: Search for a group by external Id
      description: Returns a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/externalIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/filters:
    get:
      operationId: GroupsFilters_Get
      summary: List filters for groups
      description: Returns a list of filters for Groups.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}:
    get:
      operationId: Group_Get
      summary: Get a group
      description: Returns the properties of an group.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/expand-record:
    get:
      operationId: GroupsSimulateSegmentationReportRecord_Expand
      summary: Expand a Simulate Segmentation Report record for a Group
      description: Returns a the details of the record
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/port'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/processes'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationReportRecord'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/export:
    post:
      operationId: GroupsSimulateSegmentationReport_Export
      summary: Export simulate Segmentation Report for a Group
      description: export simulate Segmentation Report for a Group
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/export/csv/{exportId}:
    get:
      operationId: GroupsSimulateSegmentationReportExport_Get
      summary: Download simulate Segmentation Report for a Group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/generate:
    post:
      operationId: GroupsSimulateSegmentationReport_Generate
      summary: Generate Simulate Segmentation Report for a Group
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groupSimulateSegmentationReportBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/report:
    get:
      operationId: GroupsSimulateSegmentationReport_Get
      summary: Get Simulate Segmentation Report for a Group
      description: Returns a the simulate segmentation report for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationReport'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/access-simulation/state:
    get:
      operationId: GroupsSimulateSegmentationState_Get
      summary: Get Simulate Segmentation State for a Group
      description: Returns a the simulate segmentation state for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupSimulateSegmentationState'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network:
    get:
      operationId: GroupsNetworkActivities_List
      summary: List Network Activities for a specific group
      description: Returns a list of network activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/export:
    post:
      operationId: GroupsNetworkActivities_Export
      summary: Export network activities for a specific group
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/export/csv/{exportId}:
    get:
      operationId: GroupsNetworkActivitiesExport_Get
      summary: Download network activities export for a specific group
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/filters:
    get:
      operationId: GroupsNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific group
      description: Returns the filters that can be used for network activities for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/user-filters:
    get:
      operationId: GroupsNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/activities/network/user-filters/{filterId}:
    get:
      operationId: GroupsNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/ancestors:
    get:
      operationId: GroupMemberOf_Get
      summary: Get a groups ancestors
      description: Returns a list of groups the group is a member of.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/ancestors/candidates:
    get:
      operationId: GroupMemberOfGroupCandidates_Get
      summary: Get candidates for adding the group to a group
      description: Returns a list of groups the asset can be a member of.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit:
    get:
      operationId: GroupAudit_Get
      summary: Get a groups audits
      description: Returns a list of audits for the group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/export:
    post:
      operationId: groupsAudit_Export
      summary: Export groups audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/export/csv/{exportId}:
    get:
      operationId: GroupsAuditExport_Get
      summary: Download groups audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/audit/filters:
    get:
      operationId: GroupsAuditsFilters_List
      summary: List Audit Filters for a specific Group
      description: Returns a list of filters for Audit events for a specific group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets:
    get:
      operationId: Groups-ManagedAssets_List
      summary: Get managed assets
      description: Get managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: Groups-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: Groups-ManagedAssets_Update
      summary: Update a managed assets
      description: Update a managed assets for group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: managed asset to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsUpdateBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets/{groupOrAssetId}:
    delete:
      operationId: Groups-ManagedAssets_Delete
      summary: Remove asset manager
      description: Remove managed asset of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managed-assets/candidates:
    get:
      operationId: Groups-ManagedAssetsCandidates_List
      summary: Get asset manager candidates
      description: Get asset candidates to be managed by group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers:
    get:
      operationId: Groups-AssetManagers_List
      summary: Get managers of group
      description: Get asset managers of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsAssetManagers_Add
      summary: Add asset manager of group
      description: Add an asset manager of a group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Array of managers to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsAssetManagers_Update
      summary: Update manager of a group
      description: Update an asset manager of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      requestBody:
        description: Permission to change
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assetManagersUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers/{groupOrUserId}:
    delete:
      operationId: Groups-AssetManagers_Delete
      summary: Remove asset manager
      description: Remove asset manager of group
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupOrUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/managers/candidates:
    get:
      operationId: Groups-AssetManagersCandidates_List
      summary: Get manager candidates
      description: Get manager candidates for group managers
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies:
    get:
      operationId: GroupsExternalAccessPolicy_List
      summary: List External Access policies for a group
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsExternalAccessPolicy_Create
      summary: Create an external access policy for a group
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/{policyId}:
    get:
      operationId: GroupsExternalAccessPolicy_Get
      summary: Get an External Access policy for a group
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsExternalAccessPolicy_Update
      summary: Update an External Access policy for a group
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsExternalAccessPolicy_Delete
      summary: Delete an External Access policy for a group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: GroupsExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for a group
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters:
    get:
      operationId: GroupsExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for a group
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: GroupsExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for a group
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: GroupsExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for a group
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: GroupsExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for a group
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/external-access-policies/statistics:
    get:
      operationId: GroupsExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for a group
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity-rules:
    get:
      operationId: GroupsIdentityRules_List
      summary: Groups List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsIdentityRules_Create
      summary: Groups Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/{ruleId}:
    get:
      operationId: GroupsIdentityRules_Get
      summary: Groups Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsIdentityRules_Update
      summary: Groups Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsIdentityRules_Delete
      summary: Groups Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/asset-candidates:
    get:
      operationId: GroupsIdentityRulesAssetsCandidates_List
      summary: Groups List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: GroupsIdentityRulesExcludedAssetsCandidates_List
      summary: Groups List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded Assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/export:
    post:
      operationId: GroupsIdentityRules_Export
      summary: Groups Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: GroupsIdentityRulesExport_Get
      summary: Groups Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters:
    get:
      operationId: GroupsIdentityRulesFilters_List
      summary: Groups List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: GroupsIdentityRulesAssetsCandidatesFilters_List
      summary: Groups List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: GroupsIdentityRulesUserCandidatesFilters_List
      summary: Groups List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity-rules/user-candidates:
    get:
      operationId: GroupsIdentityRulesUserCandidates_List
      summary: Groups List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies:
    get:
      operationId: GroupsMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: GroupsMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters:
    get:
      operationId: GroupsMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: GroupsMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: GroupsMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound:
    get:
      operationId: GroupsMFAInboundPolicies_List
      summary: Groups List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsMFAInboundPolicies_Create
      summary: Groups Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: GroupsMFAInboundPolicies_Get
      summary: Groups Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsMFAInboundPolicies_Update
      summary: Groups Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsMFAInboundPolicies_Delete
      summary: Groups Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidates_List
      summary: Groups Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters:
    get:
      operationId: GroupsMFAInboundPoliciesFilters_List
      summary: Groups List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidatesFilters_List
      summary: Groups List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: GroupsMFAInboundPoliciesMFAMethods_List
      summary: Groups List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate:
    get:
      operationId: GroupsMFAInboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceCandidates_List
      summary: Groups List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: GroupsMFAInboundPoliciesSourceUserCandidates_List
      summary: Groups List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound:
    get:
      operationId: GroupsMFAOutboundPolicies_List
      summary: Groups List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsMFAOutboundPolicies_Create
      summary: Groups Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: GroupsMFAOutboundPolicies_Get
      summary: Groups Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsMFAOutboundPolicies_Update
      summary: Groups Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsMFAOutboundPolicies_Delete
      summary: Groups Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidates_List
      summary: Groups List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Groups get excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters:
    get:
      operationId: GroupsMFAOutboundPoliciesFilters_Get
      summary: Groups List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Groups Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: Groups List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: GroupsMFAOutboundPoliciesMFAMethods_List
      summary: Groups List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceCandidates_List
      summary: Groups List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: GroupsMFAOutboundPoliciesSourceUserCandidates_List
      summary: Groups Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rpc-rules:
    get:
      operationId: GroupsRPCRules_List
      summary: Groups List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    post:
      operationId: GroupsRPCRules_Create
      summary: Groups Create RPC Rule
      description: Returns the properties of the create RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/{ruleId}:
    get:
      operationId: GroupsRPCRule_Get
      summary: Groups Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    put:
      operationId: GroupsRPCRule_Update
      summary: Groups Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
    delete:
      operationId: GroupsRPCRule_Delete
      summary: Groups Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: GroupsRPCRulesExcludedDestinationCandidates_List
      summary: Groups Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/export:
    post:
      operationId: GroupsRPCRules_Export
      summary: Groups Export RPC Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: GroupsRPCRulesExport_Get
      summary: Download Groups RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters:
    get:
      operationId: GroupsRPCRulesFilters_List
      summary: Groups List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/local-candidates:
    get:
      operationId: GroupsRPCRulesDestinationCandidatesFilters_List
      summary: Groups List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: GroupsRPCRulesSourceCandidatesFilters_List
      summary: Groups Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/filters/user-candidates:
    get:
      operationId: GroupsRPCRulesUserCandidatesFilters_List
      summary: Groups List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/local-candidates:
    get:
      operationId: GroupsRPCRulesDestinationCandidates_List
      summary: Groups List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/remote-candidates:
    get:
      operationId: GroupsRPCRulesSourceCandidates_List
      summary: Groups List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rpc-rules/user-candidates:
    get:
      operationId: GroupsRPCRulesUserCandidates_List
      summary: Groups List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/{groupType}/{groupId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: GroupsRulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/history/{ruleId}:
    get:
      operationId: GroupsRulesHistory_Get
      summary: Get a historic version of an rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound:
    get:
      operationId: GroupsInboundRules_List
      summary: Groups List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsInboundRules_Create
      summary: Groups Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/{ruleId}:
    get:
      operationId: GroupsInboundRule_Get
      summary: Groups Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsInboundRule_Update
      summary: Groups Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsInboundRule_Delete
      summary: Groups Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: GroupsInboundRulesExcludedDestinationCandidates_List
      summary: Groups Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/export:
    post:
      operationId: GroupsInboundRules_Export
      summary: Groups Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: GroupsInboundRulesExport_Get
      summary: Download groups Inbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters:
    get:
      operationId: GroupsInboundRulesFilters_List
      summary: Groups List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: GroupsInboundRulesSourceCandidatesFilters_List
      summary: Groups Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/filters/local-candidates:
    get:
      operationId: GroupsInboundRulesDestinationCandidatesFilters_List
      summary: Groups List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/local-candidates:
    get:
      operationId: GroupsInboundRulesDestinationCandidates_List
      summary: Groups List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/remote-candidates:
    get:
      operationId: GroupsInboundRulesSourceCandidates_List
      summary: Groups List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: GroupsInboundRulesReview_ApproveWithChanges
      summary: Groups Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: GroupsInboundRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: GroupsInboundRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound:
    get:
      operationId: GroupsOutboundRules_List
      summary: Groups List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/directionParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    post:
      operationId: GroupsOutboundRules_Create
      summary: Groups Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/{ruleId}:
    get:
      operationId: GroupsOutboundRule_Get
      summary: Groups Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    put:
      operationId: GroupsOutboundRule_Update
      summary: Groups Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
    delete:
      operationId: GroupsOutboundRule_Delete
      summary: Groups Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: GroupsOutboundRulesExcludedSourceCandidates_List
      summary: Groups List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/export:
    post:
      operationId: GroupsOutboundRules_Export
      summary: Groups Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: GroupsOutboundRulesExport_Get
      summary: Download groups Outbound rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters:
    get:
      operationId: GroupsOutboundRulesFilters_List
      summary: Groups List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: GroupsOutboundRulesExcludedSourceCandidatesFilters_List
      summary: Groups List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/local-candidates:
    get:
      operationId: GroupsOutboundRulesSourceCandidatesFilters_List
      summary: Groups List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: GroupsOutboundRulesDestinationCandidatesFilters_List
      summary: Groups List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/filters/user-candidates:
    get:
      operationId: GroupsOutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates for a group
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/local-candidates:
    get:
      operationId: GroupsOutboundRulesSourceCandidates_List
      summary: Groups List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/remote-candidates:
    get:
      operationId: GroupsOutboundRulesDestinationCandidates_List
      summary: Groups List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: GroupsOutboundRulesReview_ApproveWithChanges
      summary: Groups Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: GroupsOutboundRulesReview_Approve
      summary: Groups Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: GroupsOutboundRulesReview_Deny
      summary: Groups ''
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Group
  /groups/{groupType}/{groupId}/protection/rules/outbound/user-candidates:
    get:
      operationId: GroupsOutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates for a group
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/successors:
    get:
      operationId: GroupsMembers_List
      summary: List Group members
      description: Returns a list of potential members for a group.
      parameters:
        - $ref: '#/components/parameters/groupTypeParameter'
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/includeNestedMembersQueryParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/{groupType}/{groupId}/successors/filters:
    get:
      operationId: GroupSuccessorsFilters_List
      summary: Get groups successors filters
      description: Returns a list of filters for Group members.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
        - $ref: '#/components/parameters/groupTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Group
  /groups/ad/export:
    post:
      operationId: ADGroups_Export
      summary: Export AD Groups
      description: export list of AD groups.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  /groups/ad/export/csv/{exportId}:
    get:
      operationId: ADGroupsExport_Get
      summary: Download Ad groups Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Groups Active Directory
  /groups/custom:
    post:
      operationId: CustomGroups_Create
      summary: Create Custom Group
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customGroupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/{groupId}:
    put:
      operationId: CustomGroups_Update
      summary: Update Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customGroupResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroups_Delete
      summary: Delete Custom Group
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/member-candidates:
    get:
      operationId: CustomGroupsCandidates_List
      summary: List Custom Groups member candidates
      description: Returns a list of candidates for custom group membership.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/groupIdQueryParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/custom/{groupId}/members:
    put:
      operationId: CustomGroupsMembers_Add
      summary: Add Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: CustomGroupsMembers_Delete
      summary: Delete Custom Group members
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Custom Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
  /groups/statistics:
    get:
      operationId: GroupsStatistics_Get
      summary: Get Group statistics
      description: Returns an object with group statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups
  /groups/tag/{groupId}/members:
    put:
      operationId: TagGroupsMembers_Add
      summary: Add Tag Group members.
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tagGroupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emptyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Custom
    delete:
      operationId: TagGroupsMembers_delete
      summary: Remove tag group members
      description: Remove tag group members by members id.
      parameters:
        - $ref: '#/components/parameters/groupIdParameter'
      requestBody:
        description: Tag Group Members properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customGroupMembersBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Tag
  /groups/tag/member-candidates:
    get:
      operationId: TagGroupsCandidates_List
      summary: List Tag Groups member candidates
      description: Returns a list of candidates for tag group membership.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/groupIdQueryParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Groups Tag
  /profile:
    get:
      operationId: Profile_Get
      description: Returns user profile
      summary: Get user provilde
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profileResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Profile
  /profile/environments:
    get:
      description: Get Environment Profile
      operationId: Profile_GetEnvironments
      tags:
        - Profile
      summary: Get all environments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  environments:
                    type: array
                    items:
                      type: object
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /protection-policies/identity:
    get:
      operationId: IdentityOnboardingPolicies_List
      summary: List identity onboarding policies
      description: Returns a list of identity onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    post:
      operationId: IdentityOnboardingPolicies_Create
      summary: Add identity onboarding policy
      description: Returns the identity onboarding policy that was created.
      requestBody:
        description: Identity onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/{onboardingPolicyId}:
    delete:
      operationId: IdentityOnboardingPolicies_Delete
      summary: Remove identity onboarding policy
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/onboardingPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    put:
      operationId: IdentityOnboardingPolicies_Update
      summary: Update identity onboarding policy
      description: Returns the updated settings for the identity onboarding policy.
      parameters:
        - $ref: '#/components/parameters/onboardingPolicyIdParameter'
      requestBody:
        description: Identity onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/identity/group-candidates:
    get:
      operationId: IdentityOnboardingPoliciesGroupCandidates_List
      summary: Get groups for identity onboarding policy
      description: Returns a list of candidates for identity onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network:
    get:
      operationId: NetworkOnboardingPolicies_List
      summary: List network onboarding policies
      description: Returns a list of network onboarding policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPoliciesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    post:
      operationId: NetworkOnboardingPolicies_Create
      summary: Add network onboarding policy
      description: Returns the network onboarding policy that was created.
      requestBody:
        description: Network onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/{onboardingPolicyId}:
    delete:
      operationId: NetworkOnboardingPolicies_Delete
      summary: Remove network onboarding policy
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/onboardingPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
    put:
      operationId: NetworkOnboardingPolicies_Update
      summary: Update network onboarding policy
      description: Returns the updated settings for the network onboarding policy.
      parameters:
        - $ref: '#/components/parameters/onboardingPolicyIdParameter'
      requestBody:
        description: Network onboarding Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/protectionPolicyUpdateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protectionPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection-policies/network/group-candidates:
    get:
      operationId: NetworkOnboardingPoliciesGroupCandidates_List
      summary: Get candidates for Network onboarding Policies.
      description: Returns a list of candidates for a network onboarding policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Onboarding Policies
  /protection/ae-exclusions/inbound:
    get:
      operationId: AEExclusionsInbound_List
      summary: List Automation Engine Inbound exclusions
      description: Returns a list of AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/{ruleId}:
    delete:
      operationId: AEExclusionsInbound_Delete
      summary: Delete Automation Engine Inbound exclusions
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/export:
    post:
      operationId: AEExclusionsInbound_Export
      summary: Export Automation Engine Inbound exclusions
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/export/csv/{exportId}:
    get:
      operationId: AEExclusionsInboundExport_Get
      summary: Download Automation Engine Exclusions Inbound Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters:
    get:
      operationId: AEExclusionsInboundFilters_List
      summary: List Automation Engine Exclusions Inbound Filters
      description: Returns a list of filters for AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters/local-candidates:
    get:
      operationId: AEExclusionsInboundDestinationCandidatesFilters_List
      summary: List Automation Engine Exclusions Inbound Destination Candidates Filters
      description: Returns a list of filters for destination candidates for AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/inbound/filters/remote-candidates:
    get:
      operationId: AEExclusionsInboundSourceCandidatesFilters_List
      summary: Get Automation Engine Exclusions Inbound Source Candidates Filters
      description: Returns a list of filters for source candidates AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound:
    get:
      operationId: AEExclusionsOutbound_List
      summary: List Automation Engine Outbound exclusions
      description: Returns a list of AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aeExclusionList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/{ruleId}:
    delete:
      operationId: AEExclusionsOutbound_Delete
      summary: Delete Automation Engine Outbound exclusions
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/export:
    post:
      operationId: AEExclusionsOutbound_Export
      summary: Export Automation Engine Outbound exclusions
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/export/csv/{exportId}:
    get:
      operationId: AEExclusionsOutboundExport_Get
      summary: Download Automation Engine Exclusions Outbound Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters:
    get:
      operationId: AEExclusionsOutboundFilters_List
      summary: List Automation Engine Exclusions Outbound Filters
      description: Returns a list of filters for AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters/local-candidates:
    get:
      operationId: AEExclusionsOutboundDestinationCandidatesFilters_List
      summary: List Automation Engine Exclusions Outbound Destination Candidates Filters
      description: Returns a list of filters for destination candidates for AE exclusions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/ae-exclusions/outbound/filters/remote-candidates:
    get:
      operationId: AEExclusionsOutboundSourceCandidatesFilters_List
      summary: Get Automation Engine Exclusions Outbound Source Candidates Filters
      description: Returns a list of filters for source candidates AE exclusions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - AE Exclusions
  /protection/external-access-policies:
    get:
      operationId: ExternalAccessPolicy_List
      summary: List External Access policies
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    post:
      operationId: ExternalAccessPolicy_Create
      summary: Create an external access policy
      description: Returns a the external access policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/{policyId}:
    get:
      operationId: ExternalAccessPolicy_Get
      summary: Get an External Access policy
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    put:
      operationId: ExternalAccessPolicy_Update
      summary: Update an External Access policy
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
    delete:
      operationId: ExternalAccessPolicy_Delete
      summary: Delete an External Access policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: ExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters:
    get:
      operationId: ExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters
      description: Returns a list of filters for external access policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: ExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: ExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/src-users-candidates:
    get:
      operationId: ExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/external-access-policies/statistics:
    get:
      operationId: ExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics
      description: Returns statistics for an external access policy.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - External Access Policy
  /protection/identity-rules:
    get:
      operationId: IdentityRules_List
      summary: List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    post:
      operationId: IdentityRules_Create
      summary: Create an Identity Rule
      description: Returns a the identity segmentation rule.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/{ruleId}:
    get:
      operationId: IdentityRules_Get
      summary: Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    put:
      operationId: IdentityRules_Update
      summary: Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
    delete:
      operationId: IdentityRules_Delete
      summary: Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/asset-candidates:
    get:
      operationId: IdentityRulesAssetsCandidates_List
      summary: List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: IdentityRulesExcludedAssetsCandidates_List
      summary: List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/export:
    post:
      operationId: IdentityRules_Export
      summary: Export Identity Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: IdentityRulesExport_Get
      summary: Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters:
    get:
      operationId: IdentityRulesFilters_List
      summary: List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters/asset-candidates:
    get:
      operationId: IdentityRulesAssetsCandidatesFilters_List
      summary: List Identity Rules Filters Assets Candidates
      description: Returns a list of assets candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/filters/user-candidates:
    get:
      operationId: IdentityRulesUserCandidatesFilters_List
      summary: List Identity Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity-rules/user-candidates:
    get:
      operationId: IdentityRulesUserCandidates_List
      summary: List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Identity
  /protection/identity/reactive-policies:
    get:
      operationId: MFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    post:
      operationId: MFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: MFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    put:
      operationId: MFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
    delete:
      operationId: MFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters:
    get:
      operationId: MFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: MFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: MFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Identity
  /protection/ot-rules:
    get:
      operationId: OtRules_get
      summary: List switch rules Filters
      description: Returns a list of switch rules.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
    post:
      operationId: OtRule_post
      summary: Add switch rule
      description: Add switch rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otRuleBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/ot-rules/{ruleId}:
    delete:
      operationId: OtRules_delete
      summary: delete rule
      description: delete rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
    put:
      operationId: OtRule_update
      summary: Add switch rule
      description: Add switch rule
      parameters:
        - $ref: '#/components/parameters/otRuleIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/otRuleBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/ot-rules/filters:
    get:
      operationId: SwitchFilters_List
      summary: List Switch Filters
      description: Returns a list of filters for Switches.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/reactive-policies/distribution:
    get:
      operationId: MFAPoliciesDistribution_List
      summary: MFA distribution
      description: Returns and object with MFA distribution.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  /protection/reactive-policies/inbound:
    get:
      operationId: MFAInboundPolicies_List
      summary: List Inbound MFA Policies
      description: Returns a list of inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    post:
      operationId: MFAInboundPolicies_Create
      summary: Add Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after creation.
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/{reactivePolicyId}:
    get:
      operationId: MFAInboundPolicies_Get
      summary: Get Inbound MFA Policy
      description: Returns a inbound MFA policy object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    put:
      operationId: MFAInboundPolicies_Update
      summary: Update Inbound MFA Policy
      description: Returns the properties of the inbound MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyInboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
    delete:
      operationId: MFAInboundPolicies_Delete
      summary: Remove Inbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidates_List
      summary: Get destination assets for Inbound MFA Policy
      description: Returns a list of candidates for the destination of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/excluded-src-candidates:
    get:
      operationId: MFAInboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Inbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an inbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters:
    get:
      operationId: MFAInboundPoliciesFilters_List
      summary: List Inbound MFA Policy Filters
      description: Returns a list of filters for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/dst-candidates:
    get:
      operationId: MFAInboundPoliciesDestinationCandidatesFilters_List
      summary: Get Inbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidatesFilters_List
      summary: List Inbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/filters/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUsersCandidatesFilters_List
      summary: Get Inbound MFA Policies Source Users Filters
      description: Returns a list of filters for source users on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/mfa-methods:
    get:
      operationId: MFAInboundPoliciesMFAMethods_List
      summary: List Inbound MFA Policy Methods
      description: Returns a list of MFA methods for inbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate:
    get:
      operationId: MFAInboundPoliciesSimulate_Test
      summary: Simulate Inbound MFA access
      description: Returns a list of MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/dst-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateDestinationCandidates_List
      summary: List Inbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/resolve:
    get:
      operationId: MFAInboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceCandidates_List
      summary: List Inbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/simulate/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSimulateSourceUserCandidates_List
      summary: List Inbound MFA Simulation Source User Candidates
      description: Returns a list of source user candidates on inbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-candidates:
    get:
      operationId: MFAInboundPoliciesSourceCandidates_List
      summary: List Inbound MFA Policies Source Candidates
      description: Returns a list of source candidates on inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/inbound/src-users-candidates:
    get:
      operationId: MFAInboundPoliciesSourceUserCandidates_List
      summary: List Inbound MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for inbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Inbound
  /protection/reactive-policies/outbound:
    get:
      operationId: MFAOutboundPolicies_List
      summary: List Outbound MFA Policies
      description: Returns a list of outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    post:
      operationId: MFAOutboundPolicies_Create
      summary: Add Outbound MFA Policy
      description: Returns a the properties of outbound MFA policy created.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/{reactivePolicyId}:
    get:
      operationId: MFAOutboundPolicies_Get
      summary: Get Outbound MFA Policy
      description: Returns the properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    put:
      operationId: MFAOutboundPolicies_Update
      summary: Update Outbound MFA Policy
      description: Returns the updated properties of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Reactive Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reactivePolicyOutboundBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
    delete:
      operationId: MFAOutboundPolicies_Delete
      summary: Remove Outbound MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidates_List
      summary: List Outbound MFA Policies Destination Candidates
      description: Returns a list of destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/excluded-src-candidates:
    get:
      operationId: MFAOutboundPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Outbound MFA Policy
      description: Returns a list of candidates for the excluded sources of an outbound MFA policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters:
    get:
      operationId: MFAOutboundPoliciesFilters_Get
      summary: List Outbound MFA Policies Filters
      description: Returns a list of filters for outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesDestinationCandidatesFilters_List
      summary: List Outbound MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidatesFilters_List
      summary: Get Outbound MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/filters/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUsersCandidatesFilters_List
      summary: List Outbound MFA Policies Source Users Candidates Filters
      description: Returns a list of filters for source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/mfa-methods:
    get:
      operationId: MFAOutboundPoliciesMFAMethods_List
      summary: List Outbound MFA Policies Methods
      description: Returns a list of MFA methods on outbound MFA policies.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate:
    get:
      operationId: MFAOutboundPoliciesSimulate_Test
      summary: Simulate Outbound MFA access
      description: Returns a list of outbound MFA policies that would match the simulation.
      parameters:
        - $ref: '#/components/parameters/srcUserId'
        - $ref: '#/components/parameters/srcAssetId'
        - $ref: '#/components/parameters/srcProcess'
        - $ref: '#/components/parameters/dstAssetId'
        - $ref: '#/components/parameters/dstProcess'
        - $ref: '#/components/parameters/protocolType'
        - $ref: '#/components/parameters/port'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/dst-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateDestinationCandidates_List
      summary: Get Outbound MFA Simulation Destination Candidates
      description: Returns a list of destination candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/resolve:
    get:
      operationId: MFAOutboundPoliciesSimulateResolve_Get
      summary: Resolve simulation parameters
      description: Returns resolved simulation parameters.
      parameters:
        - $ref: '#/components/parameters/simulationParams'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simulationParams'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceCandidates_List
      summary: List Outbound MFA Simulation Source Candidates
      description: Returns a list of source candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/simulate/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSimulateSourceUserCandidates_List
      summary: Get Outbound MFA Simulation Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA simulation.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceCandidates_List
      summary: List Outbound MFA Policies Source Candidates
      description: Returns a list of source candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/outbound/src-users-candidates:
    get:
      operationId: MFAOutboundPoliciesSourceUserCandidates_List
      summary: Get Outbound MFA Policies Source Users Candidates
      description: Returns a list of source users candidates on outbound MFA policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA Outbound
  /protection/reactive-policies/statistics:
    get:
      operationId: MFAPoliciesStatistics_List
      summary: Get MFA statistics
      description: Returns an object with MFA statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePoliciesStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - MFA
  /protection/rpc-rules:
    get:
      operationId: RPCRules_List
      summary: List RPC Rules
      description: Returns a list of RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    post:
      operationId: RPCRules_Create
      summary: Create RPC Rule
      description: Returns the properties of the create RPC rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/{ruleId}:
    get:
      operationId: RPCRule_Get
      summary: Get RPC Rule
      description: Returns the properties of an RPC rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    put:
      operationId: RPCRule_Update
      summary: Update RPC Rule
      description: Returns the properties of the update RPC rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rpcRuleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcRuleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
    delete:
      operationId: RPCRule_Delete
      summary: Remove RPC Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/excluded-local-candidates:
    get:
      operationId: RPCRulesExcludedDestinationCandidates_List
      summary: Get RPC Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/export:
    post:
      operationId: RPCRules_Export
      summary: Export RPC Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/export/csv/{exportId}:
    get:
      operationId: RPCRulesExport_Get
      summary: Download RPC rules export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters:
    get:
      operationId: RPCRulesFilters_List
      summary: List RPC Rules Filters
      description: Returns a list of filters for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/local-candidates:
    get:
      operationId: RPCRulesDestinationCandidatesFilters_List
      summary: List RPC Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/remote-candidates:
    get:
      operationId: RPCRulesSourceCandidatesFilters_List
      summary: Get RPC Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for RPC rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/filters/user-candidates:
    get:
      operationId: RPCRulesUserCandidatesFilters_List
      summary: List RPC Rules Filters User Candidates
      description: Returns a list of user candidates for filters in RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/local-candidates:
    get:
      operationId: RPCRulesDestinationCandidates_List
      summary: List RPC Rules Destination Candidates
      description: Returns a list of destination candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/remote-candidates:
    get:
      operationId: RPCRulesSourceCandidates_List
      summary: List RPC Rules Source Candidates
      description: Returns a list of source candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rpc-rules/user-candidates:
    get:
      operationId: RPCRulesUserCandidates_List
      summary: List RPC Rules User Candidates
      description: Returns a list of user candidates for RPC rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules RPC
  /protection/rules/distribution/{ruleId}:
    get:
      operationId: RulesDistribution_Get
      summary: Get distribution of rule hit count
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/rules/history/{ruleId}:
    get:
      operationId: RulesHistory_Get
      summary: Get a historic version of an inbound rule
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /protection/rules/inbound:
    get:
      operationId: InboundRules_List
      summary: List Inbound Rules
      description: Returns a list of Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    post:
      operationId: InboundRules_Create
      summary: Create Inbound Rule
      description: Returns the properties of the created Inbound rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/{ruleId}:
    get:
      operationId: InboundRule_Get
      summary: Get Inbound Rule
      description: Returns the properties of an Inbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    put:
      operationId: InboundRule_Update
      summary: Update Inbound Rule
      description: Returns the properties of the update Inbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
    delete:
      operationId: InboundRule_Delete
      summary: Remove Inbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/excluded-local-candidates:
    get:
      operationId: InboundRulesExcludedDestinationCandidates_List
      summary: Get Inbound Rules Excluded Destination Candidates
      description: Returns a list of excluded destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/export:
    post:
      operationId: InboundRules_Export
      summary: Export Inbound Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/export/csv/{exportId}:
    get:
      operationId: InboundRulesExport_Get
      summary: Download Inbound Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters:
    get:
      operationId: InboundRulesFilters_List
      summary: List Inbound Rules Filters
      description: Returns a list of filters for Inbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters/local-candidates:
    get:
      operationId: InboundRulesDestinationCandidatesFilters_List
      summary: List Inbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/filters/remote-candidates:
    get:
      operationId: InboundRulesSourceCandidatesFilters_List
      summary: Get Inbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/local-candidates:
    get:
      operationId: InboundRulesDestinationCandidates_List
      summary: List Inbound Rules Destination Candidates
      description: Returns a list of destination candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/remote-candidates:
    get:
      operationId: InboundRulesSourceCandidates_List
      summary: List Inbound Rules Source Candidates
      description: Returns a list of source candidates for Inbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: InboundRulesReview_ApproveWithChanges
      summary: Update Inbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Inbound
  /protection/rules/inbound/review/approve/{ruleId}:
    put:
      operationId: InboundRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/inbound/review/reject/{ruleId}:
    delete:
      operationId: InboundRulesReview_Deny
      summary: Returns an empty response
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/outbound:
    get:
      operationId: OutboundRules_List
      summary: List Outbound Rules
      description: Returns a list of Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/entityParams'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/enrichRemoteIPsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    post:
      operationId: OutboundRules_Create
      summary: Create Outbound Rule
      description: Returns the properties of the created Outbound rule.
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/{ruleId}:
    get:
      operationId: OutboundRule_Get
      summary: Get Outbound Rule
      description: Returns the properties of an Outbound rule.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    put:
      operationId: OutboundRule_Update
      summary: Update Outbound Rule
      description: Returns the properties of the updated Outbound rules.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
    delete:
      operationId: OutboundRule_Delete
      summary: Remove Outbound Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/excluded-local-candidates:
    get:
      operationId: OutboundRulesExcludedSourceCandidates_List
      summary: List Outbound Rules Excluded Source Candidates
      description: Returns a list of excluded source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/export:
    post:
      operationId: OutboundRules_Export
      summary: Export Outbound Rules
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/export/csv/{exportId}:
    get:
      operationId: OutboundRulesExport_Get
      summary: Download Outbound Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters:
    get:
      operationId: OutboundRulesFilters_List
      summary: List Outbound Rules Filters
      description: Returns a list of filters for Outbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/excluded-local-candidates:
    get:
      operationId: OutboundRulesExcludedSourceCandidatesFilters_List
      summary: List Outbound Rules Excluded Source Candidates Filters
      description: Returns a list of filters for excluded source candidates for Outbound rules.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/local-candidates:
    get:
      operationId: OutboundRulesSourceCandidatesFilters_List
      summary: List Outbound Rules Source Candidates Filters
      description: Returns a list of filters for source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/remote-candidates:
    get:
      operationId: OutboundRulesDestinationCandidatesFilters_List
      summary: List Outbound Rules Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/filters/user-candidates:
    get:
      operationId: OutboundRulesUserCandidatesFilters_List
      summary: List Outbound Rules Filters User Candidates
      description: Returns a list of user candidates for filters in Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/local-candidates:
    get:
      operationId: OutboundRulesSourceCandidates_List
      summary: List Outbound Rules Source Candidates
      description: Returns a list of source candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/remote-candidates:
    get:
      operationId: OutboundRulesDestinationCandidates_List
      summary: List Outbound Destination Candidates
      description: Returns a list of destination candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/ruleTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/user-candidates:
    get:
      operationId: OutboundRulesUserCandidates_List
      summary: List Source Rules User Candidates
      description: Returns a list of users candidates for Outbound rules.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/review/approve-with-changes/{ruleId}:
    put:
      operationId: OutboundRulesReview_ApproveWithChanges
      summary: Update Outbound Rule
      description: Approve a "pending review" rule with changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewApproveWithChanges'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules Outbound
  /protection/rules/outbound/review/approve/{ruleId}:
    put:
      operationId: OutboundRulesReview_Approve
      summary: Approve a "pending review" rule
      description: Approve a "pending review" rule without changes
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/outbound/review/reject/{ruleId}:
    delete:
      operationId: OutboundRulesReview_Deny
      summary: Returns an empty response
      description: Reject a "pending review" rule (deletes rule)
      parameters:
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleReviewReason'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Rules
  /protection/rules/statistics:
    get:
      operationId: RulesStatistics_Get
      summary: Get rules statistics
      description: Returns an object with rule statistics.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Rules
  /sessions:
    get:
      operationId: Sessions_List
      summary: List Connect sessions
      description: Returns a list of Connect sessions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /sessions/{sessionId}/revoke:
    post:
      operationId: Session_Revoke
      summary: Revoke a Connect session
      description: Revoke a Connect session.
      parameters:
        - $ref: '#/components/parameters/sessionIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /sessions/filters:
    get:
      operationId: SessionsFilters_List
      summary: List Sessions Filters
      description: Returns a list of filters for sessions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Sessions
  /settings/access-tokens:
    get:
      operationId: AccessTokens_List
      summary: Get all machine access tokens
      description: Get all machine access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
                x-examples:
                  example-1:
                    items:
                      - clientId: 'm:695d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
                        accessType: 2
                        name: asd
                        expiry: '2024-06-27T08:21:21.000Z'
                        issuedAt: '2022-06-27T08:21:21.000Z'
                        createdAt: '2022-06-27T08:21:21.000Z'
                      - clientId: 'm:89879dabe83936376121296e74123c9e3d2ec92f'
                        accessType: 2
                        name: test
                        expiry: '2024-06-26T15:49:10.000Z'
                        issuedAt: '2022-06-26T15:49:10.000Z'
                        createdAt: '2022-06-26T15:49:10.000Z'
                      - clientId: 'm:8ee92624445d106a06e346d0c0a41bbfa77e1446'
                        accessType: 2
                        name: TEST
                        expiry: '2024-06-26T15:49:05.000Z'
                        issuedAt: '2022-06-26T15:49:05.000Z'
                        createdAt: '2022-06-26T13:28:24.000Z'
                      - clientId: 'm:6a73f5b14aa8557c527a99ae601e648a9c56b504'
                        accessType: 2
                        name: asdf
                        expiry: '2024-06-26T12:13:08.000Z'
                        issuedAt: '2022-06-26T12:13:08.000Z'
                        createdAt: '2022-06-26T12:08:25.000Z'
                      - clientId: 'm:4a21e3d73c58bc0040cff93b508d361bef81a83f'
                        accessType: 2
                        name: fasdf
                        expiry: '2022-07-26T12:08:14.000Z'
                        issuedAt: '2022-06-26T12:08:14.000Z'
                        createdAt: '2022-06-23T16:53:01.000Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    post:
      operationId: AccessTokens_Create
      summary: Create machine access token
      description: Create machine access token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/iso8601DateTimeUTC'
                accessType:
                  $ref: '#/components/schemas/accessTypeEnum'
              x-examples:
                example-1:
                  name: read only example
                  expiry: '2024-06-27T08:45:01.623Z'
                  accessType: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  /settings/access-tokens/{clientId}:
    put:
      operationId: AccessTokens_Regenerate
      summary: Regenerate machine access token
      description: Regenerate machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
    delete:
      operationId: AccessTokens_Delete
      summary: Delete access token
      description: Remove machine access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Access Tokens
  /settings/ai/exclusion/network/both:
    get:
      operationId: AIExclusionNetworkBoth_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for clients and servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkBoth_Update
      summary: Returns an empty response
      description: 'Set AI network exclusion for clients and servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/network/client:
    get:
      operationId: AIExclusionNetworkClient_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for clients: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkClient_Update
      summary: Returns an empty response
      description: 'Set AI network exclusion for clients: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/network/server:
    get:
      operationId: AIExclusionNetworkServer_Get
      summary: Your GET endpoint
      description: 'Get AI network exclusion for servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
    put:
      operationId: AIExclusionNetworkServer_Update
      summary: Returns an empty response
      description: 'Set AI network exclusion for servers: lists of tcp/udp ports / ports ranges + boolean for icmp protocol, and a list of processes to ignore during learning.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionInfo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aiExclusionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings AI
  /settings/ai/exclusion/src-candidates:
    get:
      operationId: AIExclusionSourceCandidates_Get
      summary: Get AI excluded source entity candidates.
      description: Get AI source candidates to ignore during learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetCandidateList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
  /settings/ai/exclusion/src-entities:
    get:
      operationId: AIExclusionSourceEntities_Get
      summary: Get AI excluded source entity settings.
      description: Get AI source entities to ignore during learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/assetBasicInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
    put:
      operationId: AIExclusionSourceEntities_Update
      summary: Returns an empty response
      description: Set AI source entities to ignore during learning.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aiExclusionSourceEntitiesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI
  /settings/ai/rule-review:
    get:
      operationId: SettingsAiRuleReview_Get
      summary: Get Rules Review under AI Settings
      description: Get AI rules review settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI Rules Review
    put:
      operationId: SettingsAiRuleReview_Update
      summary: Set Rule Review under AI Settings
      description: Update AI rule review settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAiRuleReview'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAiRuleReview'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings AI Rules Review
  /settings/asset-management/active-directory:
    get:
      operationId: SettingsAD_Get
      summary: Get AD settings in Asset Management
      description: Get the AD settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    post:
      operationId: SettingsAD_Create
      summary: Add AD settings in Asset Management
      description: Set the AD settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdInfoBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}:
    put:
      operationId: SettingsAD_Update
      summary: Update AD Settings in Asset Management
      description: Update AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdInfoBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAD_Delete
      summary: Delete forest from AD Settings in Asset Management
      description: Delete AD forest settings.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/{domainId}/linux-config:
    put:
      operationId: SettingsAdLinux_Update
      summary: Create or Update Active Directory Linux Settings
      description: Adds or updates linux config for a domain.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdLinuxBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAdLinux_Delete
      summary: Remove Active Directory Linux Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/groups/linux:
    put:
      operationId: SettingsADLinuxAutomationGroups_Update
      summary: Update Linux Automation Groups for a Forest in Asset Management
      description: Update Linux_Rediscover Automation Groups for an AD forest setting.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdLinuxAutomationGroupsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/groups/windows:
    put:
      operationId: SettingsADWindowsAutomationGroups_Update
      summary: Update Windows Automation Groups for a Forest in Asset Management
      description: Update Windows Automation Groups for an AD forest setting.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdWindowsAutomationGroupsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/secondary:
    post:
      operationId: SettingsAdSecondary_Create
      summary: Add a secondary AD settings in Asset Management
      description: Add a secondary AD settings in Asset Management
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdSecondaryBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/{forestId}/secondary/{domainId}:
    delete:
      operationId: SettingsAdSecondary_Delete
      summary: Remove Secondary Active Directory Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAdSecondary_Update
      summary: Update a secondary AD settings in Asset Management
      description: Update a secondary AD settings in Asset Management
      parameters:
        - $ref: '#/components/parameters/forestIdParameter'
        - $ref: '#/components/parameters/domainIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAdSecondaryBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/monitored:
    get:
      operationId: SettingsADMonitoredCandidates_Get
      summary: List candidates for monitoring for an AD forest
      description: Returns a list of monitoring candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/candidates/protected:
    get:
      operationId: SettingsADProtectedCandidates_Get
      summary: List candidates for protection for an AD forest
      description: Returns a list of protection candidates for an AD forest.
      parameters:
        - $ref: '#/components/parameters/forestIdQueryParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/rediscover:
    put:
      operationId: AD_Rediscover
      summary: Rediscover monitored assets
      description: Rediscover monitored assets
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/active-directory/sync-info:
    get:
      operationId: SettingsADSyncInfo_Get
      summary: Get AD sync info in Asset Management
      description: Get the AD sync info in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAdSyncInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/ansible:
    get:
      operationId: SettingsAnsible_Get
      summary: Get Ansible settings in Asset Management
      description: Get the Ansible settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAnsible_Update
      summary: Set Ansible settings in Asset Management
      description: Get the Ansible settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAnsibleBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAnsible'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/rediscover:
    put:
      operationId: Linux_Rediscover
      summary: Rediscover monitored assets from Linux
      description: Rediscover monitored assets from Ansible
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/setup:
    get:
      operationId: SettingsLinuxSetup_Get
      summary: Get linux setup settings in Asset Management
      description: Get the linux setup settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxSetup_Update
      summary: Set linux setup settings in Asset Management
      description: Update the linux setup settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxSetupBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxSetup'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-management/linux/user:
    get:
      operationId: SettingsLinuxUser_Get
      summary: Get linux user settings in Asset Management
      description: Get the linux user settings in Asset Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsLinuxUser_Update
      summary: Set linux user settings in Asset Management
      description: Update the linux user settings in Asset Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLinuxUserBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLinuxUser'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/asset-managers:
    get:
      operationId: Settings-AssetManagers_List
      summary: Get asset managers summary
      description: List asset managers
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    post:
      operationId: Settings-AssetManagers_Add
      summary: Add asset managers
      description: Add asset manager to entity.
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAssetsManagersBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetManagersList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
    delete:
      operationId: Settings-AssetManagers_Delete
      summary: Delete asset managers
      description: Remove asset managers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entityIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrAssetId'
                managerIds:
                  type: array
                  items:
                    $ref: '#/components/schemas/groupIdOrUserId'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Managers
  /settings/auth:
    get:
      operationId: SettingsAuth_Get
      summary: Get portal session timeout setting
      description: Get the portal security settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAuth'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
    put:
      operationId: SettingsAuth_Update
      summary: Set portal session timeout setting
      description: Set the portal security settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsAuthBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Portal Security
  /settings/azure-ad/credentials:
    get:
      operationId: SettingsAAD_Get
      summary: Get Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAd'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsAAD_Update
      summary: Set Azure AD Settings
      description: Get Azure AD Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsAzureAdBody'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsAAD_Delete
      summary: Remove Azure AD Settings
      description: Remove Azure AD Settings
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/azure-ad/resync:
    post:
      operationId: AzureAD_Resync
      summary: Resync Azure AD
      description: Resync Azure AD
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/break-glass:
    get:
      operationId: SettingsBreakGlass_Get
      summary: Get break glass settings
      description: Get break glass settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsBreakGlass'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
    put:
      operationId: SettingsBreakGlass_Update
      summary: Update break glass settings
      description: Update break glass settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsBreakGlassBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Break Glass
  /settings/cloud-connector/access-tokens:
    get:
      operationId: CloudConnectorAccessTokens_List
      summary: Get all cloud connector provisioning access tokens
      description: Get all cloud connector provisioning access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    post:
      operationId: CloudConnectorAccessTokens_Create
      summary: Create cloud connector provisioning access token
      description: Create cloud connector provisioning access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/iso8601DateTimeUTC'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: Cloud Connector test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  /settings/cloud-connector/access-tokens/{clientId}:
    put:
      operationId: CloudConnectorAccessTokens_Regenerate
      summary: Regenerate cloud connector provisioning access token
      description: Regenerate cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
    delete:
      operationId: CloudConnectorAccessTokens_Delete
      summary: Delete cloud connector provisioning access token
      description: Delete cloud connector provisioning access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Cloud Connector
  /settings/connect/client/auto-update:
    get:
      operationId: SettingsConnectClientAutoUpdate_Get
      summary: Get Connect client auto update settings
      description: Get Connect client auto update in Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsConnectClientAutoUpdate'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    put:
      operationId: SettingsConnectClientAutoUpdate_Update
      summary: Set Connect client auto update settings
      description: Set Connect client auto update settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsConnectClientAutoUpdateBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/regions:
    get:
      operationId: SettingsConnectRegions_List
      summary: List Connect Regions
      description: List Connect Regions in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectRegionsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectRegions_Create
      summary: Create a Connect region
      description: Create a Connect region in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/regions/{regionId}:
    put:
      operationId: SettingsConnectRegion_Update
      summary: Update a Connect Region in Settings
      description: Update a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectRegionBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectRegion_Delete
      summary: Delete a Connect Region
      description: Delete a Connect Region in Settings
      parameters:
        - $ref: '#/components/parameters/connectRegionIdParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers:
    get:
      operationId: SettingsConnectServers_List
      summary: List Connect Servers
      description: List Connect Servers in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectServersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/{connectServerId}:
    put:
      operationId: SettingsConnectServers_Update
      summary: Update Connect Server
      description: Update Connect Server in Settings
      parameters:
        - $ref: '#/components/parameters/connectServerIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectServerBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectServers_Delete
      summary: Delete Connect Server
      description: Delete Connect Server in Settings
      parameters:
        - $ref: '#/components/parameters/connectServerIdParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/servers/filters:
    get:
      operationId: SettingsConnectServersFilters_List
      summary: List Connect Server filters
      description: List Connect Server filters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config:
    get:
      operationId: SettingsConnectUserAccessConfig_List
      summary: List Connect User Access Configurations
      description: List Connect User Access Configurations in Settings
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectUserAccessConfigList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    post:
      operationId: SettingsConnectUserAccessConfig_Create
      summary: Create a Connect User Access Configuration
      description: Create a Connect User Access Configuration in Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      tags:
        - Settings Connect
  /settings/connect/user-access-config/{userAccessConfigId}:
    put:
      operationId: SettingsConnectUserAccessConfig_Update
      summary: Update a Connect User Access Configuration
      description: Update a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectUserAccessConfigBody'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
    delete:
      operationId: SettingsConnectUserAccessConfig_Delete
      summary: Delete a Connect User Access Configuration
      description: Delete a Connect User Access Configuration in Settings
      parameters:
        - $ref: '#/components/parameters/userAccessConfigParameter'
      responses:
        '200':
          description: Ok
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/assets-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAssetsCandidates_List
      summary: Get user access configuration excluded assets candidates Candidates
      description: Returns a list of candidates for user access config excluded assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/destinations-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigDestinationsCandidates_List
      summary: Get user access configuration excluded destinations candidates Candidates
      description: Returns a list of candidates for user access config excluded destinations.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/excluded-assets-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigExcludedAssetsCandidates_List
      summary: Get user access configuration excluded assets candidates
      description: Returns a list of candidates for user access config excluded assets.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/excluded-users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigExcludedSourceUsersCandidates_List
      summary: Get user access configuration xxcluded source users candidates Candidates
      description: Returns a list of candidates for user access config excluded source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/regions-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigAllowedRegionsCandidates_List
      summary: Get user access configuration allowed regions Candidates
      description: Returns a list of candidates for user access config allowed regions.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectUserAccessConfigList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/connect/user-access-config/users-candidates:
    get:
      operationId: SettingsConnectUserAccessConfigSourceUsersCandidates_List
      summary: Get user access configuration source users candidates Candidates
      description: Returns a list of candidates for user access config source users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Connect
  /settings/data-collection/activities:
    get:
      operationId: SettingsActivities_Get
      summary: Get Activities settings in Data Collection
      description: Get Activities settings in Data Collection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsActivities'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
    put:
      operationId: SettingsActivities_Update
      summary: Set Activities settings in Data Collection
      description: Update the Activities settings in Data Collection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsActivitiesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Activities
  /settings/entities-config:
    get:
      operationId: SettingsInactiveAssets_List
      summary: Get Inactive Assets Settings Configuration
      description: Get inactive assets settings configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inactiveAssetsConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Inactive Assets
    put:
      operationId: SettingsInactiveAssets_Update
      summary: Update Inactive Assets Settings Configuration
      description: Update inactive assets settings configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inactiveAssetsConfigBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inactiveAssetsConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Inactive Assets
  /settings/ext-auth:
    get:
      operationId: SettingsPushNotifications_Get
      summary: Get Push Notifications Settings
      description: Get Push Notifications Settings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotificationsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  /settings/ext-auth/{pushIdentityProviderId}:
    post:
      operationId: SettingsPushNotifications_Create
      summary: Create Push Notification in Settings.
      description: Create an push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificationsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotifications'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    put:
      operationId: SettingsPushNotifications_Update
      summary: Update Push Notification in Settings.
      description: Update a push notifications settings
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPushNotificationsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPushNotifications'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
    delete:
      operationId: SettingsPushNotifications_Delete
      summary: Remove Push Notifications Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/pushIdentityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Push Notifications
  /settings/external-vpn:
    get:
      operationId: SettingsZpa_Get
      summary: Get ZPA settings in Integrations
      description: Get ZPA settings in Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsZpa'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZPA
    put:
      operationId: SettingsZpa_Update
      summary: Set ZPA settings in Integrations
      description: Set ZPA settings in Integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsZpaBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ZPA
  /settings/firewall:
    get:
      operationId: SettingsFirewall_Get
      summary: List Firewall Settings
      description: Returns the properties of Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewall'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewall_Update
      summary: Update Firewall Settings
      description: Returns the properties of the updated Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/ignored-gpo-rules:
    get:
      operationId: SettingsFirewallIgnoredGPO_Get
      summary: List rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredGPO_Update
      summary: Update rules ignored for asset health from GPO in Firewall Settings
      description: Returns the properties of ignored GPO rules Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredGPOBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredGPO'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsFirewallProfiles:
    get:
      operationId: SettingsFirewallProfiles_Get
      summary: List firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallProfiles_Update
      summary: Update firewall profiles in Firewall Settings
      description: Returns the properties of firewall profiles in Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallProfilesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallProfiles'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/firewall/windowsIgnoredRules:
    get:
      operationId: SettingsFirewallIgnoredRules_Get
      summary: List rules ignored for anti-tampering in Firewall Settings
      description: Returns the properties of ignored rules for anti-tampering Firewall settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
    put:
      operationId: SettingsFirewallIgnoredRules_Update
      summary: Update rules ignored for anti-tampering in Firewall Settings
      description: Returns he properties of ignored rules for anti-tampering Firewall settings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsFirewallIgnoredRulesBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsFirewallIgnoredRules'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Firewall
  /settings/identity-providers/default-application:
    get:
      operationId: SettingsDefaultApplication_Get
      summary: Get Default SSO Application settings in Identity Providers
      description: Get Default SSO Application settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpDefaultApplication'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    put:
      operationId: SettingsDefaultApplication_Update
      summary: Set Default SSO Application settings in Identity Providers
      description: Update the Default SSO Application settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpDefaultApplicationBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/identity-providers/saml:
    get:
      operationId: SettingsIdp_Get
      summary: List identity providers settings in Identity Providers
      description: Get identity provider settings in Identity Providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdpList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    post:
      operationId: SettingsIdp_Create
      summary: Create identity provider settings in Identity Providers
      description: Create an identity provider settings in Identity Providers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/identity-providers/saml/{identityProviderId}:
    put:
      operationId: SettingsIdp_Update
      summary: Update identity provider settings in Identity Providers
      description: Update identity provider settings in Identity Providers
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsIdpBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsIdp'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
    delete:
      operationId: SettingsIdp_Delete
      summary: Remove Identity Provider Settings
      description: Returns an empty response.
      parameters:
        - $ref: '#/components/parameters/identityProviderIdParameter'
      responses:
        '204':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Identity Providers
  /settings/inbound/privileged-ports:
    get:
      operationId: SettingsPrivilegedPorts_Get
      summary: Get Privileged Ports settings in Network segmentation
      description: Get Privileged Ports settings in Network segmentation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsPrivilegedPorts'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Privileged Ports
    put:
      operationId: SettingsPrivilegedPorts_Update
      summary: Set Privileged Ports settings in Network segmentation
      description: Set Privileged Ports settings in Network segmentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsPrivilegedPortsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/jamf/credentials:
    get:
      operationId: SettingsJamfCredentials_Get
      summary: Get JAMF Credentials Settings
      description: Returns the properties for JAMF Credentials Settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    put:
      operationId: SettingsJamfCredentials_Update
      summary: Update JAMF credentials Settings
      description: Returns the updated properties of JAMF Credentials settings.
      requestBody:
        description: JAMF credentials property
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsJamfCredentialsBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsJamfCredentials'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
    delete:
      operationId: SettingsJamfCredentials_Delete
      summary: Remove JAMF Credentials Settings
      description: Returns an empty object.
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Asset Management
  /settings/learning-config:
    get:
      operationId: SettingsLearningConfig_Get
      summary: Get Learning Config settings in Network Segmentation
      description: Get Learning Config settings in Network Segmentation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsLearningConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
    put:
      operationId: SettingsLearningConfig_Update
      summary: Set Learning Config settings in Network Segmentation
      description: Update Learning Config settings in Network Segmentation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsLearningConfigBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Learning
  /settings/maintenance-window:
    get:
      operationId: SettingsMaintenanceWindow_List
      summary: List maintenance windows
      description: Returns the maintenance windows
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    post:
      operationId: SettingsMaintenanceWindow_Create
      summary: Create a maintenance window
      description: Returns the maintenance window properties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/maintenanceWindowBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
  /settings/maintenance-window/{maintenanceWindowId}:
    get:
      operationId: SettingsMaintenanceWindow_Get
      summary: Get a maintenance window
      description: Returns the maintenance window properties
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItems'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    put:
      operationId: SettingsMaintenanceWindow_Update
      summary: Update a maintenance window
      description: Returns the maintenance window properties
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/maintenanceWindowBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/maintenanceWindowItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
    delete:
      operationId: SettingsMaintenanceWindow_Delete
      summary: Delete a maintenance window
      description: Returns an empty object
      parameters:
        - $ref: '#/components/parameters/maintenanceWindowIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Maintenance Window
  /settings/notification:
    get:
      operationId: SettingsNotification_Get
      summary: Get Mail Notification Settings
      description: Returns the properties of the Mail Notification settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
    put:
      operationId: SettingsNotification_Update
      summary: Update Mail Notification Settings
      description: Returns the properties of the updated Mail Notifications settings.
      requestBody:
        description: Mail notification properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsNotificationBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsNotification'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Mail Notifications
  /settings/occasional-mfa:
    get:
      operationId: SettingsMFACache_List
      summary: List MFA Cache Policies
      description: Returns a list of MFA Cache Policies.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/withCountParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
    post:
      operationId: SettingsMFACache_Create
      summary: Create MFA Cache Policy
      description: Creates a MFA Cache Policy.
      requestBody:
        description: MFA Cache Policy properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaCacheBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/occasional-mfa/{entityId}:
    put:
      operationId: SettingsMFACache_Update
      summary: Update MFA Cache Policy
      description: Returns an MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/entityIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaCacheItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
    delete:
      operationId: SettingsMFACache_Delete
      summary: Deleted MFA Cache Policy
      description: deletes a MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/entityIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/occasional-mfa/candidates:
    get:
      operationId: SettingsMFACacheCandidates_List
      summary: Get candidates for MFA Cache policy.
      description: Returns a list of candidates for MFA Cache Policy.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA Cache
  /settings/portal/users:
    get:
      operationId: SettingsCustomUsers_List
      summary: List custom users
      description: Returns the custom users list
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
  /settings/portal/users/{customUserId}:
    delete:
      operationId: SettingsCustomUsers_Delete
      summary: Delete a custom user
      description: Returns empoty object
      parameters:
        - $ref: '#/components/parameters/customUserIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Custom Users
      x-stoplight:
        id: 9ip489dgishvk
  /settings/reactive-policy:
    get:
      operationId: SettingsMFADetection_Get
      summary: Get MFA Detection Settings
      description: Returns the properties of MFA detection settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFADetection_Update
      summary: Update MFA Detection Settings
      description: Returns the properties of the updated MFA detection settings.
      requestBody:
        description: MFA detection properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaDetectionBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaDetectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/reactive-policy/auth:
    get:
      operationId: SettingsMFAAuthentication_Get
      summary: Get MFA authentication settings
      description: Returns the properties of MFA authentication settings.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsMfaAuthenticationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
    put:
      operationId: SettingsMFAAuthentication_Update
      summary: Update MFA Authentication Settings
      description: Returns an empty object.
      requestBody:
        description: MFA authentication properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsMfaAuthenticationBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings MFA
  /settings/roles:
    get:
      operationId: Roles_List
      summary: List Roles
      description: Returns list of Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/roles/{roleEntityId}:
    post:
      operationId: Roles_Create
      summary: Create Role
      description: Returns the properties of the added Role.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      requestBody:
        description: Role properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roleBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
    delete:
      operationId: Roles_Delete
      summary: Remove Role
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/roleEntityIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/roles/candidates:
    get:
      operationId: RolesCandidates_List
      summary: List Roles Candidates
      description: Returns list of candidates for Roles.
      parameters:
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Roles
  /settings/snow/access-tokens:
    get:
      operationId: ServiceNowAccessTokens_List
      summary: Get all ServiceNow access tokens
      description: Get all ServiceNow access tokens
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/accessTokenInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ServiceNow
    post:
      operationId: ServiceNowAccessTokens_Create
      summary: Create ServiceNow access token
      description: Create ServiceNow access token
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  $ref: '#/components/schemas/epochMillis'
                accessType:
                  type: integer
              x-examples:
                example-1:
                  name: ServiceNow test
                  expiry: '2024-06-27T13:33:09.076Z'
                  accessType: 3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ServiceNow
  /settings/snow/access-tokens/{clientId}:
    put:
      operationId: ServiceNowAccessTokens_Regenerate
      summary: Regenerate ServiceNow access token
      description: Regenerate ServiceNow access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                expiry:
                  $ref: '#/components/schemas/epochMillis'
              x-examples:
                example-1:
                  expiry: 1719477497062
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accessToken'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ServiceNow
    delete:
      operationId: ServiceNowAccessTokens_Delete
      summary: Delete ServiceNow access token
      description: Delete ServiceNow access token
      parameters:
        - $ref: '#/components/parameters/clientIdParameter'
      responses:
        '201':
          description: Created
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings ServiceNow
  /settings/subscriptions/licenses/{licenseType}:
    get:
      operationId: SettingsLicenses_Get
      summary: Get Subscription Licenses
      description: Get Subscription Licenses
      parameters:
        - $ref: '#/components/parameters/licenseTypeParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licensesConfig'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Licenses
  /settings/system/internal-subnets:
    get:
      operationId: SettingsInternalSubnets_Get
      summary: Get Internal Subnets settings in System
      description: Get Internal Subnets settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsInternalSubnets'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
    put:
      operationId: SettingsInternalSubnets_Update
      summary: Set Internal Subnets settings in System
      description: Update the Internal Subnets settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsInternalSubnetsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
  /settings/system/internal-subnets/client-subnets:
    get:
      operationId: SettingsClientSubnets_Get
      summary: Get Client Subnets settings in System
      description: Get Client Subnets settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsClientSubnets'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
    put:
      operationId: SettingsClientSubnets_Update
      summary: Set Client Subnets settings in System
      description: Update the Client Subnets settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsClientSubnetsBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Internal Subnets
  /settings/system/restricted/clients/trusted-external:
    get:
      operationId: SettingsClientsTrustedInternet_Get
      summary: Get Clients Trusted Internet settings in System
      description: Get Clients Trusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsClientsTrustedInternet_Update
      summary: Set Clients Trusted Internet settings in System
      description: Set Clients Trusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/clients/untrusted-external:
    get:
      operationId: SettingsClientsUntrustedInternet_Get
      summary: Get Clients Untrusted Internet settings in System
      description: Get Clients Untrusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsUntrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsClientsUntrustedInternet_Update
      summary: Set Clients Untrusted Internet settings in System
      description: Set Clients Untrusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsUntrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/servers/trusted-external:
    get:
      operationId: SettingsServersTrustedInternet_Get
      summary: Get Servers Trusted Internet settings in System
      description: Get Servers Trusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsServersTrustedInternet_Update
      summary: Set Servers Trusted Internet settings in System
      description: Set Servers Trusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/restricted/servers/untrusted-external:
    get:
      operationId: SettingsServersUntrustedInternet_Get
      summary: Get Servers Untrusted Internet settings in System
      description: Get Servers Untrusted Internet settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsUntrustedInternet'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsServersUntrustedInternet_Update
      summary: Set Servers Untrusted Internet settings in System
      description: Set Servers Untrusted Internet settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsUntrustedInternetBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /settings/system/trusted-external:
    get:
      operationId: SettingsTrustedInternetAddress_Get
      summary: Get Trusted Internet addresses settings in System
      description: Get Trusted Internet addresses settings in System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/settingsTrustedInternetAddresses'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
    put:
      operationId: SettingsTrustedInternetAddress_Update
      summary: Set  Trusted Internet addresses settings in System
      description: Set Trusted Internet addresses settings in System
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/settingsTrustedInternetAddressesBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Settings Trusted Internet
  /users:
    get:
      operationId: Users_List
      summary: List Users
      description: Returns a list of Users. Pass the returned 'nextCursor' as the '_cursor' query param of the next request for batches, when the '_offset' param is not used.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/{userId}:
    get:
      operationId: User_Get
      summary: Get a user
      description: Returns the properties of an user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon:
    get:
      operationId: UsersLogonActivities_List
      summary: List a specific Logon Activities
      description: Returns a list of logon activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logonActivitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/export:
    post:
      operationId: UsersLogonActivities_Export
      summary: Export logon activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/export/csv/{exportId}:
    get:
      operationId: UsersLogonActivitiesExport_Get
      summary: Download logon activities for a specific user export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/filters:
    get:
      operationId: UsersLogonActivitiesFilters_List
      summary: Get logon activity filters for a specific user
      description: Returns the filters that can be used for logon activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/user-filters:
    get:
      operationId: UserLogonActivitiesSavedFilters_List
      summary: List Saved Filters for Logon Activities
      description: Returns a list of saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserLogonActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Logon Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/logon/user-filters/{filterId}:
    get:
      operationId: UserLogonActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Logon Activities
      description: Returns a saved filters for logon activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserLogonActivitiesSavedFilters_Update
      summary: update a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserLogonActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Logon Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network:
    get:
      operationId: UsersNetworkActivities_List
      summary: List Network Activities for a specific user
      description: Returns a list of network activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityIdQueryParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activitiesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/export:
    post:
      operationId: UsersNetworkActivities_Export
      summary: Export network activities for a specific user
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyActivities'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/export/csv/{exportId}:
    get:
      operationId: UsersNetworkActivitiesExport_Get
      summary: Download network activities export for a specific user
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: object
                format: file
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/filters:
    get:
      operationId: UsersNetworkActivitiesFilters_List
      summary: Get network activity filters for a specific user
      description: Returns the filters that can be used for network activities for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/user-filters:
    get:
      operationId: UserNetworkActivitiesSavedFilters_List
      summary: List Saved Filters for Network Activities
      description: Returns a list of saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserNetworkActivitiesSavedFilters_Create
      summary: Create a Saved Filter for Network Activities
      description: Returns the filter id.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/activities/network/user-filters/{filterId}:
    get:
      operationId: UserNetworkActivitiesSavedFilters_Get
      summary: Get a Saved Filter for Network Activities
      description: Returns a saved filters for network activities.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/savedFilterObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserNetworkActivitiesSavedFilters_Update
      summary: update a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      requestBody:
        description: 'Name, filters, and description for the saved filter'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedFilterUpdateBody'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserNetworkActivitiesSavedFilters_Delete
      summary: Delete a Saved Filter for Network Activities
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/filterIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis:
    get:
      operationId: UserAnalysis_Get
      summary: Get a user analysis
      description: Returns an object with asset analysis data.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/sortParameter'
        - $ref: '#/components/parameters/trafficTypeParameter'
        - $ref: '#/components/parameters/connectionStateParameter'
        - $ref: '#/components/parameters/fromParameter'
        - $ref: '#/components/parameters/toParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userAnalysis'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/export:
    post:
      operationId: UserAnalysis_Export
      summary: Export user analysis
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyAnalysis'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/analysis/export/csv/{exportId}:
    get:
      operationId: UserAnalysisExport_Get
      summary: Download user analysis report
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/ancestors:
    get:
      operationId: UserMemberOf_Get
      summary: Get a users ancestors
      description: Returns a list of groups the user is a member of.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ancestors'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/ancestors/candidates:
    get:
      operationId: UserMemberOfGroupCandidates_Get
      summary: Get candidates for adding the user to a group
      description: Returns a list of groups the user can be a member of.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/idNamePairList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit:
    get:
      operationId: UserAudit_Get
      summary: Get a users audits
      description: Returns a list of audits for the user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/filtersParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/auditList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/export:
    post:
      operationId: UsersAudit_Export
      summary: Export users audits
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/filters:
    get:
      operationId: UsersAuditsFilters_List
      summary: List Audit Filters for a specific user
      description: Returns a list of filters for Audit events for a specific user.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/audit/export/csv/{exportId}:
    get:
      operationId: UsersAuditExport_Get
      summary: Download users audit export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/managed-assets:
    get:
      operationId: Users-ManagedAssets_List
      summary: Get managed assets
      description: get managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/managedAssetsList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: Users-ManagedAssets_Add
      summary: Add a managed assets
      description: Add a managed assets for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Array of assets to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: Users-ManagedAssets_Update
      summary: Update managed assets
      description: Update a managed asset for user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: Managed asset to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/managedAssetsUpdateBody'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/managed-assets/{groupOrAssetId}:
    delete:
      operationId: Users-ManagedAssets_Delete
      summary: Remove managed asset
      description: Remove managed asset of user
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/groupOrAssetIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Assets
  /users/{userId}/managed-assets/candidates:
    get:
      operationId: Users-ManagedAssetsCandidates_List
      summary: Get asset candidates
      description: Get asset candidates to be managed by asset managers
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies:
    get:
      operationId: UserExternalAccessPolicy_List
      summary: List External Access policies for a user
      description: Returns a list of external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserExternalAccessPolicy_Create
      summary: Create an external access policy for a user
      description: Returns a the external access policy
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/{policyId}:
    get:
      operationId: UserExternalAccessPolicy_Get
      summary: Get an External Access policy for a user
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserExternalAccessPolicy_Update
      summary: Update an External Access policy for a user
      description: Returns an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalAccessPolicyBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserExternalAccessPolicy_Delete
      summary: Delete an External Access policy for a user
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/externalAccessPolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/dst-asset-candidates:
    get:
      operationId: UserExternalAccessPolicyDestinationAssetsCandidates_List
      summary: List External Access Policy Destinations Assets Candidates for a user
      description: Returns a list of destunation assets candidates for an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters:
    get:
      operationId: UserExternalAccessPolicyFilters_List
      summary: List External Access Policy Filters for a user
      description: Returns a list of filters for external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters/dst-asset-candidates:
    get:
      operationId: UserExternalAccessPolicyDestinationAssetsCandidatesFilters_List
      summary: List External Access Policy Destination Assets Candidates Filters for a user
      description: Returns a list of filters for destination asset candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/filters/src-users-candidates:
    get:
      operationId: UserExternalAccessPolicySourceUserCandidatesFilters_List
      summary: List External Access Policy Source User Candidates Filters for a user
      description: Returns a list of filters for source user candidates in external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/src-users-candidates:
    get:
      operationId: UserExternalAccessPolicySourceUserCandidates_List
      summary: List External Access Policy Source User Candidates for a user
      description: Returns a list of source user candidates for external access policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/external-access-policies/statistics:
    get:
      operationId: UserExternalAccessPolicyStatistics_Get
      summary: Get External Access policies statistics for a user
      description: Returns statistics for an external access policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalAccessPolicyStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules:
    get:
      operationId: UserIdentityRules_List
      summary: User List Identity Rules
      description: Returns a list of identity segmentation rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/cursorParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRulesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    post:
      operationId: UserIdentityRules_Create
      summary: User Create an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/{ruleId}:
    get:
      operationId: UserIdentityRules_Get
      summary: User Get Identity Rule
      description: Returns an identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    put:
      operationId: UserIdentityRules_Update
      summary: User Update an Identity Rule
      description: Returns a the identity segmentation rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityRuleBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityRuleItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
    delete:
      operationId: UserIdentityRules_Delete
      summary: User Remove Identity Rule
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/asset-candidates:
    get:
      operationId: UserIdentityRulesAssetsCandidates_List
      summary: User List Identity Rules Assets Candidates
      description: Returns a list of assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/excluded-asset-candidates:
    get:
      operationId: UserIdentityRulesExcludedAssetsCandidates_List
      summary: User List Identity Rules Excluded Assets Candidates
      description: Returns a list of excluded assets candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/export:
    post:
      operationId: UserIdentityRules_Export
      summary: User Export Identity Rules
      description: Returns an exportId to pass into the download API.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/export/csv/{exportId}:
    get:
      operationId: UserIdentityRulesExport_Get
      summary: User Download Identity Rules Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters:
    get:
      operationId: UserIdentityRulesFilters_List
      summary: User List Identity Rules Filters
      description: Returns a list of filters for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters/asset-candidates:
    get:
      operationId: UserIdentityRulesAssetsCandidatesFilters_List
      summary: User List Identity Rules Filters Asset Candidates
      description: Returns a list of asset candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsOrGroupsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/filters/user-candidates:
    get:
      operationId: UserIdentityRulesUserCandidatesFilters_List
      summary: User List Identity Rules Filters User Candidates
      description: Returns a list of users candidates for filters in Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity-rules/user-candidates:
    get:
      operationId: UserIdentityRulesUserCandidates_List
      summary: User List Identity Rules User Candidates
      description: Returns a list of user candidates for Identity rules.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupsOrUsersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies:
    get:
      operationId: UserMFAIdentityPolicies_List
      summary: List Identity MFA Policies
      description: Returns a list of identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/addBuiltinsParameter'
        - $ref: '#/components/parameters/addAncestorsParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 7qlah2l240cbc
    post:
      operationId: UserMFAIdentityPolicies_Create
      summary: Add Identity MFA Policy
      description: Returns the properties of the identity MFA policy after creation.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: MFA properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: is999gepe9xq5
  /users/{userId}/protection/identity/reactive-policies/{reactivePolicyId}:
    get:
      operationId: UserMFAIdentityPolicies_Get
      summary: Get Identity MFA Policy
      description: Returns a Identity MFA policy object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: dd6l4td748lat
    put:
      operationId: UserMFAIdentityPolicies_Update
      summary: Update Identity MFA Policy
      description: Returns the properties of the Identity MFA policy after updating.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      requestBody:
        description: Rule properties
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identityReactivePolicyBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identityReactivePolicyItem'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: rlo2obrak77ym
    delete:
      operationId: UserMFAIdentityPolicies_Delete
      summary: Remove Identity MFA Policy
      description: Returns an empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/reactivePolicyIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 2wlrq7frmxa8r
  /users/{userId}/protection/identity/reactive-policies/dst-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesDestinationCandidates_List
      summary: Get destination assets for Identity MFA Policy
      description: Returns a list of candidates for the destination of an identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 0a3j1uza9ez0s
  /users/{userId}/protection/identity/reactive-policies/excluded-src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesExcludedSourceCandidates_List
      summary: Fet excluded source asset candidates for Identity MFA Policy
      description: Returns a list of candidates for the excluded sources of an Identity MFA policy.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/isSrcAssetUnmonitoredParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 6s4s62ndfiwej
  /users/{userId}/protection/identity/reactive-policies/filters:
    get:
      operationId: UserMFAIdentityPoliciesFilters_List
      summary: List Identity MFA Policy Filters
      description: Returns a list of filters for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 4fz0amhp7zpum
  /users/{userId}/protection/identity/reactive-policies/filters/dst-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesDestinationCandidatesFilters_List
      summary: Get Identity MFA Policies Destination Candidates Filters
      description: Returns a list of filters for destination candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/identity/reactive-policies/filters/src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceCandidatesFilters_List
      summary: List Identity MFA Policies Source Candidates Filters
      description: Returns a list of filters for source candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: mo0b2wfx0vsyz
  /users/{userId}/protection/identity/reactive-policies/filters/src-users-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceUsersCandidatesFilters_List
      summary: Get Identity MFA Policies Source Users Filters
      description: Returns a list of filters for source users on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assetsFiltersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: gnmjoc4u2u8d0
  /users/{userId}/protection/identity/reactive-policies/mfa-methods:
    get:
      operationId: UserMFAIdentityPoliciesMFAMethods_List
      summary: List Identity MFA Policy Methods
      description: Returns a list of MFA methods for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reactivePolicyMethods'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 0z4uy7w5vg3xs
  /users/{userId}/protection/identity/reactive-policies/src-asset-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceCandidates_List
      summary: List Identity MFA Policies Source Candidates
      description: Returns a list of source candidates on Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/candidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: 65azufwr5jnu2
  /users/{userId}/protection/identity/reactive-policies/src-users-candidates:
    get:
      operationId: UserMFAIdentityPoliciesSourceUserCandidates_List
      summary: List Identity MFA Policies Source Users Candidates
      description: Returns a list of source user candidates for Identity MFA policies.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/srcUserCandidatesList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
      x-stoplight:
        id: vq4vx6zk82sco
  /users/{userId}/protection/rules/distribution/{ruleId}:
    get:
      operationId: UserRulesDistribution_Get
      summary: Get distribution of rule hit count for a specific user
      description: Returns an object with rules distribution.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/ruleDirectionParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleDistribution'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/protection/rules/history/{ruleId}:
    get:
      operationId: UserRulesHistory_Get
      summary: Get a historic version of an rule for a specific user
      description: Returns the properties of the previous version of the rule.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
        - $ref: '#/components/parameters/ruleIdParameter'
        - $ref: '#/components/parameters/updateIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/historyRule'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - User
  /users/{userId}/type:
    put:
      description: Set user type
      operationId: UserType_Update
      tags:
        - User
      summary: Set user type
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        description: settings user type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUserTypeBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
  /users/export:
    post:
      operationId: Users_Export
      summary: Export users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/actions/inactivate:
    post:
      operationId: UsersInactive_Set
      summary: Mark users inactive
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to mark inactive
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: [ ]
      tags:
        - Users
  /users/actions/activate:
    post:
      operationId: UsersActive_Set
      summary: Mark users active
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to activate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: [ ]
      tags:
        - Users
  /users/{userId}/actions/inactivate:
    post:
      operationId: UserInactive_Set
      summary: Mark user inactive
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: [ ]
      tags:
        - Users
  /users/{userId}/actions/activate:
    post:
      operationId: UsersActive_Set
      summary: Mark user active
      description: Returns and empty object.
      parameters:
        - $ref: '#/components/parameters/userIdParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userActivateBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: [ ]
      tags:
        - Users
  /users/export/csv/{exportId}:
    get:
      operationId: UsersExport_Get
      summary: Download users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/filters:
    get:
      operationId: UsersFilters_List
      summary: List Users Filters
      description: Returns a list of filters for Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive:
    get:
      operationId: UsersInactive_List
      summary: List Inactive Users
      description: Returns a list of Users. Pass the returned 'nextCursor' as the '_cursor' query param of the next request for batches, when the '_offset' param is not used.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/optionalOffsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/entityCursorParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/optionalOrderParameter'
        - $ref: '#/components/parameters/optionalOrderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/export:
    post:
      operationId: UsersInactive_Export
      summary: Export inactive users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/export/csv/{exportId}:
    get:
      operationId: UsersInactiveExport_Get
      summary: Download inactive users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/inactive/filters:
    get:
      operationId: UsersInactiveFilters_List
      summary: List Inactive Users Filters
      description: Returns a list of filters for Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged:
    get:
      operationId: UsersPrivileged_List
      summary: List Privileged Users
      description: Returns a list of Privileged Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/export:
    post:
      operationId: UsersPrivileged_Export
      summary: Export Privileged users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/export/csv/{exportId}:
    get:
      operationId: UsersPrivilegedExport_Get
      summary: Download Privileged users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/privileged/filters:
    get:
      operationId: UsersPrivilegedFilters_List
      summary: List Privileged Users Filters
      description: Returns a list of filters for Privileged Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued:
    get:
      operationId: UsersIdentityQueued_List
      summary: List Users in learning
      description: Returns a list of users in Learning.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/orderParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/export:
    post:
      operationId: UsersIdentityQueued_Export
      summary: Export users in learning
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/export/csv/{exportId}:
    get:
      operationId: UsersIdentityQueuedExport_Get
      summary: Download users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/queued/filters:
    get:
      operationId: UsersIdentityQueuedFilters_List
      summary: List Users in Learning Filters
      description: Returns a list of filters for users in Learning.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/searchIdByPrincipalName:
    get:
      operationId: UsersByPrincipalName_Search
      tags:
        - Users
      summary: Search user entity id by Principal Name
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/principalNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/searchIdBySid:
    get:
      operationId: UsersBySid_Search
      tags:
        - Users
      summary: Search user entity id by SID
      description: Provided user SID - returns user entity id
      parameters:
        - $ref: '#/components/parameters/sidParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userIdResponse'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
  /users/segmented:
    get:
      operationId: UsersIdentitySegmented_List
      summary: List Identity Segmented Users
      description: Returns a list of Identity segmented users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/export:
    post:
      operationId: UsersIdentitySegmented_Export
      summary: Export Segmented Users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBodyRules'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/export/csv/{exportId}:
    get:
      operationId: UsersIdentitySegmentedExport_Get
      summary: Download Segmented Users Export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/segmented/filters:
    get:
      operationId: UsersIdentitySegmentedFilters_List
      summary: List Segmented Users Filters
      description: Returns a list of filters for segmented users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account:
    get:
      operationId: UsersServiceAccount_List
      summary: List ServiceAccount Users
      description: Returns a list of ServiceAccount Users.
      parameters:
        - $ref: '#/components/parameters/limitParameter'
        - $ref: '#/components/parameters/offsetParameter'
        - $ref: '#/components/parameters/searchParameter'
        - $ref: '#/components/parameters/filtersParameter'
        - $ref: '#/components/parameters/withCountParameter'
        - $ref: '#/components/parameters/orderColumnParameter'
        - $ref: '#/components/parameters/orderParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchUsersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/export:
    post:
      operationId: UsersServiceAccount_Export
      summary: Export ServiceAccount users
      description: Returns an exportId to pass into the download API.
      requestBody:
        description: 'EntityId, from, to, search, filter or date time format for export'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportId'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/export/csv/{exportId}:
    get:
      operationId: UsersServiceAccountExport_Get
      summary: Download ServiceAccount users export
      description: Returns a csv file to be downloaded.
      parameters:
        - $ref: '#/components/parameters/exportIdParameter'
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/401'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/filters:
    get:
      operationId: UsersServiceAccountFilters_List
      summary: List ServiceAccount Users Filters
      description: Returns a list of filters for ServiceAccount Users.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filtersList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/protect:
    post:
      operationId: UsersIdentitySegment_Protect
      summary: Move users to identity segmentation.
      description: Returns and empty object.
      requestBody:
        description: Array of userIds to move to protection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/queue:
    post:
      operationId: UsersIdentity_Queue
      summary: Queue users
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersQueueBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/service-account/unprotect:
    post:
      operationId: UsersIdentitySegment_Unprotect
      summary: Unprotect users
      description: Returns an empty object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usersProtectBody'
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
  /users/set-users-type:
    post:
      description: Set users type
      operationId: UsersType_Update
      tags:
        - Users
      summary: Set users type
      requestBody:
        description: settings user type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setUsersTypeBody'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200_empty'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
      security:
        - api_key: []
  /users/statistics:
    get:
      operationId: UserStatistics_Get
      summary: User statistics
      description: Get Users statistics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userStatistics'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      security:
        - api_key: []
      tags:
        - Users
components:
  parameters:
    addAncestorsParameter:
      name: _add_ancestors
      in: query
      description: show rules where the asset is part of a group
      schema:
        type: boolean
        default: true
    addBuiltinsParameter:
      name: _add_builtins
      in: query
      description: show global rules
      schema:
        type: boolean
        default: false
    analysisDirectionParameter:
      name: direction
      in: query
      description: 'direction for the query, incoming or outgoing'
      required: true
      schema:
        type: string
      example: incoming
    assetIdParameter:
      name: assetId
      in: path
      description: assetId to filter on
      required: true
      schema:
        type: string
        pattern: '^a:[ault]:[a-zA-Z0-9]{8}$'
      example: 'a:a:8ErCHXe8'
    clientIdParameter:
      name: clientId
      in: path
      description: clientId to filter on
      required: true
      schema:
        type: string
    connectionStateParameter:
      name: connection_state
      in: query
      description: connection state for the query
      schema:
        type: integer
      example: 1
    connectClientDownloadParameter:
      name: platform
      in: query
      description: connect client platform
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
          - 3
    connectRegionIdParameter:
      name: regionId
      in: path
      description: connect region id
      required: true
      schema:
        type: string
      example: 'r:a:q0tqD2rf'
    connectServerIdParameter:
      name: connectServerId
      in: path
      description: connect server id
      required: true
      schema:
        type: string
      example: 'y:a:jUDZuhXU'
    cursorParameter:
      name: _cursor
      in: query
      description: cursor position to start at
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647305854366
    customUserIdParameter:
      name: customUserId
      in: path
      description: id of the customer user
      required: true
      schema:
        type: string
        format: uuid
      example: ab803afb-83bd-4bfe-9e0e-a5db211d134b
    directionParameter:
      name: direction
      in: query
      description: 'direction for the query, 1=Inbound, 2=Outbound, 3=Both'
      required: true
      schema:
        type: integer
      example: 1
    directlyRetrievedFromAssetParameter:
      name: directly_retrieved_from_asset
      in: query
      description: Only get activities retrieved from the asset
      required: true
      schema:
        type: boolean
      example: true
    domainIdParameter:
      name: domainId
      in: path
      description: The fqdn of the domain
      required: true
      schema:
        type: string
        example: child.zeronetworks.com
    dstAssetId:
      name: dstAssetId
      in: query
      description: Id of dest asset
      required: true
      schema:
        type: string
    dstProcess:
      name: dstProcess
      in: query
      description: Dest process
      schema:
        type: string
    enrichRemoteIPsParameter:
      name: _enrich_remote_ips
      in: query
      description: enrich remote IPs
      schema:
        type: boolean
        default: true
    entityCursorParameter:
      name: _cursor
      in: query
      description: Used to page through results
      schema:
        type: string
    entityIdParameter:
      name: entityId
      in: path
      description: The id of the user or group
      required: true
      schema:
        type: string
    entityIdQueryParameter:
      name: _entityId
      in: query
      description: entityId to filter on
      schema:
        type: string
    entityParams:
      name: entityParams
      in: query
      required: false
      schema:
        type: string
      description: 'JSON string URI encoded object {id: string, direction: AssetDirection}'
    exportIdParameter:
      name: exportId
      in: path
      description: exportId to download
      required: true
      schema:
        type: string
    externalAccessPolicyIdParameter:
      name: policyId
      in: path
      description: id of the external acess policy
      required: true
      schema:
        type: string
        example: 'p:e:8199d54b'
    externalIdParameter:
      name: externalId
      in: path
      description: The external id of the group
      required: true
      schema:
        type: string
    filterIdParameter:
      name: filterId
      in: path
      description: The saved filter id
      required: true
      schema:
        type: string
        example: 'e:f:VGL7nXce'
    filtersParameter:
      name: _filters
      in: query
      description: JSON string URI encoded set of filters
      schema:
        type: string
    forestIdParameter:
      name: forestId
      in: path
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    forestIdQueryParameter:
      name: _forestId
      in: query
      description: The forest id
      required: true
      schema:
        type: string
        example: 'f:a:8199d54b'
    fqdnParameter:
      name: fqdn
      in: query
      description: fully qualified domain name
      schema:
        type: string
      example: server.domain.local
    fromParameter:
      name: from
      in: query
      description: startTime in epoch(ms)
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647308838000
    groupIdParameter:
      name: groupId
      in: path
      description: groupId to filter on
      required: true
      schema:
        type: string
        pattern: '^g:[acsot]:[a-zA-Z0-9]{8}$'
      example: 'g:t:01445453'
    groupIdQueryParameter:
      name: _groupId
      in: query
      description: groupId to filter on
      schema:
        type: string
        pattern: '^g:[acs]:[a-zA-Z0-9]{8}$'
    groupOrAssetIdParameter:
      name: groupOrAssetId
      description: group or asset id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupOrUserIdParameter:
      name: groupOrUserId
      description: group or user id to filter on
      in: path
      required: true
      schema:
        type: string
        pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupTypeParameter:
      name: groupType
      in: path
      description: group type to filter on
      required: true
      schema:
        type: string
        pattern: ^ad$|^custom$|^ot$|^snow$|^system$|^tag$|^inactive$
    identityProviderIdParameter:
      name: identityProviderId
      in: path
      description: Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - azure
          - custom
          - cyberark
          - duo
          - okta
    includeNestedMembersQueryParameter:
      name: includeNestedMembers
      in: query
      description: include nested members in the result
      required: true
      schema:
        type: boolean
    ipParameter:
      name: ip
      in: query
      description: IP address
      required: true
      schema:
        type: string
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipRangeParameter:
      name: ipRange
      in: query
      description: IP Address Range
      required: true
      schema:
        type: string
        example: 1.1.1.1-1.1.1.2
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}-[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}'
    ipSubnetParameter:
      name: subnet
      in: query
      description: IP Subnet
      required: true
      schema:
        type: string
        example: 192.168.1.0/24
        pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    isSrcAssetUnmonitoredParameter:
      name: isSrcAssetUnmonitored
      in: query
      description: filter for unmonitored sources
      required: false
      schema:
        type: boolean
    limitParameter:
      name: _limit
      in: query
      description: Limit the return results
      required: true
      schema:
        type: integer
        default: 30
        maximum: 400
        minimum: 1
    maintenanceWindowIdParameter:
      name: maintenanceWindowId
      in: path
      required: true
      description: id of the maintence window
      schema:
        type: string
        pattern: '^[e]:[m]:[a-zA-Z0-9]{8}$'
    offsetParameter:
      name: _offset
      required: false
      in: query
      description: Used to page through results
      schema:
        type: integer
        default: 0
        maximum: 1000000000
        minimum: 0
    onboardingPolicyIdParameter:
      name: onboardingPolicyId
      in: path
      description: The id of the onboarding policy
      required: true
      schema:
        type: string
        format: uuid
    optionalOffsetParameter:
      name: _offset
      in: query
      description: Used to page through results
      required: false
      schema:
        type: integer
        maximum: 1000000000
        minimum: 0
    optionalOrderParameter:
      name: order
      in: query
      description: What order to sort the results
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    optionalOrderColumnParameter:
      name: 'orderColumns[]'
      in: query
      description: what column to order on
      required: false
      schema:
        type: string
        example: name
    orderParameter:
      name: order
      in: query
      description: What order to sort the results
      schema:
        type: string
        default: desc
        enum:
          - asc
          - desc
    orderColumnParameter:
      name: 'orderColumns[]'
      in: query
      description: what column to order on
      schema:
        type: string
        default: name
        example: name
    otRuleIdParameter:
      name: ruleId
      in: path
      description: The id of the rule
      required: true
      schema:
        type: string
      example: r:s:f52f491fd5b8
    port:
      name: port
      in: query
      description: port
      required: true
      schema:
        type: integer
    principalNameParameter:
      name: principalName
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    processes:
      name: 'processes[]'
      in: query
      description: process
      schema:
        type: string
        example: c:\windows\system32\lsass.exe
    licenseTypeParameter:
      name: licenseType
      in: path
      description: The license type
      required: true
      schema:
        type: string
        enum:
          - identity
          - network
          - rpc
    protocolType:
      name: protocolType
      in: query
      description: protocol type
      required: true
      schema:
        type: integer
    pushIdentityProviderIdParameter:
      name: pushIdentityProviderId
      in: path
      description: Push Identity provider Id
      required: true
      schema:
        type: string
        enum:
          - duo
          - microsoftAuthenticator
    reactivePolicyIdParameter:
      name: reactivePolicyId
      in: path
      description: The id of the MFA policy
      required: true
      schema:
        type: string
        format: uuid
    roleEntityIdParameter:
      name: roleEntityId
      in: path
      description: The id of the user or group
      required: true
      schema:
        type: string
    ruleDirectionParameter:
      name: ruleDirection
      in: query
      description: 'direction of the rule (1-Inbound, 2-Outbound)'
      required: true
      schema:
        type: integer
        enum:
          - 1
          - 2
    ruleIdParameter:
      name: ruleId
      in: path
      description: The id of the rule
      required: true
      schema:
        type: string
        format: uuid
      example: d37077dc-0660-454d-81a0-f52f491fd5b8
    ruleTypeParameter:
      name: ruleType
      in: query
      description: rule type to filter on
      required: true
      schema:
        type: integer
        description: '1 - Inbound Allow, 2 - Inbound Block, 3 - Outbound Allow, 4 - Outbound Block'
    searchParameter:
      name: _search
      in: query
      description: Test to search for
      schema:
        type: string
    sessionIdParameter:
      name: sessionId
      in: path
      description: The id of the session
      required: true
      schema:
        type: string
        pattern: '^s:a:[a-zA-Z0-9]{8}$'
    showInactiveParameter:
      name: showInactive
      in: query
      description: show inactive assets
      schema:
        type: boolean
        default: false
    sidParameter:
      name: sid
      in: query
      required: true
      description: sid to query for
      schema:
        type: string
    simulationParams:
      name: simulationParams
      in: query
      required: false
      schema:
        type: string
      description: 'JSON string URI encoded object {"srcAssetId":"a:a:blah","srcUserId":"b:blah","srcProcess":"","dstAssetId":"a:a:blah","dstProcess":"","protocolType":6,"port":"3389"}'
    sortParameter:
      name: sort
      in: query
      description: sort for the query
      schema:
        type: string
      example: occurred_desc
    srcAssetId:
      name: srcAssetId
      in: query
      description: Src asset id
      required: true
      schema:
        type: string
    srcProcess:
      name: srcProcess
      in: query
      description: Src process
      schema:
        type: string
    srcUserId:
      name: srcUserId
      in: query
      description: Id of src user
      required: true
      schema:
        type: string
    switchIdParameter:
      name: switchId
      in: path
      description: switch to delete
      required: true
      schema:
        type: string
    toParameter:
      name: to
      in: query
      description: endTime in epoch(ms)
      schema:
        type: integer
        format: int64
        pattern: '^\d{13}$'
      example: 1647305854366
    trafficTypeParameter:
      name: traffic_type
      in: query
      description: 1-Internal, 2-External or 3-Both
      required: true
      schema:
        type: integer
    updateIdParameter:
      name: updateId
      in: query
      description: version
      required: true
      schema:
        type: integer
    userAccessConfigParameter:
      name: userAccessConfigId
      in: path
      description: userAccessConfigId to filter on
      required: true
      schema:
        type: string
        pattern: '^v:[a-zA-Z0-9]{8}$'
    userIdParameter:
      name: userId
      in: path
      description: userId to filter on
      required: true
      schema:
        type: string
        pattern: '^u:[a]:[a-zA-Z0-9]{8}$'
      example: 'u:a:w27loY5p'
    withCountParameter:
      name: with_count
      in: query
      description: return count of objects
      schema:
        type: boolean
        default: false
  responses:
    200_empty:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/emptyResponse'
    '204':
      description: No Content
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '409':
      description: Already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
  schemas:
    accessInfo:
      type: object
      properties:
        hasAccess:
          type: boolean
        ruleFilters:
          type: array
          items:
            $ref: '#/components/schemas/ruleFilter'
    accessToken:
      description: Access Token
      type: object
      properties:
        clientId:
          type: string
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
        createdAt:
          type: string
        token:
          type: string
      x-examples:
        example-1:
          clientId: 'm:195d7d50e8c0c2864c985e72de1a2fdef7dfdc6e'
          accessType: 2
          name: example
          expiry: '2024-06-27T08:38:17.000Z'
          issuedAt: '2022-06-27T08:38:17.000Z'
          createdAt: '2022-06-27T08:21:21.000Z'
          token: eyJhbGciOiJSUzI1NiIsIna5cCI6IkpXVCJ9.eyJzdWIiOiJtOjY5NWQ3ZDUwZThjMGMyODY0Yzk4NWU3MmRlMWEyZmRlZjdkZmRjNmUiLCJuYW1lIjoiYXNkIiwiZWlkIjoiMTc2MjRhNTctNzI5ZS00ODA1LTk3MDMtNjc5NDdkM2RiMDFlIiwic2NvcGUiOjUsImVfbmFtZSI6ImxhYjgiLCJ2IjoxLCJpYXQiOjE2NTYzMTkwOTcsImV4cCI6MTcxOTQ3NzQ5NywiYXVkIjoicG9ydGFsLWxhYjguemVyb25ldHdvcmtzLmNvbSIsImlzcyI6Inplcm9uZXR3b3Jrcy5jb20vYXBpL3YxL2FjY2Vzcy10b2tlbiJ9.S0P3tyeU7BOPd0P27GKyFeWidoFSKEMiKhHbRLikyy4_34FafcpykiLO1vKBH6iB0utnEO4BwohlWeRWCi6LWkm5R2GxSLVo9GEuuTLPfqUkMzwpMpUkc-MniERH508z7LsxKrPA9VGCmMDKUh87PasooHfWaPgYtWTygV_uAtu1ppIde4V86WsqEmvbZt2gNGBLxwLgIgUgGuOExHu5MOM9fttiNKtuceJxP-RXFAFluXlfJwmjeY-WWHTU6AdvhB0HeJKAA7Pb8A60OkYxQsLxZKLS0K9WKFekYflh-nZBOQRfU3aUygmRyxtknvE0yZ7aK290y2Vb-lnqtl3k5Q
    accessTokenInfo:
      type: object
      properties:
        clientId:
          type: string
          readOnly: true
        name:
          type: string
        expiry:
          type: string
        issuedAt:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        accessType:
          $ref: '#/components/schemas/accessTypeEnum'
      title: ''
      x-examples:
        example-1:
          clientId: 'm:81a8735b5fed82c9c497163477c98fd835b58f83'
          accessType: 3
          name: access token - cloud connector provisioning
          expiry: '2022-07-26T15:49:49.000Z'
          issuedAt: '2022-06-26T15:49:49.000Z'
          createdAt: '2022-06-26T12:12:56.000Z'
        example-2:
          clientId: string
          accessType: 1
          name: string
          expiry: string
          issuedAt: string
          createdAt: string
    accessTypeEnum:
      description: '1=Full Access, 2=Read Only, 3=Cloud Connector Provisioning'
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      title: accessTypeEnum
    actionType:
      description: |
        * '1' - Allow
        * '2' - Block
      type: integer
      format: int32
      enum:
        - 1
        - 2
    activitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/activity'
        scrollCursor:
          type: string
    activity:
      type: object
      properties:
        conflictingInboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        conflictingOutboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              $ref: '#/components/schemas/source'
            assetType:
              $ref: '#/components/schemas/assetType'
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            ipThreatScore:
              type: integer
            networkProtectionState:
              $ref: '#/components/schemas/protectionState'
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            userId:
              type: string
            userName:
              type: string
        inboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        outboundRuleMatches:
          type: array
          items:
            $ref: '#/components/schemas/ruleMatch'
        protocol:
          $ref: '#/components/schemas/protocol'
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              $ref: '#/components/schemas/protectionState'
            assetSrc:
              $ref: '#/components/schemas/source'
            assetType:
              $ref: '#/components/schemas/assetType'
            eventRecordId:
              type: integer
            fqdn:
              type: string
            ip:
              type: string
            ipThreatScore:
              type: integer
            networkProtectionState:
              $ref: '#/components/schemas/protectionState'
            port:
              type: integer
            processId:
              type: string
            processName:
              type: string
            processPath:
              type: string
            userId:
              type: string
            userName:
              type: string
        state:
          description: |
            * '1' - Blocked
            * '2' - Requested
            * '3' - Established
            * '4' - Blocked At Source
            * '5' - Blocked By Third Party
            * '6' - Blocked At Source By Third Party
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          $ref: '#/components/schemas/trafficType'
    aeExclusion:
      allOf:
        - $ref: "#/components/schemas/rule"
        - type: object
          properties:
            deletedAt:
              $ref: '#/components/schemas/epochMillis'
            deltedBy:
              $ref: '#/components/schemas/idNamePair'
    aeExclusionList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/aeExclusion'
    aiExclusionInfo:
      type: object
      properties:
        tcpPorts:
          type: string
        udpPorts:
          type: string
        icmp:
          type: boolean
        processesList:
          type: array
          items:
            type: string
      x-examples:
        example-1:
          tcpPorts: '100-400,520'
          udpPorts: ''
          icmp: true
          processesList:
            - 'C:\Windows\System32\svchost.exe'
            - 'C:\Windows\System32\svchost.exe (W32Time)'
        example-2:
          tcpPorts: '123'
          udpPorts: '10-30,50-100,150,200'
          icmp: false
          processesList: []
    aiExclusionSourceEntitiesBody:
      type: array
      items:
        type: string
      example:
        - assetid1
        - assetid2
    ancestors:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    asset:
      type: object
      properties:
        assetStatus:
          $ref: '#/components/schemas/assetStatus'
        assetType:
          $ref: '#/components/schemas/assetType'
        assignedDeploymentId:
          type: string
        breakGlassActivated:
          type: boolean
        domain:
          type: string
          example: domain.local
        fqdn:
          type: string
          example: laptoppc.domain.local
        healthState:
          $ref: '#/components/schemas/healthState'
        id:
          type: string
          example: 'a:a:6d020055'
        identityProtectedAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectionState:
          $ref: '#/components/schemas/identityProtectionState'
        inactiveReason:
          $ref: '#/components/schemas/inactiveReason'
        ipV4Addresses:
          type: array
          items:
            type: string
            example: 1.1.1.1
        ipV6Addresses:
          type: array
          items:
            type: string
        lastLogonReplicated:
          $ref: '#/components/schemas/epochMillis'
        name:
          type: string
          example: laptoppc
        operatingSystem:
          type: string
          example: Windows 10 Pro
        passwordUpdateTime:
          $ref: '#/components/schemas/epochMillis'
        preferredDeploymentId:
          type: string
        principalName:
          type: string
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        protectionState:
          $ref: '#/components/schemas/protectionState'
        rpcMonitored:
          type: boolean
        rpcProtectionState:
          $ref: '#/components/schemas/protectionState'
        source:
          $ref: '#/components/schemas/source'
        state:
          $ref: '#/components/schemas/state'
        sid:
          type: string
        guid:
          type: string
        userAccountControl:
          type: integer
        servicePrincipleNames:
          type: array
          items:
            type: string
        distinguishedName:
          type: string
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
        protectedAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectedAt:
          $ref: '#/components/schemas/epochMillis'
        assignedDeployment:
          $ref: '#/components/schemas/idNamePair'
        preferredDeployment:
          $ref: '#/components/schemas/idNamePair'
        inactiveSince:
          $ref: '#/components/schemas/epochMillis'
        environmentGroup:
          $ref: '#/components/schemas/idNamePair'
    assetActivateBody:
      type: object
      properties:
        comment:
          type: string
    assetAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            counts:
              type: object
              properties:
                byProcess:
                  type: integer
                byUser:
                  type: integer
                byPort:
                  type: integer
                byAsset:
                  type: integer
            byAsset:
              type: array
              items:
                $ref: '#/components/schemas/byAsset'
            byUser:
              type: array
              items:
                $ref: '#/components/schemas/byUser'
            bySrcProcess:
              type: array
              items:
                $ref: '#/components/schemas/byProcess'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/byPort'
            connectionState:
              type: integer
    assetBasicInfo:
      type: object
      properties:
        assetType:
          $ref: '#/components/schemas/assetType'
        breakGlassActivated:
          type: boolean
        domain:
          type: string
        id:
          type: string
        identityProtectionState:
          type: integer
        name:
          type: string
        protectionState:
          $ref: '#/components/schemas/protectionState'
        rpcProtectionState:
          type: integer
      x-examples:
        example-1:
          id: 'a:a:lELFlL34'
          name: TALM-DC-LAB11
          assetType: 2
          protectionState: 5
          domain: dev.zn.com
          identityProtectionState: 1
          rpcProtectionState: 1
          breakGlassActivated: false
    assetCandidate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        assetType:
          type: integer
        protectionState:
          $ref: '#/components/schemas/protectionState'
        domain:
          type: string
    assetCandidateList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetCandidate'
        scrollCursor:
          type: string
    assetFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    assetIdSearch:
      type: object
      properties:
        assetId:
          type: string
    assetList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        count:
          type: integer
    assetManager:
      type: object
      properties:
        manager:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    assetManagersBody:
      type: object
      required:
        - managerIds
        - permission
      properties:
        managerIds:
          description: managers id
          type: array
          items:
            type: string
            pattern: '^[ug]:[ac]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'u:a:ab124as2'
        permission:
          description: 2 - Viewer, 3 - Manager
          type: integer
          enum:
            - 2
            - 3
    assetManagersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetManager'
    assetManagersUpdateBody:
      type: object
      required:
        - managerId
        - permission
      properties:
        managerId:
          type: string
          pattern: '^[ug]:[a-z]:[a-zA-Z0-9]{8}$'
          example:
            - g:c:ab124as2
            - u:a:ab124as2
        permission:
          description: 2 - Viewer, 3 - Manager
          type: integer
          enum:
            - 2
            - 3
    assetOt:
      type: object
      properties:
        assetStatus:
          $ref: '#/components/schemas/assetStatus'
        assetType:
          $ref: '#/components/schemas/assetType'
        domain:
          type: string
          example: domain.local
        fqdn:
          type: string
          example: laptoppc.domain.local
        healthState:
          $ref: '#/components/schemas/healthState'
        id:
          type: string
          example: 'a:a:6d020055'
        ipV4Addresses:
          type: array
          items:
            type: string
            example: 1.1.1.1
        ipV6Addresses:
          type: array
          items:
            type: string
        name:
          type: string
          example: router
        principalName:
          type: string
        operatingSystem:
          type: string
        protectionState:
          $ref: '#/components/schemas/protectionState'
        source:
          $ref: '#/components/schemas/source'
        state:
          $ref: '#/components/schemas/state'
    assetOtList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetOt'
    assetOtResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/assetOt'
    assetResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/asset'
    assetsActivateBody:
      type: object
      required:
        - items
      properties:
        comment:
          type: string
        items:
          type: array
          items:
            type: string
    assetsBreakGlassBody:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: string
    assetsFiltersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/assetFilter'
    assetsIdentityQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsMirrorBody:
      type: object
      properties:
        originalAssetId:
          type: string
        targetAssetId:
          type: string
      required:
        - originalAssetId
        - targetAssetId
    assetsOrGroupsList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/asset'
              - $ref: '#/components/schemas/group'
    assetsPreferredSegmentServer:
      type: object
      properties:
        preferredDeployment:
          type: string
    assetsPreferredSegmentServerSetBody:
      type: object
      properties:
        assetId:
          type: string
        preferredDeploymentId:
          type: string
          description: If not provided sets the asset back to no preferred segment server
      required:
        - assetId
    assetsPreferredSegmentServerBody:
      type: object
      properties:
        assetId:
          type: string
      required:
        - assetId
    assetsProtectBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetsQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsRpcBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetsRPCQueueBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - items
        - queueDays
    assetsStatesStatistics:
      type: object
      properties:
        assetsStatesStatistics:
          type: object
          properties:
            connectedAssetsCount:
              type: integer
      x-examples:
        example-1:
          assetsStatesStatistics:
            connectedAssetsCount: 13
    assetsStatistics:
      type: object
      properties:
        item:
          type: object
          properties:
            totalCount:
              type: integer
            deletedCount:
              type: integer
            protectedCount:
              type: integer
            queuedCount:
              type: integer
            monitoredCount:
              type: integer
            protectedDueToProtectionPolicyCount:
              type: integer
            queuedDueToProtectionPolicyCount:
              type: integer
            forcedUnprotectedCount:
              type: integer
            removingProtectionCount:
              type: integer
            forceRemovingProtectionCount:
              type: integer
            addingProtectionCount:
              type: integer
            forceAddingProtectionCount:
              type: integer
            notProtectedLink:
              type: array
              items:
                $ref: '#/components/schemas/requestedFilter'
      x-examples:
        example-1:
          item:
            totalCount: 82
            deletedCount: 2
            protectedCount: 31
            queuedCount: 2
            monitoredCount: 37
            protectedDueToProtectionPolicyCount: 0
            queuedDueToProtectionPolicyCount: 0
            forcedUnprotectedCount: 0
            removingProtectionCount: 1
            forceRemovingProtectionCount: 0
            addingProtectionCount: 3
            forceAddingProtectionCount: 6
            notProtectedLink:
              - id: protectionStatus
                includeValues:
                  - '1'
                  - '6'
              - id: status
                excludeValues:
                  - '3'
    assetStatus:
      description: |
        Possible asset status:
          * `1`' - Not monitored
          * `2' - Segment server
          * `4' - Can't be monitored (unsupported OS)
          * `5' - Can't be monitored (unmonitorable)
          * `6' - Can't be monitored (unmonitorable)
          * `7' - Cloud connector
          * `8' - Not monitored (ansible unreachable)
          * `9' - Not monitored (cloud connector uninstalled)
          * `10' - Not monitored (cloud connector required)
          * `12' - Can't be monitored (inactive entity)
      type: integer
      enum:
        - 1
        - 2
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 12
    assetSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    assetsUnprotectBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      required:
        - items
    assetType:
      description: |
        Possible asset status:
          * `0' - Unknown
          * `1' - Client
          * `2' - Server
          * `3' - Virtual cluster
          * `4' - IP camera
          * `5' - Smart TV
          * `6' - Factory controller
          * `7' - Medical device
          * `8' - Printer
          * `9' - Scanner
          * `10' - Smart card reader
          * `11' - Router
          * `12' - Hypervisor
          * `13' - PLC
          * `14' - HMI
          * `15' - Switch
          * `16' - Terminal station
          * `17' - RTU
          * `18' - Wireless access point
          * `19' - Historian
          * `20' - Game console
          * `21' - Fire alarm
          * `22' - UPS
          * `23' - Storage appliance
          * `24' - Virtualization appliance
          * `25' - Firewall appliance
          * `26' - Security scanner
          * `27' - Security controller
          * `28 ' - Door lock
          * `29' - Biometric entry system
          * `30' - HVAC
          * `31' - Room scheduler
          * `32' - Load Balancer Appliance
          * `33' - WAN Concentrator
          * `34' - IPAM Appliance
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
    audienceType:
      description: |
        dictionary:
          * `0` PORTAL_AUDIENCE
          * `1` SSP_AUDIENCE
          * `2` RP_AUDIENCE
      type: integer
      enum:
        - 0
        - 1
        - 2
    audit:
      type: object
      properties:
        auditType:
          $ref: '#/components/schemas/auditType'
        destinationEntitiesList:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        details:
          type: string
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        performedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
        reportedObjectId:
          type: string
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        userRole:
          $ref: '#/components/schemas/userRole'
    auditList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/audit'
        scrollCursor:
          type: string
    auditType:
      description: |
        * '1' - Asset is being segmented (network)
        * '2' - Asset segmented (network)
        * '3' - Asset failed being segmented (network)
        * '4' - Asset is being unsegmented (network)
        * '5' - Asset unsegmented (network)
        * '6' - Asset failed being unsegmented (network)
        * '7' - Asset added to learning (network)
        * '8' - Asset removed from learning (network)
        * '9' - Inbound allow rule created
        * '10' - Inbound allow rule deleted
        * '11' - Inbound allow rule expired
        * '12' - Inbound allow rule edited
        * '17' - Inbound MFA policy created
        * '18' - Inbound MFA policy edited
        * '19' - Inbound MFA policy deleted
        * '20' - Inbound JIT rule created
        * '21' - Inbound JIT rule deleted
        * '22' - Inbound JIT rule expired
        * '23' - Inbound JIT rule revived
        * '24' - Inbound JIT rule edited
        * '25' - API Token created
        * '26' - API Token deleted
        * '27' - API Token regenerated
        * '28' - Asset segmentation date postponed (network)
        * '29' - Outbound block rule created
        * '30' - Outbound block rule deleted
        * '31' - Outbound block rule expired
        * '32' - Outbound block rule edited
        * '33' - Inbound block rule created
        * '34' - Inbound block rule deleted
        * '35' - Inbound block rule expired
        * '36' - Inbound block rule edited
        * '39' - Asset unsegmented (network) (overriding policy)
        * '40' - Asset is being unsegmented (network) (overriding policy)
        * '41' - Asset removed from learning (network) (overriding policy)
        * '42' - Asset is being segmented (network) (policy)
        * '43' - Asset segmented (network) (policy)
        * '44' - Asset added to learning (network) (policy)
        * '45' - Segmentation policy created
        * '46' - Segmentation policy deleted
        * '47' - Segmentation policy edited
        * '48' - Inbound JIT access rejected
        * '49' - Inbound JIT fallback rule created
        * '50' - Inbound JIT fallback rule deleted
        * '51' - Inbound JIT fallback rule expired
        * '53' - Outbound allow rule created
        * '54' - Outbound allow rule deleted
        * '55' - Outbound allow rule expired
        * '56' - Outbound allow rule edited
        * '58' - Admin portal role changed to admin
        * '59' - Admin portal role changed to viewer
        * '60' - Admin portal role revoked
        * '61' - Outbound JIT rule created
        * '62' - Outbound JIT rule deleted
        * '63' - Outbound JIT rule expired
        * '64' - Outbound MFA policy created
        * '65' - Outbound MFA policy deleted
        * '66' - Outbound MFA policy edited
        * '67' - Outbound JIT access rejected
        * '68' - Asset learning is done (network)
        * '69' - Asset learning (policy) is done (network)
        * '70' - Manual Linux asset created
        * '71' - Manual OT/IoT asset created
        * '72' - Asset learning extended (network)
        * '73' - Admin portal logon
        * '74' - Asset manager added
        * '75' - Asset manager removed
        * '76' - Asset is monitored by Cloud connector
        * '77' - Asset is no longer monitored by Cloud connector
        * '78' - Asset is monitored by Segment server
        * '79' - Asset is back to learning (network)
        * '80' - Manual OT/IoT asset edited
        * '81' - Admin portal role changed to operator
        * '82' - Segment server deployed
        * '83' - AI inbound allow rule rejected
        * '84' - AI inbound block rule rejected
        * '85' - AI outbound allow rule rejected
        * '86' - AI outbound block rule rejected
        * '87' - AI inbound allow rule approved
        * '88' - AI inbound block rule approved
        * '89' - AI outbound allow rule approved
        * '90' - AI outbound block rule approved
        * '91' - AI inbound allow rule approved with changes
        * '92' - AI inbound block rule approved with changes
        * '93' - AI outbound allow rule approved with changes
        * '94' - AI outbound block rule approved with changes
        * '95' - Connect region created
        * '96' - Connect session created
        * '97' - Connect session expired
        * '98' - Connect session revoked
        * '99' - Connect session logged out
        * '100' - User access configuration created
        * '101' - User access configuration edited
        * '102' - User access configuration deleted
        * '103' - Connect server deployed
        * '104' - Connect asset created
        * '105' - Asset segmentation postponed (network) (pending review rules)
        * '106' - Connect region edited
        * '107' - Connect server edited
        * '108' - Asset is being segmented (identity)
        * '109' - Asset segmented (identity)
        * '110' - Asset is being unsegmented (identity)
        * '111' - Asset unsegmented (identity)
        * '112' - Identity rule created
        * '113' - Identity rule deleted
        * '114' - Identity rule expired
        * '115' - Identity rule edited
        * '116' - User segmented (identity)
        * '117' - User unsegmented (identity)
        * '118' - User added to learning (identity)
        * '119' - User removed from learning (identity)
        * '120' - Asset added to RPC monitoring
        * '121' - Asset removed from RPC monitoring
        * '122' - User classification changed
        * '123' - Connect session extended
        * '124' - Asset marked as inactive by repository (deleted)
        * '125' - Asset marked as active by repository
        * '126' - Asset marked as inactive by user
        * '127' - Asset marked as active by user
        * '128' - Break glass configuration activated
        * '129' - Break glass configuration deactivated
        * '130' - Asset marked as inactive by repository (disable)
        * '131' - Asset marked as active by repository (enable)
        * '132' - Break glass configuration activated (asset)
        * '133' - Break glass configuration deactivated (asset)
        * '134' - Asset is being segmented (RPC)
        * '135' - Asset segmented (RPC)
        * '136' - Asset is being unsegmented (RPC)
        * '137' - Asset unsegmented (RPC)
        * '138' - Rules RPC rule created
        * '139' - Rules RPC rule deleted
        * '140' - Rules RPC rule expired
        * '141' - Rules RPC rule edited
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 53
        - 54
        - 55
        - 56
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
    byAsset:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          type: integer
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
    byDstAsset:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        connectionState:
          type: integer
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'  
    byPort:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            port:
              type: object
              properties:
                protocol:
                  $ref: '#/components/schemas/protocol'
                port:
                  type: integer
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          type: integer
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
    byPortUser:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            port:
              type: object
              properties:
                protocol:
                  $ref: '#/components/schemas/protocol'
                port:
                  type: integer
        connectionState:
          type: integer
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
    byProcess:
      type: object
      properties:
        occurred:
          type: integer
        lastTimeSeen:
          type: string
        aggregation:
          type: object
          properties:
            count:
              type: integer
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'
        processes:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        connectionState:
          type: integer
    bySrcAsset:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        connectionState:
          type: integer
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'  
    bySrcProcess:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            name:
              type: string
        connectionState:
          type: integer
        dstAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcAssets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
    byUser:
      type: object
      properties:
        aggregation:
          type: object
          properties:
            count:
              type: integer
            id:
              type: string
            name:
              type: string
        assets:
          type: array
          items:
            $ref: '#/components/schemas/assetSummary'
        connectionState:
          type: integer
        lastTimeSeen:
          type: string
        occurred:
          type: integer
        ports:
          type: array
          items:
            $ref: '#/components/schemas/portSummary'
        srcProcesses:
          type: array
          items:
            $ref: '#/components/schemas/processSummary'
        users:
          type: array
          items:
            $ref: '#/components/schemas/userSummary'  
    candidate:
      type: object
      properties:
        domain:
          type: string
        guid:
          type: string
        hasIdentityProtectionPolicy:
          type: boolean
        hasNetworkProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        sid:
          type: string
    candidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/candidate'
        scrollCursor:
          type: string
    challengeBody:
      type: object
      properties:
        email:
          type: string
        sendSkip:
          type: boolean
    challengeResponse:
      type: object
      properties:
        authenticatedVia:
          type: string
        isPhoneChallengeSupported:
          type: boolean
    clusterInfo:
      type: object
      properties:
        clusterInfo:
          type: object
          properties:
            clusterName:
              type: string
            clusterMembersList:
              type: array
              items:
                type: string
    connectivityStateAfterReboot:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
      description: |
        dictionary:
          * `1` Previous connectivity state
          * `2` Connected (Always-on)
          * `3` Disconnected
          * `4` Signed out
    connectRegion:
      type: object
      properties:
        connectServers:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        createdBy:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        dnsServersIpAddressList:
          type: array
          items:
            type: string
        id:
          type: string
        ipAddress:
          type: string
          format: ipv4
        name:
          type: string
        updatedBy:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    connectRegionBody:
      type: object
      properties:
        name:
          type: string
        ipAddress:
          type: string
          format: ipv4
        dnsServersIpAddressList:
          type: array
          items:
            type: string
            format: ipv4
        dnsSuffixesList:
          type: array
          items:
            type: string
      required:
        - name
        - ipAddress
        - dnsServersIpAddressList
    connectRegionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectRegion'
    connectServer:
      type: object
      properties:
        assemblyVersion:
          type: string
        clientsDnsServerIPs:
          type: array
          items:
            type: string
        connectionState:
          type: integer
        externalIPAddress:
          type: string
          format: ipv4
        fqdn:
          type: string
        id:
          type: string
        installedAt:
          $ref: '#/components/schemas/epochMillis'
        internalIPAddress:
          type: string
          format: ipv4
        name:
          type: string
        port:
          type: integer
        region:
          $ref: '#/components/schemas/idNamePair'
        subnet:
          $ref: '#/components/schemas/idNamePair'
    connectServerBody:
      type: object
      properties:
        publicPort:
          type: string
      required:
        - publicPort
    connectServersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectServer'
    connectUserAccessConfig:
      type: object
      properties:
        allowedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedAssetSources:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedDestinations:
          type: array
          items:
            type: object
            properties:
              guid:
                type: string
              id:
                type: string
              name:
                type: string
              domain:
                type: string
              hasProtectionPolicy:
                type: boolean
        allowedRegions:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        allowedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        connectivityStateAfterReboot:
          type: integer
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/userSimple'
        description:
          type: string
        excludedAssetIds:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedUserIds:
          type: array
          items:
            $ref: '#/components/schemas/userSimple'
        forceSsoAuthentication:
          type: boolean
        id:
          type: string
        name:
          type: string
        sessionTtlHours:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/userSimple'
    connectUserAccessConfigBody:
      type: object
      required:
        - allowedRegions
        - connectivityStateAfterReboot
        - dstEntityIdsList
        - forceSsoAuthentication
        - loginAuthorizedEntities
        - name
        - sessionTtlHours
      properties:
        allowedRegions:
          type: array
          items:
            type: string
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
        description:
          type: string
        dstEntityIdsList:
          type: array
          items:
            type: string
        loginAuthorizedEntities:
          type: object
          required:
            - allowedAssetIdsList
            - allowedAssetsSourcesList
            - allowedUsersIdsList
          properties:
            allowedAssetIdsList:
              type: array
              items:
                type: string
            allowedAssetsSourcesList:
              type: array
              items:
                type: string
            allowedUsersIdsList:
              type: array
              items:
                type: string
            excludedAssetIdsList:
              type: array
              items:
                type: string
            excludedUserIdsList:
              type: array
              items:
                type: string
        forceSsoAuthentication:
          type: boolean
        name:
          type: string
        sessionTtlHours:
          type: integer
    connectUserAccessConfigList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/connectUserAccessConfig'
    createdBy:
      type: object
      properties:
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        email:
          type: string
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        userRole:
          $ref: '#/components/schemas/userRole'
    createOtAssetResponse:
      type: object
      properties:
        assetId:
          type: string
    customGroup:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        directMembersCount:
          type: integer
        domain:
          type: string
        guid:
          type: string
          format: uuid
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        principalName:
          type: string
        role:
          type: integer
        sid:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
    customGroupBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - name
    customGroupMembersBody:
      type: object
      properties:
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^g:[c]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
      required:
        - membersId
    customGroupResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/customGroup'
    customUser:
      type: object
      properties:
        activeEnvironmentId:
          type: string
          format: uuid
        email:
          type: string
        fullName:
          type: string
        id:
          type: string
          format: uuid
        phone:
          type: string
        portalUserType:
          type: string
        role:
          $ref: '#/components/schemas/userRole'
    customUsersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/customUser'
    deployment:
      type: object
      properties:
        assemblyVersion:
          type: string
        assetId:
          type: string
        id:
          type: string
        ipAddress:
          type: string
        defaultGateway:
          type: string
        dnsIPAddress:
          type: string
        name:
          type: string
        subnetMask:
          type: string
        status:
          type: integer
        state:
          type: integer
    deploymentsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/deployment'
    distribution:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        activitiesCount:
          type: integer
    downloadUrl:
      type: object
      properties:
        url:
          type: string
    emptyResponse:
      type: object
    encodedEntity:
      type: object
      properties:
        id:
          type: string
    enforcementSource:
      description: |
        * '1' - ReactivePolicy
        * '2' - Automated
        * '3' - AccessPortal
        * '4' - AdminPortal
        * '5' - AI
        * '6' - API
        * '7' - Setup'
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
    entitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/entity'
        count:
          type: integer
    entity:
      type: object
      anyOf:
        - $ref: '#/components/schemas/asset'
        - $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/group'
    envConfig:
      type: object
      properties:
        isTrial:
          type: boolean
          example: false
        periodicallyCheckDeployments:
          type: boolean
          example: true
    epochMillis:
      description: Epoch Millis
      type: integer
      format: int64
      title: epochMillis
    error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    exportBody:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
    switchInterfacesBody:
      type: object
      properties:
        switchId:
          type: string
        interfaces:
          type: array
          items:
            type: string
        shouldMonitor:
          type: boolean
    exportBodyActivities:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _search:
          type: string
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
        - _search
    exportBodyAnalysis:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
        - from
    exportBodyAssets:
      type: object
      properties:
        _filters:
          type: string
          default: '{"groupBy":"byPort","direction":"incoming","connection":3}'
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - localDateTimeFormat
        - _filters
    exportBodyRules:
      type: object
      properties:
        addAncestors:
          type: boolean
          default: true
        addBuiltins:
          type: boolean
          default: false
        assetDirection:
          $ref: '#/components/schemas/ruleDirection'
        _filters:
          type: string
        localDateTimeFormat:
          type: string
          default: en-US
      required:
        - addAncestors
        - addBuiltins
        - localDateTimeFormat
        - _filters
    exportId:
      type: object
      properties:
        exportId:
          type: string
    externalAccessPolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        dstAssetId:
          type: string
        dstAssetInfo:
          $ref: '#/components/schemas/asset'
        dstPortsList:
          $ref: '#/components/schemas/portsList'
        dstProcessNamesList:
          type: array
          items:
            type: string
        id:
          type: string
        name:
          type: string
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        url:
          type: string
    externalAccessPolicyBody:
      type: object
      properties:
        description:
          type: string
        dstAssetId:
          type: string
        dstPortsList:
          $ref: '#/components/schemas/portsList'
        dstProcessNamesList:
          type: array
          items:
            type: string
        name:
          type: string
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        url:
          type: string
      required:
        - dstAssetId
        - dstPortsList
        - dstProcessNamesList
        - name
        - ruleDuration
        - srcUserIdsList
        - strategy
    externalAccessPolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/externalAccessPolicy'
    externalAccessPolicyStatistics:
      type: object
      properties:
        policiesStatistics:
          type: object
          properties:
            totalCount:
              type: integer
    externalIpsList:
      description: Collection of Internet IPs that are trusted
      type: array
      items:
        type: string
        example: 192.168.0.0
    filter:
      type: object
      properties:
        id:
          type: string
        type:
          type: integer
        name:
          type: string
        placeholder:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        allowedCharactersRegex:
          type: string
        selections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    filtersList:
      type: object
      properties:
        defaultSelectedFilterId:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/filter'
        hasActiveFiltersChanged:
          type: boolean
        resolvedFilters:
          type: object
        userFilter:
          type: object
          properties:
            resolvedFilters:
              type: object
    group:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        directMembersCount:
          type: integer
        domain:
          type: string
        externalId:
          type: string
        guid:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
        principalName:
          type: string
        role:
          type: integer
          format: int32
        sid:
          type: string
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
              example: User Name
    groupCandidate:
      type: object
      properties:
        domain:
          type: string
        hasProtectionPolicy:
          type: boolean
        id:
          type: string
        name:
          type: string
    groupCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/groupCandidate'
        scrollCursor:
          type: string
    groupIdOrAssetId:
      type: string
      pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
    groupIdOrUserId:
      type: string
      pattern: '^[gu]:[ac]:[a-zA-Z0-9]{8}$'
    groupResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/group'
    groupItem:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/group'
    groupSimulateSegmentationEntity:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    groupSimulateSegmentationItem:
      type: object
      properties:
        coveredEntities:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationEntity'
        lastTimeSeen:
            $ref: '#/components/schemas/iso8601DateTimeUTC'
        localProcessesList:
          type: array
          items:
            type: string
        memberAssets:
            type: array
            items:
              $ref: '#/components/schemas/idNamePair'
        occurred:
          type: integer
        port:
          type: integer
        protocolType:
          $ref: '#/components/schemas/protocol'
        uncoveredEntities:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationEntity'
    groupSimulateSegmentationReport:
      type: object
      properties:
        from: 
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/groupSimulateSegmentationItem'
        ruleStates:
          type: array
          items:
            $ref: '#/components/schemas/ruleState'
        to:
          type: string
        trafficType:
          $ref: '#/components/schemas/trafficType'
    groupSimulateSegmentationReportBody:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/epochMillis'
        ruleStates:
          type: array
          items:
            $ref: '#/components/schemas/ruleState'
        to:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          $ref: '#/components/schemas/trafficType'
    groupSimulateSegmentationReportRecord:
      type: array
      items:
        $ref: '#/components/schemas/groupSimulateSegmentationItem'
    groupSimulateSegmentationState:
      type: object
      properties:
        generationState:
          type: string
        hasReport:
          type: boolean
    groupsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
        count:
          type: integer
    groupsOrUsersList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
    groupsStatistics:
      type: object
      properties:
        groupStatistics:
          type: object
          properties:
            adGroupsCount:
              type: integer
            customGroupsCount:
              type: integer
            protectionPoliciesCount:
              type: integer
      x-examples:
        example-1:
          groupStatistics:
            adGroupsCount: 106
            customGroupsCount: 1
            protectionPoliciesCount: 2
    healthIssue:
      type: object
      properties:
        issueCode:
          type: integer
        details:
          type: string
    healthStateObject:
      type: object
      properties:
        healthState:
          $ref: '#/components/schemas/healthState'
    healthState:
      type: object
      properties:
        healthStatus:
          description: |
            * '0' - Unspecified
            * '1' - Healthy
            * '2' - Error
            * '3' - Warning
            * '4' - N/A
            * '5' - Retrying
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
        healthIssuesList:
          type: array
          items:
            $ref: '#/components/schemas/healthIssue'
    historyRule:
      type: object
      properties:
        id:
          type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        description:
          type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        localEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        localProcessesList:
          type: array
          items:
            type: string
        createdBy:
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/idNamePair'
            enforcementSource:
              $ref: '#/components/schemas/enforcementSource'
    identityProtectionState:
      description: |
        Possible asset status:
          * '0' - Unspecified
          * '1' - Unsegmented
          * '2' - Unspecified
          * '3' - Segmented
          * '4' - Unsegmented
          * '5' - In learning
          * '6' - Forced Unprotected
          * '7' - Forced Removing Protection
          * '8' - Protected Due To Policy
          * '9' - Applying Protection Due To Policy
          * '10' - In learning Due To Policy
          * '11' - Learning Done
          * '12' - In learning Due To Policy Done
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
    identityReactivePolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        dstAssetId:
          type: string
        dstEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        excludedDstAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        extraIdentityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
        fallbackToSingleLoggedOnUser:
          type: boolean
        id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        identityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
        innerId:
          type: string
        mfaMethodsList:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcAssetIdsList:
          type: array
          items:
            type: string
        srcAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcUserIdsList:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        state:
          description: |
            * '1' - Enabled
            * '2' Disabled
          type: integer
          format: int32
          enum:
            - 1
            - 2
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
    identityReactivePolicyBody:
      type: object
      properties:
        description:
          type: string
        dstAssetId:
          type: string
        excludedDstAssetIdsList:
          type: array
          items:
            type: string
        excludedSrcAssetIdsList:
          type: array
          items:
            type: string
        extraIdentityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
        fallbackToSingleLoggedOnUser:
          type: boolean
        identityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
        mfaMethodsList:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcAssetIdsList:
          type: array
          items:
            type: string
        srcUserIdsList:
          type: array
          items:
            type: string
        state:
          type: integer
          format: int32
          enum:
            - 1
            - 2
      required:
        - dstAssetId
        - fallbackToSingleLoggedOnUser
        - identityProtectionCategoryList
        - mfaMethodsList
        - overrideBuiltins
        - ruleDuration
        - srcAssetIdsList
        - srcUserIdsList
        - state
    identityReactivePolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/identityReactivePolicy'
    identityReactivePolicyList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/identityReactivePolicy'
        count:
          type: integer
    identityReactivePolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/identityReactivePolicy'
    identityRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        assetId:
          type: string
        assetInfo:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          type: object
          properties:
            createdBy:
              $ref: '#/components/schemas/idNamePair'
            email:
              type: string
            enforcementSource:
              $ref: '#/components/schemas/enforcementSource'
            userRole:
              $ref: '#/components/schemas/userRole'
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        excludedAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        identityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        ruleclass:
          type: integer
          format: int32
        state:
          type: integer
          format: int32
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          type: object
          properties:
            updatedBy:
              $ref: '#/components/schemas/idNamePair'
            email:
              type: string
            enforcementSource:
              $ref: '#/components/schemas/enforcementSource'
            userRole:
              $ref: '#/components/schemas/userRole'
        userIdsList:
          type: array
          items:
            type: string
        userInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    identityRuleBody:
      type: object
      required:
        - action
        - assetId
        - identityProtectionCategoryList
        - state
        - userIdsList
      properties:
        action:
          type: integer
          format: int32
          enum:
            - 1
            - 2
          description: '1 - Allow, 2 - Block'
        assetId:
          type: string
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        expiresAt:
          type: integer
          format: int64
        identityProtectionCategoryList:
          type: array
          items:
            type: integer
            format: int32
            enum:
              - 1
              - 2
              - 3
              - 4
              - 5
            description: '1-Locally, 2-Network, 3-Batch, 4-Service, 5-RDP'
        state:
          type: integer
          format: int32
          enum:
            - 1
            - 2
          description: '1 - Enabled, 2 - Disabled'
        userIdsList:
          type: array
          items:
            type: string
    identityRuleItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/identityRule'
    identityRulesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/identityRule'
    idNamePair:
      type: object
      properties:
        id:
          description: EntityId
          type: string
        name:
          description: Entity Name
          type: string
    idNamePairList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    inactiveAssetsConfig:
      type: object
      required:
        - lastActiveDurationInMonths
      properties:
        lastActiveDurationInMonths:
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
    inactiveAssetsConfigBody:
      type: object
      properties:
        lastActiveDurationInMonths:
          type: integer
          format: int32
          enum:
            - 0
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
    inactiveReason:
      description: |
        * '1' - Duplicated in asset repository
        * '2' - Manually set as inactive
        * '3' - None
        * '4' - Disabled in asset repository
        * '5' - Inactive in asset repository
        * '6' - Deleted in asset repository
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
    interfaceUuidsList:
      type: array
      items:
        type: string
        format: uuid or string
      description: |
        one of the following: 
        * "rpcAnyInterface" for any interface 
        * List of interface uuids for explicit interfaces
    ipSecOpt:
      description: |
        * For allow rule only.
        * '1' - Off
        * '2' - Null encapsulation connections
        * '3' - Authenticated and integrity-protected connections
        * '4' - Encrypted connections and dynamically negotiate encryption (inbound rule only)
        * '5' - Encrypted connections
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
    ipSubnet:
      type: string
      example: 192.168.1.0/24
      pattern: '[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}/[0-9]{1,3}'
    iso8601DateTimeUTC:
      description: ISO 8601 Date Time in UTC
      type: string
      example: 'YYYY-HH-DDTHH:MM:SSSZ'
    licensesConfig:
      type: object
      properties:
        licenseState:
          type: object
          properties:
            configInfo:
              type: object
              properties:
                activitiesRetentionDays:
                  type: integer
                clientsLimit:
                  type: integer
                endTime:
                  $ref: '#/components/schemas/epochMillis'
                licenseMode:
                  description: '1-On, 2-Off, 3-Trial, 4-Trial_NoLimits, 5-On_WithLimits'
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                limit:
                  type: integer
                otsLimit:
                  type: integer
                serversLimit:
                  type: integer
                startTime:
                  $ref: '#/components/schemas/epochMillis'
            counts:
              type: object
              properties:
                totalClientUsed:
                  type: integer
                totalOtsUsed:
                  type: integer
                totalServerUsed:
                  type: integer
    linuxBody:
      type: object
      properties:
        displayName:
          type: string
          example: linuxserver
        fqdn:
          type: string
          example: linuxserver.domain.local
      required:
        - displayName
        - fqdn
    linuxResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
    linuxScriptAvailable:
      type: object
      properties:
        userScriptAvailable:
          type: boolean
    listeningAddress:
      type: object
      properties:
        ipAddress:
          type: string
        tcpPorts:
          type: string
        udpPorts:
          type: string
    listeningPort:
      type: object
      properties:
        processName:
          type: string
        processId:
          type: integer
        username:
          type: string
        listeningAddressList:
          type: array
          items:
            $ref: '#/components/schemas/listeningAddress'
    listeningPortsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/listeningPort'
    loginBody:
      type: object
      properties:
        email:
          type: string
        otp:
          type: string
    loginResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/user'
        token:
          type: string
    logonActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/logonActivity'
        scrollCursor:
          type: string
    logonActivity:
      type: object
      properties:
        src:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            ip:
              type: string
            port:
              type: integer
        dst:
          type: object
          properties:
            assetId:
              type: string
            assetProtectionState:
              type: integer
            assetSrc:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
        eventType:
          type: integer
        logonType:
          type: integer
        processName:
          type: string
        processId:
          type: string
        authenticationPackageName:
          type: string
        logonProvider:
          type: string
        subjectUserName:
          type: string
        subjectUserSid:
          type: string
        targetUserName:
          type: string
        targetUserSid:
          type: string
        targetLogonId:
          type: integer
          format: int64
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        recordId:
          type: integer
          format: int64
        impersonationLevel:
          type: integer
    maintenanceWindow:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/idNamePair'
        id:
          type: string
        isDefault:
          type: boolean
        name:
          type: string
        startTime:
          type: integer
          description: '0-24 in UTC. 1 would be 01:00-02:00UTC'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        weekday:
          type: integer
          description: 'Sunday is 1, Saturday is 7'
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
    maintenanceWindowBody:
      type: object
      properties:
        isDefault:
          type: boolean
        name:
          type: string
        startTime:
          type: integer
          description: '0-24 in UTC. 1 would be 01:00-02:00UTC'
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
        weekday:
          type: integer
          description: 'Sunday is 1, Saturday is 7'
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
      required:
        - isDefault
        - name
        - startTime
        - weekday
    maintenanceWindowItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/maintenanceWindow'
    maintenanceWindowItems:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/maintenanceWindow'
    maintenanceWindowList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/maintenanceWindow'
    manageableOSType:
      description: |
        Possible osType:
          * `1' - Windows
          * `2' - Linux
          * `3' - Mac
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    managedAsset:
      type: object
      properties:
        entity:
          type: object
          anyOf:
            - $ref: '#/components/schemas/asset'
            - $ref: '#/components/schemas/group'
        entityId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    managedAssetsBody:
      type: object
      properties:
        entityIds:
          description: managed asset ids
          type: array
          items:
            type: string
            pattern: '^[ag]:[acdjlngt]:[a-zA-Z0-9]{8}$'
          example:
            - 'g:c:ab124as2'
            - 'a:a:ab124as2'
        permission:
          type: integer
          format: int32
    managedAssetsUpdateBody:
      type: object
      properties:
        managedEntityId:
          description: managed asset id
          type: string
          pattern: '^[ag]:[a-z]:[a-zA-Z0-9]{8}$'
          example:
            - g:c:ab124as2
            - a:a:ab124as2
        permission:
          type: integer
          format: int32
      required:
        - managedEntityId
        - permissions
    managedAssetsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/managedAsset'
    manager:
      type: object
      properties:
        manager:
          type: object
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        managerId:
          type: string
        permission:
          type: integer
          format: int32
        relation:
          type: integer
          format: int32
    managersList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/manager'
    mfaMethods:
      description: |
        * '1' - SMS
        * '2' - Email
        * '3' - Browser
        * '4' - Duo
        * '5' - MicrosoftAuthenticator'
        * '6' - No MFA
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
    nextBatch:
      type: object
      properties:
        nextBatchTime:
          type: integer
          format: int64
    nonOtAssetType:
      description: |
        Possible asset status:
          * `1' - Client
          * `2' - Server
      type: integer
      format: int32
      enum:
        - 1
        - 2
    orderedReactivePolicies:
      type: array
      items:
        $ref: '#/components/schemas/reactivePolicy'
    otAssetBody:
      type: object
      properties:
        ipv4:
          type: string
          format: ipv4
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
        fqdn:
          type: string
        switchId:
          type: string
        interfaceName:
          type: string
      required:
        - ipv4
        - type
        - displayName
        - fqdn
      title: otAssetBody
      x-examples:
        example-1:
          value:
            ipv4: 192.168.0.1
            type: 4
            displayName: string
    otAssetEditBody:
      type: object
      properties:
        type:
          type: number
          enum:
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
        displayName:
          type: string
        fqdn:
          type: string
        switchId:
          type: string
        interfaceName:
          type: string
      required:
        - type
        - displayName
        - fqdn
      title: otAssetEditBody
    otRuleBody:
      type: object
      properties:
        description:
          type: string
        excludedLocalIdsList:
          type: array
          items:
            type: string
        localEntityId:
          type: string
        protocolsList:
          $ref: '#/components/schemas/switchProtocolsList'
        remoteEntitiesList:
          type: array
          items:
            type: string
        action:
          description: |
            * '1' - Allow
            * '2' - Block
          type: integer
          format: int32
          enum:
            - 1
            - 2
        state:
          $ref: '#/components/schemas/ruleState'
      required:
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
        - action
    portsList:
      type: array
      items:
        type: object
        properties:
          ports:
            type: string
          protocolType:
            $ref: '#/components/schemas/protocol'
    portSummary:
      type: object
      properties:
        count:
          type: integer
        port:
          type: object
          properties:
            protocol:
              $ref: '#/components/schemas/protocol'
            port:
              type: integer
    privateIpv4NetworksList:
      description: Collection of IPv4 subnets that are internal
      type: array
      items:
        type: string
        example: 192.168.0.0/24
    privateIpv6NetworksList:
      description: Collection of IPv6 subnets that are internal
      type: array
      items:
        type: string
        example: fd12:3456:789a:1::/64
    PrivilegedPorts:
      type: string
      x-example: '1,3,4,5-8'
    processSummary:
      type: object
      properties:
        count:
          type: integer
        name:
          type: string
    profileResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/profileUser'
        envConfig:
          $ref: '#/components/schemas/envConfig'
        features:
          type: array
          items:
            type: string
    profileUser:
      type: object
      properties:
        id:
          type: string
          example: 1f352ed0-86f1-454f-90a5-592c197c8000
        fullName:
          type: string
          example: Zero Networks
        activeEnvironmentId:
          type: string
          example: 17624a57-729e-4805-9703-67947d3bd888
        activeEnvironmentName:
          type: string
          example: office-windows
        role:
          $ref: '#/components/schemas/role'
        platformType:
          type: integer
          example: 5
        email:
          type: string
          example: team@zeronetworks.com
        tenantId:
          type: string
          example: 3d3b45ba-4b3c-4746-b4f5-be5d83abe001
        phone:
          type: string
          example: '+14242997613'
        type:
          $ref: '#/components/schemas/audienceType'
        isExperimental:
          type: boolean
          example: true
        isInternalUser:
          type: boolean
          example: false
    protectionPoliciesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/protectionPolicy'
    protectionPolicy:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
        existingMembersLearningDays:
          type: integer
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        groupId:
          type: string
        groupInfo:
          type: object
          properties:
            domain:
              type: string
            guid:
              type: string
            hasIdentityProtectionPolicy:
              type: boolean
            hasNetworkProtectionPolicy:
              type: boolean
            id:
              type: string
            name:
              type: string
        id:
          type: string
        initialProtectAt:
          $ref: '#/components/schemas/epochMillis'
        newMembersLearningDays:
          type: integer
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        policyType:
          type: integer
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
    protectionPolicyBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
        existingMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        groupId:
          type: string
        maintenanceWindowId:
          type: string
        newMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
      required:
        - groupId
        - existingMembersLearningDays
        - newMembersLearningDays
    protectionPolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/protectionPolicy'
    protectionPolicyUpdateBody:
      type: object
      properties:
        description:
          type: string
        enabled:
          type: boolean
        enforceBlocks:
          type: boolean
          default: false
        existingMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
        id:
          type: string
        newMembersLearningDays:
          type: integer
          default: 30
          enum:
            - -1
            - 0
            - 14
            - 30
            - 60
            - 90
      required:
        - existingMembersLearningDays
        - newMembersLearningDays
        - enforceBlocks
    protectionState:
      description: |
        * '0' - Unspecified
        * '1' - Unsegmented
        * '2' - Unsegmenting
        * '3' - Segmented
        * '4' - Segmenting
        * '5' - Learning until
        * '6' - forced_unprotected
        * '7' - Unsegmenting' - Due to Policy
        * '8' - Segmented' - Due to Policy
        * '9' - Segmenting- Due to Policy
        * '10' - Learning until' - Due to Policy
        * '11' - Learning done
        * '12' - Learning done- Due to Policy
        * '13' - APPLYING_QUEUE_WITH_BLOCKS
        * '14' - APPLYING_QUEUE_WITH_BLOCKS_DUE_TO_POLICY
        * '15' - QUEUED_WITH_BLOCKS
        * '16' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY
        * '17' - QUEUED_WITH_BLOCKS_DONE
        * '18' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY_DONE
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
    protocol:
      description: |
        * '0' - HOPOPT
        * '1' - ICMP
        * '2' - IGMP
        * '3' - GGP
        * '4' - IPv4
        * '5' - ST
        * '6' - TCP
        * '7' - CBT
        * '8' - EGP
        * '9' - IGP
        * '10' - BBN-RCC-MON
        * '11' - NVP-II
        * '12' - PUP
        * '13' - ARGUS
        * '14' - EMCON
        * '15' - XNET
        * '16' - CHAOS
        * '17' - UDP
        * '18' - MUX
        * '19' - DCN-MEAS
        * '20' - HMP
        * '21' - PRM
        * '22' - XNS-IDP
        * '23' - TRUNK-1
        * '24' - TRUNK-2
        * '25' - LEAF-1
        * '26' - LEAF-2
        * '27' - RDP
        * '28' - IRTP
        * '29' - ISO-TP4
        * '30' - NETBLT
        * '31' - MFE-NSP
        * '32' - MERIT-INP
        * '33' - DCCP
        * '34' - 3PC
        * '35' - IDPR
        * '36' - XTP
        * '37' - DDP
        * '38' - IDPR-CMTP
        * '39' - TP++
        * '40' - IL
        * '41' - Embedded
        * '42' - SDRP
        * '43' - IPv6RoutingHeader
        * '44' - IPv6FragmentHeader
        * '45' - IDRP
        * '46' - RSVP
        * '47' - GRE
        * '48' - DSR
        * '49' - BNA
        * '50' - ESP
        * '51' - AH
        * '52' - I-NLSP
        * '53' - SwIPe
        * '54' - NARP
        * '55' - MOBILE
        * '56' - TLSP
        * '57' - SKIP
        * '58' - ICMPv6
        * '59' - IPv6NonExtHeader
        * '60' - IPv6DestinationOptions
        * '61' - Host-interanl
        * '62' - CFTP
        * '63' - local-network
        * '64' - SAT-EXPAK
        * '65' - KRYPTOLAN
        * '66' - RVD
        * '67' - IPPC
        * '68' - distributed-file-system
        * '69' - SAT-MON
        * '70' - VISA
        * '71' - IPCU
        * '72' - CPNX
        * '73' - CPHB
        * '74' - WSN
        * '75' - PVP
        * '76' - BR-SAT-MON
        * '77' - ND
        * '78' - WB-MON
        * '79' - WB-EXPAK
        * '80' - ISO-IP
        * '81' - VMTP
        * '82' - SECURE-VMTP
        * '83' - VINES
        * '84' - IPTM
        * '85' - NSFNET-IGP
        * '86' - DGP
        * '87' - TCF
        * '88' - EIGRP
        * '89' - OSPF
        * '90' - Sprite-RPC
        * '91' - LARP
        * '92' - MTP
        * '93' - AX.25
        * '94' - OS
        * '95' - MICP
        * '96' - SCC-SP
        * '97' - ETHERIP
        * '98' - ENCAP
        * '99' - private-encryption
        * '100' - GMTP
        * '101' - IFMP
        * '102' - PNNI
        * '103' - PIM
        * '104' - ARIS
        * '105' - SCPS
        * '106' - QNX
        * '107' - A/N
        * '108' - IPComp
        * '109' - SNP
        * '110' - Compaq-Peer
        * '111' - IPX-in-IP
        * '112' - VRRP
        * '113' - PGM
        * '114' - 0-hop
        * '115' - L2TP
        * '116' - DDX
        * '117' - IATP
        * '118' - STP
        * '119' - SRP
        * '120' - UTI
        * '121' - SMP
        * '122' - SM
        * '123' - PTP
        * '124' - IS-IS-over-IPv4
        * '125' - FIRE
        * '126' - CRTP
        * '127' - CRUDP
        * '128' - SSCOPMCE
        * '129' - IPLT
        * '130' - SPS
        * '131' - PIPE
        * '132' - SCTP
        * '133' - FC
        * '134' - RSVP-E2E-IGNORE
        * '135' - Mobility-Header
        * '136' - UDPLite
        * '137' - MPLS-in-IP
        * '138' - manet
        * '139' - HIP
        * '140' - Shim6
        * '141' - WESP
        * '142' - ROHC
        * '143' - Ethernet
        * '144' - 144 (custom)
        * '145' - 145 (custom)
        * '146' - 146 (custom)
        * '147' - 147 (custom)
        * '148' - 148 (custom)
        * '149' - 149 (custom)
        * '150' - 150 (custom)
        * '151' - 151 (custom)
        * '152' - 152 (custom)
        * '153' - 153 (custom)
        * '154' - 154 (custom)
        * '155' - 155 (custom)
        * '156' - 156 (custom)
        * '157' - 157 (custom)
        * '158' - 158 (custom)
        * '159' - 159 (custom)
        * '160' - 160 (custom)
        * '161' - 161 (custom)
        * '162' - 162 (custom)
        * '163' - 163 (custom)
        * '164' - 164 (custom)
        * '165' - 165 (custom)
        * '166' - 166 (custom)
        * '167' - 167 (custom)
        * '168' - 168 (custom)
        * '169' - 169 (custom)
        * '170' - 170 (custom)
        * '171' - 171 (custom)
        * '172' - 172 (custom)
        * '173' - 173 (custom)
        * '174' - 174 (custom)
        * '175' - 175 (custom)
        * '176' - 176 (custom)
        * '177' - 177 (custom)
        * '178' - 178 (custom)
        * '179' - 179 (custom)
        * '180' - 180 (custom)
        * '181' - 181 (custom)
        * '182' - 182 (custom)
        * '183' - 183 (custom)
        * '184' - 184 (custom)
        * '185' - 185 (custom)
        * '186' - 186 (custom)
        * '187' - 187 (custom)
        * '188' - 188 (custom)
        * '189' - 189 (custom)
        * '190' - 190 (custom)
        * '191' - 191 (custom)
        * '192' - 192 (custom)
        * '193' - 193 (custom)
        * '194' - 194 (custom)
        * '195' - 195 (custom)
        * '196' - 196 (custom)
        * '197' - 197 (custom)
        * '198' - 198 (custom)
        * '199' - 199 (custom)
        * '200' - 200 (custom)
        * '201' - 201 (custom)
        * '202' - 202 (custom)
        * '203' - 203 (custom)
        * '204' - 204 (custom)
        * '205' - 205 (custom)
        * '206' - 206 (custom)
        * '207' - 207 (custom)
        * '208' - 208 (custom)
        * '209' - 209 (custom)
        * '210' - 210 (custom)
        * '211' - 211 (custom)
        * '212' - 212 (custom)
        * '213' - 213 (custom)
        * '214' - 214 (custom)
        * '215' - 215 (custom)
        * '216' - 216 (custom)
        * '217' - 217 (custom)
        * '218' - 218 (custom)
        * '219' - 219 (custom)
        * '220' - 220 (custom)
        * '221' - 221 (custom)
        * '222' - 222 (custom)
        * '223' - 223 (custom)
        * '224' - 224 (custom)
        * '225' - 225 (custom)
        * '226' - 226 (custom)
        * '227' - 227 (custom)
        * '228' - 228 (custom)
        * '229' - 229 (custom)
        * '230' - 230 (custom)
        * '231' - 231 (custom)
        * '232' - 232 (custom)
        * '233' - 233 (custom)
        * '234' - 234 (custom)
        * '235' - 235 (custom)
        * '236' - 236 (custom)
        * '237' - 237 (custom)
        * '238' - 238 (custom)
        * '239' - 239 (custom)
        * '240' - 240 (custom)
        * '241' - 241 (custom)
        * '242' - 242 (custom)
        * '243' - 243 (custom)
        * '244' - 244 (custom)
        * '245' - 245 (custom)
        * '246' - 246 (custom)
        * '247' - 247 (custom)
        * '248' - 248 (custom)
        * '249' - 249 (custom)
        * '250' - 250 (custom)
        * '251' - 251 (custom)
        * '252' - 252 (custom)
        * '253' - 253 (custom)
        * '254' - 254 (custom)
        * '255' - Raw
        * '256' - Any
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
        - 142
        - 143
        - 144
        - 145
        - 146
        - 147
        - 148
        - 149
        - 150
        - 151
        - 152
        - 153
        - 154
        - 155
        - 156
        - 157
        - 158
        - 159
        - 160
        - 161
        - 162
        - 163
        - 164
        - 165
        - 166
        - 167
        - 168
        - 169
        - 170
        - 171
        - 172
        - 173
        - 174
        - 175
        - 176
        - 177
        - 178
        - 179
        - 180
        - 181
        - 182
        - 183
        - 184
        - 185
        - 186
        - 187
        - 188
        - 189
        - 190
        - 191
        - 192
        - 193
        - 194
        - 195
        - 196
        - 197
        - 198
        - 199
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 209
        - 210
        - 211
        - 212
        - 213
        - 214
        - 215
        - 216
        - 217
        - 218
        - 219
        - 220
        - 221
        - 222
        - 223
        - 224
        - 225
        - 226
        - 227
        - 228
        - 229
        - 230
        - 231
        - 232
        - 233
        - 234
        - 235
        - 236
        - 237
        - 238
        - 239
        - 240
        - 241
        - 242
        - 243
        - 244
        - 245
        - 246
        - 247
        - 248
        - 249
        - 250
        - 251
        - 252
        - 253
        - 254
        - 255
        - 256
    queueAssetBody:
      type: object
      properties:
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - queueDays
    queueAssetExtendBody:
      type: object
      properties:
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - extendByDays
    queueAssetIdentityBody:
      type: object
      properties:
        queueDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
      required:
        - queueDays
    queueAssetIdentityExtendBody:
      type: object
      properties:
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - extendByDays
    queueExtendBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    queueExtendIdentityBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    queueExtendRPCBody:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        extendByDays:
          description: number of days
          type: integer
          enum:
            - 14
            - 30
            - 60
            - 90
        relearnReason:
          type: string
      required:
        - items
        - extendByDays
    reactivePoliciesStatistics:
      type: object
      properties:
        reactivePoliciesStatistics:
          type: object
          properties:
            totalCount:
              type: integer
    reactivePolicy:
      type: object
      properties:
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          type: string
        createdByName:
          type: string
          example: User Name
        description:
          type: string
        dstEntityInfo:
          $ref: '#/components/schemas/idNamePair'
        dstPort:
          type: string
          example: '3389'
        dstProcessNames:
          type: array
          items:
            type: string
            example: 'c:\test.exe'
        enforcementSource:
          $ref: '#/components/schemas/enforcementSource'
        excludedSrcEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          description: '6=TCP, 17=UDP'
          type: integer
          format: int32
          enum:
            - 6
            - 17
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        srcProcessNames:
          type: array
          items:
            type: string
            example: system
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        state:
          description: |
            * '1' - Enabled
            * '2' Disabled
          type: integer
          format: int32
          enum:
            - 1
            - 2
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          type: string
        updatedByName:
          type: string
          example: User Name
    reactivePolicyDistribution:
      type: object
      properties:
        mfaDistribution:
          type: array
          items:
            type: object
            properties:
              timestamp:
                $ref: '#/components/schemas/epochMillis'
              approved:
                type: integer
              rejected:
                type: integer
      x-examples:
        example-1:
          mfaDistribution:
            - timestamp: 1654905600000
              approved: 0
              rejected: 0
            - timestamp: 1654992000000
              approved: 5
              rejected: 0
            - timestamp: 1655078400000
              approved: 7
              rejected: 0
            - timestamp: 1655164800000
              approved: 13
              rejected: 0
            - timestamp: 1655251200000
              approved: 7
              rejected: 0
            - timestamp: 1655337600000
              approved: 2
              rejected: 0
            - timestamp: 1655424000000
              approved: 6
              rejected: 0
            - timestamp: 1655510400000
              approved: 0
              rejected: 0
            - timestamp: 1655596800000
              approved: 1
              rejected: 0
            - timestamp: 1655683200000
              approved: 7
              rejected: 0
            - timestamp: 1655769600000
              approved: 3
              rejected: 0
            - timestamp: 1655856000000
              approved: 7
              rejected: 0
            - timestamp: 1655942400000
              approved: 4
              rejected: 0
            - timestamp: 1656028800000
              approved: 4
              rejected: 0
            - timestamp: 1656115200000
              approved: 0
              rejected: 0
            - timestamp: 1656201600000
              approved: 2
              rejected: 0
            - timestamp: 1656288000000
              approved: 4
              rejected: 0
            - timestamp: 1656374400000
              approved: 8
              rejected: 0
            - timestamp: 1656460800000
              approved: 7
              rejected: 0
            - timestamp: 1656547200000
              approved: 9
              rejected: 0
            - timestamp: 1656633600000
              approved: 3
              rejected: 0
            - timestamp: 1656720000000
              approved: 0
              rejected: 0
            - timestamp: 1656806400000
              approved: 4
              rejected: 1
            - timestamp: 1656892800000
              approved: 2
              rejected: 0
            - timestamp: 1656979200000
              approved: 3
              rejected: 0
            - timestamp: 1657065600000
              approved: 16
              rejected: 2
            - timestamp: 1657152000000
              approved: 17
              rejected: 0
            - timestamp: 1657238400000
              approved: 13
              rejected: 0
            - timestamp: 1657324800000
              approved: 0
              rejected: 0
            - timestamp: 1657411200000
              approved: 3
              rejected: 0
            - timestamp: 1657497600000
              approved: 4
              rejected: 0
    reactivePolicyInboundBody:
      type: object
      properties:
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
      required:
        - dstEntityInfo
        - dstPort
        - dstProcessNames
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - state
        - additionalPortsList
    reactivePolicyItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/reactivePolicy'
    reactivePolicyMethods:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
    reactivePolicyOutboundBody:
      type: object
      properties:
        description:
          type: string
        dstEntityInfo:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        dstPort:
          type: string
        dstProcessNames:
          type: array
          items:
            type: string
        excludedSrcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        excludedSrcProcesses:
          type: array
          items:
            type: string
        fallbackToLoggedOnUser:
          type: boolean
        mfaMethods:
          type: array
          items:
            $ref: '#/components/schemas/mfaMethods'
        overrideBuiltins:
          type: boolean
        protocolType:
          type: integer
        restrictLoginToOriginatingUser:
          type: boolean
        ruleDuration:
          $ref: '#/components/schemas/ruleDuration'
        srcEntityInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        srcProcessNames:
          type: array
          items:
            type: string
        srcUserInfos:
          type: array
          items:
            required:
              - id
            type: object
            properties:
              id:
                type: string
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
        additionalPortsList:
          $ref: '#/components/schemas/portsList'
      required:
        - dstEntityInfo
        - dstPort
        - fallbackToLoggedOnUser
        - mfaMethods
        - overrideBuiltins
        - protocolType
        - ruleDuration
        - srcEntityInfos
        - srcProcessNames
        - srcUserInfos
        - state
        - additionalPortsList
    reactivePolicyResponse:
      type: object
      properties:
        items:
          $ref: '#/components/schemas/reactivePolicy'
    requestedFilter:
      type: object
      properties:
        id:
          type: string
        excludeValues:
          type: array
          items:
            type: string
        includeValues:
          type: array
          items:
            type: string
      required:
        - id
      title: requestedFilter
    role:
      description: |
        dictionary:
          * `0` ROLE_UNSPECIFIED
          * `1` ROLE_ADMIN
          * `2` ROLE_VIEWER
          * `3` ROLE_REGULAR
          * `4` ROLE_MACHINE_FULL_ACCESS
          * `5` ROLE_MACHINE_READ_ONLY
          * `6` ROLE_SELF_SERVICE
          * `7` ROLE_CLOUD_CONNECTOR_PROVISIONING
          * `8` ROLE_JAMF_ASSET
          * `9` ROLE_ASSET_MANAGER
      type: integer
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
    roleBody:
      type: object
      properties:
        role:
          description: '1 - Viewer, 2 - Admin'
          type: integer
    roleCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rolesList:
      type: object
      properties:
        items:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/group'
              - $ref: '#/components/schemas/user'
        scrollCursor:
          type: string
    rpcActivitiesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcActivity'
        scrollCursor:
          type: string
    rpcActivity:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/epochMillis'
        trafficType:
          type: integer
        protocolType:
          type: integer
        userName:
          type: string
        interfaceUuid:
          type: string
        opNumber:
          type: integer
        status:
          type: integer
        srcAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            ip:
              type: string
        srcPort:
          type: integer
        dstAsset:
          type: object
          properties:
            assetId:
              type: string
            assetSrc:
              type: integer
            assetProtectionState:
              type: integer
            assetType:
              $ref: '#/components/schemas/assetType'
            fqdn:
              type: string
            ip:
              type: string
        dstEndpoint:
          type: object
          properties:
            port:
              type: integer
        dstEventRecordId:
          type: integer
          format: int64
        dstProcessId:
          type: integer
        dstProcessNames:
          type: string
        dstProcessPath:
          type: string
    rpcFilter:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        placeholder:
          type: string
        disableExcludeSupport:
          type: boolean
        enableBulkSelection:
          type: boolean
        allowedCharactersRegex:
          type: string
        selections:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
    rpcFiltersList:
      type: object
      items:
        $ref: '#/components/schemas/rpcFilter'
    rpcProtocolsList:
      type: array
      items:
        type: integer
      description: |
        * NULL - Any
        * '1' - Rules RPC over SMB
        * '2' - Rules RPC over TCP
    rpcRule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        excludedAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
        interfaceUuidsList:
          $ref: '#/components/schemas/interfaceUuidsList'
        localAssetId:
          type: string
        localAssetInfo:
          $ref: '#/components/schemas/idNamePair'
        opNumbersList:
          type: array
          items:
            type: integer
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        protocolsList:
          $ref: '#/components/schemas/rpcProtocolsList'
        remoteAssetIdsList:
          type: array
          items:
            type: string
        remoteAssetInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        ruleClass:
          $ref: '#/components/schemas/ruleClass'
        state:
          $ref: '#/components/schemas/ruleState'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
        userIdsList:
          type: array
          items:
            type: string
        userInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
    rpcRuleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        description:
          type: string
        excludedAssetIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        interfaceUuidsList:
          $ref: '#/components/schemas/interfaceUuidsList'
        localAssetId:
          type: string
        opNumbersList:
          type: array
          items:
            type: integer
        protocolsList:
          $ref: '#/components/schemas/rpcProtocolsList'
        remoteAssetIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        userIdsList:
          type: array
          items:
            type: string
      required:
        - action
        - description
        - excludedAssetIdsList
        - interfaceUuidsList
        - localAssetId
        - opNumbersList
        - protocolsList
        - remoteAssetIdsList
        - state
        - userIdsList
    rpcRuleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rpcRule'
    rpcRulesList:
      type: object
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/rpcRule'
    rule:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        activitiesCount:
          type: integer
          format: int32
        approvedAt:
          $ref: '#/components/schemas/epochMillis'
        approvedBy:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        createdBy:
          $ref: '#/components/schemas/createdBy'
        description:
          type: string
        direction:
          $ref: '#/components/schemas/ruleDirection'
        excludedEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        id:
          type: string
          format: uuid
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        localEntityId:
          type: string
        localEntityInfo:
          $ref: '#/components/schemas/asset'
        localEntitySuccessor:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        localProcessesList:
          type: array
          items:
            type: string
        parentId:
          type: string
        parentType:
          type: integer
          format: int32
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        remoteEntityInfos:
          type: array
          items:
            $ref: '#/components/schemas/idNamePair'
        ruleclass:
          $ref: '#/components/schemas/ruleClass'
        srcUserInfos:
          type: array
          items:
            $ref: '#/components/schemas/groupsOrUsersList'
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          $ref: '#/components/schemas/ruleState'
        updatedAt:
          $ref: '#/components/schemas/epochMillis'
        updatedBy:
          $ref: '#/components/schemas/idNamePair'
    ruleAction:
      description: |
        * '1' - Allow
        * '2' - Block
      type: integer
      format: int32
      enum:
        - 1
        - 2
    ruleBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/actionType'
        description:
          type: string
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        state:
          $ref: '#/components/schemas/ruleState'
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
      required:
        - action
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleClass:
      description: |
        * '1' - Trivial
        * '2' - Permissive
        * '3' - Privileged
        * '4' - Critical
        * '5' - System
        * '6' - Preventative
        * '8' - Dangerous
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 8
    ruleDirection:
      description: |
        * '1' - Inbound
        * '2' - Outbound
        * '3' - Both
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    ruleDistribution:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/distribution'
    ruleDuration:
      description: |
        * '1' - Hour
        * '2' - Day
        * '3' - Week
        * '4' - Month
        * '5' - Never
        * '6' - 4 hours
        * '7' - 12 hours
        * '8' - 8 hours
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
    ruleFilter:
      type: object
      properties:
        id:
          type: string
        includeValues:
          type: array
          items:
            type: string
    ruleItem:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rule'
    ruleMatch:
      type: object
      properties:
        ruleId:
          description: Id of the Rule
          type: string
          format: uuid
          example: b4565b6b-d20f-407d-9075-e354da6ffc64
        updateId:
          type: number
    ruleResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/rule'
    ruleReviewApproveWithChanges:
      description: Mandatory object for rule review approve_with_changes / reject.
      type: object
      properties:
        review:
          $ref: '#/components/schemas/ruleReviewReason'
        ruleInfo:
          $ref: '#/components/schemas/ruleReviewBody'
      required:
        - review
        - ruleInfo
      x-examples:
        example-1:
          review:
            reason: 4
          ruleInfo:
            action: 1
            description: string
            direction: 1
            excludedLocalIdsList:
              - string
            expiresAt: 0
            localEntityId: string
            localProcessesList:
              - string
            portsList:
              - ports: string
              - protocolType: 0
            remoteEntityIdsList:
              - string
            state: 1
            updatedAt: 0
            updatedBy:
              id: string
              name: string
    ruleReviewBody:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ruleAction'
        description:
          type: string
        direction:
          $ref: '#/components/schemas/ruleDirection'
        excludedLocalIdsList:
          type: array
          items:
            type: string
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
        ipSecOpt:
          $ref: '#/components/schemas/ipSecOpt'
        localEntityId:
          type: string
        localProcessesList:
          type: array
          items:
            type: string
        portsList:
          $ref: '#/components/schemas/portsList'
        remoteEntityIdsList:
          type: array
          items:
            type: string
        srcUsersList:
          $ref: '#/components/schemas/srcUsersList'
        state:
          description: '1=Enabled, 2=Disabled'
          type: integer
          enum:
            - 1
            - 2
      required:
        - action
        - direction
        - expiresAt
        - localEntityId
        - localProcessesList
        - portsList
        - remoteEntityIdsList
        - state
    ruleReviewReason:
      description: |-
        Mandatory object for rule review approve_with_changes / reject.

        reason: {
            HUMAN_TRAFFIC_COVERED_BY_MFA = 1,
            TIGHTEN_RULE_SCOPE = 2,
            MISSING_PORT_OR_PROCESS = 3,
            AFFECTED_ENTITIES_CONTAINED_IN_AN_EXISTING_GROUP = 4,
            REDUNDANT_RULE = 5,
            TRAFFIC_SHOULD_BE_BLOCKED = 6,
            OTHER = 7
        }
      type: object
      properties:
        reason:
          type: integer
        details:
          description: 'Optional if reason != OTHER(7), mandatory if reason == OTHER(7)'
          type: string
      required:
        - reason
      x-examples:
        example-1:
          review:
            reason: 7
            details: 'reason == 7 means OTHER, so details field is mandatory'
        example-2:
          review:
            reason: 2
    rulesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/rule'
    ruleState:
      description: |
        * '1' - Enabled
        * '2' - Disabled
        * '4' - Pending Review
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 4
    ruleStatistics:
      type: object
      properties:
        aiStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        mfaStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        sspStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
        portalStatistics:
          $ref: '#/components/schemas/ruleStatisticsType'
    ruleStatisticsType:
      type: object
      properties:
        inboundAllowEnabledCount:
          type: integer
        inboundAllowDisabledCount:
          type: integer
        inboundBlockEnabledCount:
          type: integer
        inboundBlockDisabledCount:
          type: integer
        outboundAllowEnabledCount:
          type: integer
        outboundAllowDisabledCount:
          type: integer
        outboundBlockEnabledCount:
          type: integer
        outboundBlockDisabledCount:
          type: integer
    savedFilter:
      type: object
      properties:
        excludeValues:
          type: array
          items:
            type: string
        id:
          type: string
        includeValues:
          type: array
          items:
            type: string
      required:
        - id
    savedFilterBody:
      type: object
      properties:
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        name:
          type: string
        permission:
          $ref: '#/components/schemas/savedFilterPermission'
      required:
        - description
        - filters
        - name
        - permission
    savedFilterId:
      type: object
      properties:
        userFilterId:
          type: string
    savedFilterPermission:
      type: string
      description: |
        * 'private' - only the creator can see the filter
        * 'public' - all users can see the filter
    savedFilterObject:
      type: object
      properties:
        createdAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        createdById:
          type: string
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        id:
          type: string
        name:
          type: string
        permission:
          $ref: '#/components/schemas/savedFilterPermission'
        updatedAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
    savedFiltersList:
      type: object
      properties:
        private:
          type: array
          items:
            $ref: '#/components/schemas/savedFilterObject'
        public:
          type: array
          items:
            $ref: '#/components/schemas/savedFilterObject'
    savedFilterUpdateBody:
      type: object
      properties:
        description:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/savedFilter'
        name:
          type: string
      required:
        - description
        - filters
        - name
    searchAssetsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/asset'
        count:
          type: integer
        nextCursor:
          type: string
    searchGroupsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
        count:
          type: integer
        nextCursor:
          type: string
    searchUsersResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/user'
        count:
          type: integer
        nextCursor:
          type: string
    session:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/asset'
        clientPrivateIp:
          type: string
          format: ipv4
        clientVersion:
          type: string
        connectedSince:
          $ref: '#/components/schemas/epochMillis'
        connectionState:
          type: integer
        currentPublicIp:
          type: string
          format: ipv4
        id:
          type: string
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        lastLogon:
          $ref: '#/components/schemas/epochMillis'
        roleId:
          type: string
        server:
          $ref: '#/components/schemas/idNamePair'
        user:
          $ref: '#/components/schemas/idNamePair'
        connectivityStateAfterReboot:
          $ref: '#/components/schemas/connectivityStateAfterReboot'
        expiresAt:
          $ref: '#/components/schemas/epochMillis'
    sessionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/session'
    setAssetType:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/nonOtAssetType'
      required:
        - type
    setOSType:
      type: object
      properties:
        assetIds:
          type: array
          items:
            type: string
        osType:
          $ref: '#/components/schemas/manageableOSType'
      required:
        - assetIds
        - osType
    setOutboundRestriction:
      type: object
      properties:
        assetIds:
          type: array
          items:
            type: string
          maxItems: 100
        outboundRestriction:
          type: integer
          enum:
            - 1  # NO_RESTRICTION
            - 2  # RESTRICTED_INTERNAL
            - 3  # RESTRICTED_EXTERNAL
            - 4  # RESTRICTED_INTERNAL_EXTERNAL
      required:
        - assetIds
        - outboundRestriction
    settingsActivities:
      type: object
      properties:
        config:
          type: object
          properties:
            shouldFilterExternalTraffic:
              description: Disable/Enable external traffic collection
              type: boolean
    settingsActivitiesBody:
      type: object
      properties:
        shouldFilterExternalTraffic:
          description: Disable/Enable external traffic collection
          type: boolean
      required:
        - shouldFilterExternalTraffic
    settingsAdForest:
      type: object
      properties:
        activeDirectoryInfo:
          $ref: '#/components/schemas/settingsAdInfo'
        allowNtlmFallback:
          type: boolean
        automationGroups:
          $ref: '#/components/schemas/settingsProtectionAutomationResponse'
        forestId:
          type: string
        linuxAutomationGroups:
          $ref: '#/components/schemas/settingsLinuxAutomationResponse'
        secondaryDomains:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdSecondaryBody'
        usePrimaryLinuxUserForAllDomains:
          type: boolean
        usePrimaryUserForAllDomains:
          type: boolean
    settingsAdInfo:
      type: object
      properties:
        allowInstallLinuxPackages:
          type: boolean
        domainControllerFqdn:
          description: Domain Controller from AD Domain
          type: string
          example: dc.zeronetworks.com
        domainName:
          description: FQDN of the AD domain
          type: string
          example: zeronetworks.com
        useLdaps:
          description: Use LDAP or LDAPs
          type: boolean
        userFqdn:
          description: Service Account for Zero Networks
          type: string
          example: znremotemanagement
    settingsAdInfoBody:
      type: object
      properties:
        primaryDomainConfig:
          type: object
          properties:
            domainControllerFqdn:
              description: Domain Controller from AD Domain
              type: string
              example: dc.zeronetworks.com
            domainName:
              description: FQDN of the AD domain
              type: string
              example: zeronetworks.com
            password:
              type: string
              description: password for the service account
            useLdaps:
              description: Use LDAP or LDAPs
              type: boolean
            userFqdn:
              description: Service Account for Zero Networks
              type: string
              example: znremotemanagement
          required:
            - domainControllerFqdn
            - domainName
            - password
            - useLdaps
            - userFqdn
        usePrimaryUserForAllDomains:
          type: boolean
        allowNtlmFallback:
          type: boolean
      required:
        - primaryDomainConfig
        - usePrimaryUserForAllDomains
        - allowNtlmFallback
    settingsAdInfoResponse:
      type: object
      properties:
        forests:
          type: array
          items:
            $ref: '#/components/schemas/settingsAdForest'
    settingsAdLinuxAutomationGroupsBody:
      type: object
      properties:
        monitoredGroupId:
          type: string
      required:
        - monitoredGroupId
    settingsAdLinuxBody:
      type: object
      properties:
        adLinuxConfig:
          type: object
          properties:
            allowInstallPackages:
              type: boolean
            password:
              type: string
            privateKey:
              type: string
            username:
              type: string
          required:
            - allowInstallPackages
            - password
            - privateKey
            - username
        useForAllDomains:
          type: boolean
      required:
        - adLinuxConfig
    settingsAdSecondaryBody:
      type: object
      properties:
        secondaryDomainConfig:
          type: object
          properties:
            domainControllerFqdn:
              type: string
              example: dc.child.zeronetworks.com
            domainName:
              type: string
              example: child.zeronetworks.com
      required:
        - secondaryDomainConfig
    settingsAdSyncInfoResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/settingsAdSyncInfoResponseForestItem'
    settingsAdSyncInfoResponseDcItem:
      type: object
      properties:
        dcFqdn:
          type: string
        lastUpdateTime:
          $ref: '#/components/schemas/epochMillis'
        lastUsn:
          type: integer
          format: int32
    settingsAdSyncInfoResponseDomainItem:
      type: object
      properties:
        dcToSyncInfo:
          type: object
          properties:
            errorType:
              type: integer
            serverType:
              type: integer
            lastErrorMsg:
              type: string
          additionalProperties:
            $ref: '#/components/schemas/settingsAdSyncInfoResponseDcItem'
    settingsAdSyncInfoResponseForestItem:
      type: object
      properties:
        domainToSyncInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/settingsAdSyncInfoResponseDomainItem'
    settingsAdWindowsAutomationGroupsBody:
      type: object
      properties:
        monitoredGroupId:
          type: string
        protectedGroupId:
          type: string
    settingsAiRuleReview:
      type: object
      properties:
        ruleClassesList:
          type: array
          items:
            type: integer
        postponeProtection:
          type: boolean
      x-examples:
        example-1:
          ruleClassesList:
            - 1
            - 6
    settingsAnsible:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
    settingsAnsibleBody:
      type: object
      properties:
        clientId:
          description: OAuth Client Id
          type: string
        credentialsName:
          description: Name of the creds used to instruct Ansible to connect to linux machines
          type: string
        disableCertificateValidation:
          description: Control certificate validation
          type: boolean
        password:
          description: password to access Ansible API
          type: string
        url:
          description: URL of the Ansible server
          type: string
        username:
          description: username to access Ansible API.
          type: string
        clientSecret:
          description: OAuth Client Secret
          type: string
      required:
        - clientId
        - credentialsName
        - disableCertificateValidation
        - password
        - url
        - username
        - clientSecret
    settingsAssetsManagersBody:
      type: object
      properties:
        entityIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrAssetId'
        managerIds:
          type: array
          items:
            $ref: '#/components/schemas/groupIdOrUserId'
    settingsAuth:
      type: object
      properties:
        item:
          type: object
          properties:
            portalTokenTtl:
              description: Portal session token timeout (in minutes)
              type: number
      title: settingsAuth
    settingsAuthBody:
      type: object
      properties:
        portalTokenTtl:
          description: Portal session token timeout (in minutes)
          type: number
      title: settingsAuthBody
    settingsAzureAd:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsAzureAdBody:
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        clientSecret:
          type: string
        tenantId:
          type: string
          format: uuid
    settingsBreakGlass:
      type: object
      properties:
        agentConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
        trustConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
    settingsBreakGlassBody:
      type: object
      properties:
        agentConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
          required:
            - allowInbound
            - allowOutbound
            - allowIdentity
        trustConfig:
          type: object
          properties:
            allowInbound:
              type: boolean
            allowOutbound:
              type: boolean
            allowIdentity:
              type: boolean
          required:
            - allowInbound
            - allowOutbound
            - allowIdentity
      required:
        - agentConfig
        - trustConfig
    settingsClientSubnets:
      type: object
      properties:
        config:
          type: object
          properties:
            privateIpv4NetworksList:
              $ref: '#/components/schemas/privateIpv4NetworksList'
    settingsClientSubnetsBody:
      type: object
      properties:
        privateIpv4NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
      required:
        - privateIpv4NetworksList
    settingsClusterStrategy:
      type: object
      properties:
        preferredDeploymentId:
          type: string
        strategy:
          type: integer
    settingsClusterStrategyBody:
      type: object
      properties:
        preferredDeploymentId:
          type: string
        strategy:
          type: integer
      required:
        - preferredDeploymentId
        - strategy
    settingsConnectClientAutoUpdate:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
    settingsConnectClientAutoUpdateBody:
      type: object
      properties:
        clientAutoUpdate:
          type: boolean
      required:
        - clientAutoUpdate
    settingsFirewall:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
    settingsFirewallBody:
      type: object
      properties:
        implicitIcmpRuleEnabled:
          type: boolean
      required:
        - implicitIcmpRuleEnabled
    settingsFirewallIgnoredGPO:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredGPOBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRules:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallIgnoredRulesBody:
      type: object
      properties:
        inboundList:
          type: array
          items:
            type: string
        outboundList:
          type: array
          items:
            type: string
    settingsFirewallProfiles:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
    settingsFirewallProfilesBody:
      type: object
      properties:
        inboundAllow:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        inboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
        outboundBlock:
          type: object
          properties:
            domain:
              type: boolean
            private:
              type: boolean
            public:
              type: boolean
          required:
            - domain
            - private
            - public
      required:
        - inboundAllow
        - inboundBlock
        - outboundBlock
    settingsIdp:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        createdAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        createdBy:
          type: string
          format: uuid
        identityProviderType:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
        updatedAt:
          $ref: '#/components/schemas/iso8601DateTimeUTC'
        updatedBy:
          type: string
          format: uuid
    settingsIdpBody:
      type: object
      properties:
        certificate:
          description: Identity Provider certificate
          type: string
        identityProvider:
          type: string
          enum:
            - azure
            - custom
            - cyberark
            - duo
            - okta
        isDefault:
          description: Set as the default authentication method
          type: boolean
        sloUrl:
          description: Single Log out url
          type: string
        ssoUrl:
          description: Single sign on url
          type: string
      required:
        - certificate
        - identityProvider
        - isDefault
        - sloUrl
        - ssoUrl
    settingsIdpDefaultApplication:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
    settingsIdpDefaultApplicationBody:
      type: object
      properties:
        application:
          description: '1-Admin Portal, 2-Access Portal'
          type: integer
          enum:
            - 1
            - 2
      required:
        - application
    settingsIdpList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsIdp'
    settingsInternalSubnets:
      type: object
      properties:
        config:
          type: object
          properties:
            privateIpv4NetworksList:
              $ref: '#/components/schemas/privateIpv4NetworksList'
            privateIpv6NetworksList:
              $ref: '#/components/schemas/privateIpv6NetworksList'
    settingsInternalSubnetsBody:
      type: object
      properties:
        privateIpv4NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
        privateIpv6NetworksList:
          $ref: '#/components/schemas/privateIpv4NetworksList'
      required:
        - privateIpv4NetworksList
        - privateIpv6NetworksList
    settingsJamfCredentials:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          type: string
        username:
          description: JAMF username
          type: string
    settingsJamfCredentialsBody:
      type: object
      properties:
        host:
          description: JAMF url
          type: string
        password:
          description: JAMF Password
          type: string
        username:
          description: JAMF username
          type: string
      required:
        - host
        - password
        - username
    settingsLearningConfig:
      type: object
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
    settingsLearningConfigBody:
      type: object
      required:
        - allowQueueForever
        - allowQuickLearning
      properties:
        allowQueueForever:
          type: boolean
        allowQuickLearning:
          type: boolean
    settingsLinuxAutomationResponse:
      type: object
      properties:
        monitoredGroup:
          $ref: '#/components/schemas/groupCandidate'
    settingsLinuxSetup:
      type: object
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxSetupBody:
      type: object
      required:
        - allowInstallPackages
      properties:
        allowInstallPackages:
          type: boolean
    settingsLinuxUser:
      type: object
      properties:
        username:
          description: The linux username for ssh
          type: string
    settingsLinuxUserBody:
      type: object
      properties:
        password:
          description: password for the linux user
          type: string
        privateKey:
          description: private key for the linux user
          type: string
        username:
          description: the linux user name
          type: string
      required:
        - password
        - privateKey
        - username
    settingsMfaAuthentication:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Required
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to live in minutes
          type: integer
          example: 1440
    settingsMfaAuthenticationBody:
      type: object
      properties:
        isRequiresAuth:
          description: Authentication Required
          type: boolean
        isSsoForceAuth:
          description: Force sso authentication
          type: boolean
        tokenTtl:
          description: Token time to live in minutes
          type: integer
          example: 1440
      required:
        - isRequiresAuth
        - isSsoForceAuth
        - tokenTtl
    settingsMfaAuthenticationResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaAuthentication'
    settingsMfaCache:
      type: object
      properties:
        assetLimit:
          type: integer
        entityId:
          type: string
        entityInfo:
          anyOf:
            - $ref: '#/components/schemas/user'
            - $ref: '#/components/schemas/group'
        ttlMinutes:
          type: integer
    settingsMfaCacheBody:
      type: object
      properties:
        assetLimit:
          type: integer
        entityId:
          type: string
        ttlMinutes:
          type: integer
      required:
        - assetLimit
        - entityId
        - ttlMinutes
    settingsMfaCacheItem:
      type: object
      properties:
        item:
          type: object
          properties:
            assetLimit:
              type: integer
            entityId:
              type: string
            ttlMinutes:
              type: integer
    settingsMfaCacheList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsMfaCache'
        count:
          type: integer
    settingsMfaDetection:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
    settingsMfaDetectionBody:
      type: object
      properties:
        timeoutMinutes:
          description: access policy cooldown
          type: integer
          example: 5
      required:
        - timeoutMinutes
    settingsMfaDetectionResponse:
      type: object
      properties:
        item:
          $ref: '#/components/schemas/settingsMfaDetection'
    settingsNotification:
      type: object
      properties:
        assetProtected:
          description: Notify asset added to protection
          type: boolean
        assetQueued:
          description: Notify asset added to learning
          type: boolean
        assetUnprotected:
          description: Notify asset removed from protection
          type: boolean
        assetPostponed:
          description: Notify asset protection postponed
          type: boolean
    settingsNotificationBody:
      type: object
      properties:
        assetProtected:
          description: Notify asset added to protection
          type: boolean
        assetQueued:
          description: Notify asset added to learning
          type: boolean
        assetUnprotected:
          description: Notify asset removed from protection
          type: boolean
        assetPostponed:
          type: boolean
      required:
        - assetProtected
        - assetQueued
        - assetUnprotected
        - assetPostponed
    settingsPrivilegedPorts:
      type: object
      properties:
        item:
          type: object
          properties:
            tcpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
            UdpPorts:
              $ref: '#/components/schemas/PrivilegedPorts'
    settingsPrivilegedPortsBody:
      type: object
      required:
        - tcpPorts
        - udpPorts
      properties:
        tcpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
        udpPorts:
          $ref: '#/components/schemas/PrivilegedPorts'
    settingsProtectionAutomationResponse:
      type: object
      properties:
        monitoredGroup:
          $ref: '#/components/schemas/groupCandidate'
        protectedGroup:
          $ref: '#/components/schemas/groupCandidate'
    settingsPushNotifications:
      type: object
      properties:
        host:
          type: string
        id:
          type: string
        identityProvider:
          type: string
    settingsPushNotificationsBody:
      type: object
      properties:
        host:
          description: empty for microsoftAuthentictor
          type: string
        id:
          type: string
        identityProvider:
          type: string
        secretKey:
          type: string
      required:
        - id
        - identityProvider
        - secretKey
    settingsPushNotificationsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/settingsPushNotifications'
    settingsTrustedInternet:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
    settingsTrustedInternetAddresses:
      type: object
      properties:
        config:
          type: object
          properties:
            externalIpsList:
              $ref: '#/components/schemas/externalIpsList'
    settingsTrustedInternetAddressesBody:
      type: object
      properties:
        externalIpsList:
          $ref: '#/components/schemas/externalIpsList'
      required:
        - externalIpsList
    settingsTrustedInternetBody:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
      required:
        - ports
    settingsUntrustedInternet:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
    settingsUntrustedInternetBody:
      type: object
      properties:
        ports:
          $ref: '#/components/schemas/portsList'
      required:
        - ports
    settingsZpa:
      type: object
      properties:
        config:
          type: object
          properties:
            isEnabled:
              type: boolean
            clientOutboundSubnet:
              $ref: '#/components/schemas/ipSubnet'
            gatewayIpsList:
              type: array
              items:
                type: string
                pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
            portsToMfaTcp:
              type: string
              pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
            portsToMfaUdp:
              type: string
              pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
    settingsZpaBody:
      type: object
      required:
        - isEnabled
        - clientOutboundSubnet
        - gatewayIpsList
        - portsToMfaTcp
        - portsToMfaUdp
      properties:
        isEnabled:
          type: boolean
        clientOutboundSubnet:
          $ref: '#/components/schemas/ipSubnet'
        gatewayIpsList:
          type: array
          items:
            type: string
            pattern: '^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$'
        portsToMfaTcp:
          type: string
          pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
        portsToMfaUdp:
          type: string
          pattern: '^((\d{1,5}-\d{1,5})|\d{1,5})(,(\d{1,5}-\d{1,5})|,\d{1,5})*$'
    setUsersTypeBody:
      type: object
      required:
        - userIds
        - userType
        - comment
      properties:
        userIds:
          type: array
          items:
            type: string
        userType:
          type: integer
        comment:
          type: string
    setUserTypeBody:
      type: object
      required:
        - userType
      properties:
        userType:
          type: integer
        comment:
          type: string
    simulationParams:
      type: object
      properties:
        dstAsset:
          $ref: '#/components/schemas/assetBasicInfo'
        dstProcess:
          type: string
        port:
          type: string
        protocolType:
          type: integer
        srcAsset:
          $ref: '#/components/schemas/assetBasicInfo'
        srcProcess:
          type: string
        srcUserId:
          $ref: '#/components/schemas/idNamePair'
    simulationResponse:
      type: object
      properties:
        accessInfo:
          $ref: '#/components/schemas/accessInfo'
        dstAssetInfo:
          $ref: '#/components/schemas/asset'
        orderedReactivePolicies:
          $ref: '#/components/schemas/orderedReactivePolicies'
        srcAssetInfo:
          $ref: '#/components/schemas/asset'
    source:
      description: |
        Possible asset sources:
          * '1' - Access portal
          * '2' - SSP
          * '3' - Active directory
          * '4' - Custom
          * '5' - System
          * '6' - Ansible
          * '7' - Manual OT/IoT
          * '8' - Workgroup
          * '9' - Azure active directory
          * '10' - Azure
          * '11' - AWS
          * '12' - GCP
          * '14' - Jamf
          * '15' - Manual Linux
          * '16' - IBM cloud
          * '17' - Oracle cloud
          * '18' - VMware cloud
          * '19' - Alibaba cloud
          * '20' - Lumen cloud
          * '21' - OVH cloud
          * '22' - Connect
      type: integer
      format: int32
      enum:
        - 2
        - 3
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
    srcUserCandidate:
      type: object
      properties:
        domain:
          type: string
        id:
          type: string
        name:
          type: string
    srcUserCandidatesList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/srcUserCandidate'
        scrollCursor:
          type: string
    srcUsersList:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          sid:
            type: string
    state:
      type: object
      properties:
        assetId:
          type: string
        identityProtectedAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectionState:
          $ref: '#/components/schemas/identityProtectionState'
        isAssetConnected:
          type: boolean
        lastConnectedAt:
          $ref: '#/components/schemas/epochMillis'
        lastDisconnectedAt:
          $ref: '#/components/schemas/epochMillis'
        protectedAt:
          $ref: '#/components/schemas/epochMillis'
        protectionState:
          $ref: '#/components/schemas/protectionState'
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        identityProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectionState:
          $ref: '#/components/schemas/protectionState'
        rpcProtectAt:
          $ref: '#/components/schemas/epochMillis'
        rpcProtectedAt:
          $ref: '#/components/schemas/epochMillis'
    switch:
      type: object
      properties:
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - CISCO_IOS_XE
            name:
              type: string
            ip:
              type: string
            username:
              type: string
            password:
              type: string
            monitorOnInterfaceDiscovery:
              type: boolean
            monitorInterfaceOnOtAdded:
              type: boolean
    switchArray:
      type: object
      properties:
        items:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/switch'
    switchProtocolsList:
      type: array
      items:
        type: object
        properties:
          localPorts:
            type: string
          remotePorts:
            type: string
          protocolType:
            $ref: '#/components/schemas/protocol'
    tagGroupBody:
      type: object
      properties:
        membersId:
          description: members id
          type: array
          items:
            type: string
            pattern: '^a:[ault]:[a-zA-Z0-9]{8}$'
          example:
            - 'a:a:8ErCHXe8'
        comment:
          type: string
      required:
        - membersId
    tags:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/group'
    trafficType:
      description: |
        * '1' - Internal
        * '2' - External
        * '3' - Both
      type: integer
      format: int32
      enum:
        - 1
        - 2
        - 3
    user:
      type: object
      properties:
        classifiedBy:
          $ref: '#/components/schemas/idNamePair'
        createdAt:
          $ref: '#/components/schemas/epochMillis'
        distinguishedName:
          type: string
        domain:
          type: string
        email:
          type: string
        firstName:
          type: string
        guid:
          type: string
        id:
          type: string
        jobTitle:
          type: string
        lastLogonReplicated:
          $ref: '#/components/schemas/epochMillis'
        lastName:
          type: string
        name:
          type: string
        officePhone:
          type: string
        phone:
          type: string
        principalName:
          type: string
        protectionState:
          $ref: '#/components/schemas/userProtectionState'
        role:
          type: integer
        sid:
          type: string
        source:
          type: integer
        userPrincipleName:
          type: string
        userType:
          type: integer
        protectAt:
          $ref: '#/components/schemas/epochMillis'
        protectedAt:
          $ref: '#/components/schemas/epochMillis'
        addedAt:
          $ref: '#/components/schemas/epochMillis'
        addedBy:
          $ref: '#/components/schemas/epochMillis'
    userAnalysis:
      type: object
      properties:
        items:
          type: object
          properties:
            counts:
              type: object
              properties:
                byDstAsset:
                  type: integer
                byPort:
                  type: integer
                bySrcAsset:
                  type: integer
                bySrcProcess:
                  type: integer
            byDstAsset:
              type: array
              items:
                $ref: '#/components/schemas/byDstAsset'
            byPort:
              type: array
              items:
                $ref: '#/components/schemas/byPortUser'
            bySrcAsset:
              type: array
              items:
                $ref: '#/components/schemas/bySrcAsset'
            bySrcProcess:
              type: array
              items:
                $ref: '#/components/schemas/bySrcProcess'
    userIdResponse:
      type: object
      properties:
        userId:
          type: string
      x-examples:
        example-1:
          userId: 'u:a:tOUovcIQ'
    userProtectionState:
      description: |
        * '1' - Unsegmented
        * '3' - Segmented
        * '5' - Learning until
        * '6' - Learning done
      type: integer
      format: int32
      enum:
        - 1
        - 3
        - 5
        - 6
    userResponse:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/user'
    userRole:
      description: |
        * '0' - Unspecified
        * '1' - Admin
        * '2' - Viewer
        * '3' - Regular
        * '4' - API-FullAccess
        * '5' - API-ReadOnly
        * '6' - SelfService
        * '7' - CloudConnectorProvisioning
        * '8' - JAMF Asset
        * '9' - Asset Manager
        * '10' - Operator
        * '11' - Service Now Token
      type: integer
      format: int32
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
    userSimple:
      type: object
      properties:
        domain:
          type: string
        email:
          type: string
        id:
          type: string
        name:
          type: string
    usersProtectBody:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
      required:
        - userIds
    usersQueueBody:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
        queueDays:
          type: integer
          enum:
            - 14
            - 30
      required:
        - userIds
        - queueDays
    userStatistics:
      type: object
      properties:
        userStatistics:
          type: object
          properties:
            totalCount:
              type: integer
            adminsCount:
              type: integer
            viewersCount:
              type: integer
      x-examples:
        example-1:
          userStatistics:
            totalCount: 87
            adminsCount: 14
            viewersCount: 6
    userSummary:
      type: object
      properties:
        count:
          type: integer
        id:
          type: string
        name:
          type: string
    usersActivateBody:
      type: object
      required:
        - items
      properties:
        comment:
          type: string
        items:
          type: array
          items:
            type: string
    userActivateBody:
      type: object
      properties:
        comment:
          type: string
    validateResponse:
      type: object
      properties:
        affectedAssetsCount:
          type: integer
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
security:
  - api_key: []
tags:
  - name: Activities
    description: API calls related to Activities.
  - name: AE Exclusions
    description: API calls related to AE Exclusions.
  - name: Asset
    description: API calls related to a specific Asset.
  - name: Asset OT/IoT
    description: API calls related to a specific OT/IoT Asset.
  - name: Assets
    description: API calls related to Assets.
  - name: Assets OT/IoT
    description: API calls related to OT/IoT Assets.
  - name: Audit
    description: API calls related to Audits.
  - name: Auth
    description: API calls related to Authentication.
  - name: Entity
    description: API calls related to Entities.
  - name: External Access Policy
    description: API calls related to a External Access Policy.
  - name: Group
    description: API calls related to a specific Group.
  - name: Groups
    description: API calls related to Groups.
  - name: Groups Active Directory
    description: API calls related to Active Directory Groups.
  - name: Groups Custom
    description: API calls related to Custom Groups.
  - name: Groups Tag
    description: API calls related to Tag Groups.
  - name: MFA
    description: API calls related to MFA policies.
  - name: MFA Identity
    description: API Calls related to MFA Identity settings.
  - name: MFA Inbound
    description: API calls related to Inbound MFA policies.
  - name: MFA Outbound
    description: API calls related to Outbound MFA policies.
  - name: Onboarding Policies
    description: API calls related to Onboarding policies.
  - name: Profile
    description: API calls related to profile.
  - name: Rules
    description: API calls related to Rules.
  - name: Rules Identity
    description: API calls related to Identity Rules.
  - name: Rules Inbound
    description: API calls related to Inbound rules.
  - name: Rules Outbound
    description: API calls related to Outbound rules.
  - name: Rules RPC
    description: API calls related to RPC Rules
  - name: Sessions
    description: API calls related to Sessions.
  - name: Settings
    description: API calls related to Settings.
  - name: Settings Access Tokens
    description: API calls related to Access Tokens settings.
  - name: Settings Activities
    description: API calls related to Activities settings.
  - name: Settings AI
    description: API calls related to AI settings.
  - name: Settings AI Learning
    description: API calls related to AI Learning settings.
  - name: Settings AI Rules Review
    description: API calls related to AI Rule Review settings.
  - name: Settings Asset Management
    description: API calls related to Asset Management settings.
  - name: Settings Asset Managers
    description: API calls related to Asset Managers settings.
  - name: Settings Break Glass
    description: API calls related to Break Glass settings.
  - name: Settings Cloud Connector
    description: API calls related to Cloud Connector settings.
  - name: Settings Connect
    description: API calls related to Connect settings.
  - name: Settings Custom Users
    description: API calls related to Custom Users settings.
  - name: Settings Firewall
    description: API calls related to Firewall settings.
  - name: Settings Identity Providers
    description: API calls related to Identity Providers settings.
  - name: Settings Inactive Assets
    description: API calls related to Inactive Assets settings.
  - name: Settings Internal Subnets
    description: API Calls related to Internal Subnets settings.
  - name: Settings Learning
    description: API calls related to AI Learning settings.
  - name: Settings Licenses
    description: API calls related to Licenses settings.
  - name: Settings Mail Notifications
    description: API calls related to Mail Notifications settings.
  - name: Settings Maintenance Window
    description: API calls related to Maintenance Window settings.
  - name: Settings MFA
    description: API Calls related to MFA settings.
  - name: Settings MFA Cache
    description: API Calls related to MFA Cache settings.
  - name: Settings Portal Security
    description: API calls related to Portal Security settings.
  - name: Settings Privileged Ports
    description: API calls related to Privileged Ports settings.
  - name: Settings Protection Policies
    description: API calls related to Protection Automation settings.
  - name: Settings Push Notifications
    description: API calls related to Push Notifications settings.
  - name: Settings Roles
    description: API calls related to Roles settings.
  - name: Settings Segment Servers
    description: API Calls related to Segment Server Settings.
  - name: Settings ServiceNow
    description: API calls related to ServiceNow settings.
  - name: Settings Trusted Internet
    description: API calls related to Trust Internet Settings
  - name: Settings ZPA
    description: API calls related to ZPA Settings.
  - name: Switch
    description: API calls related to switches
  - name: User
    description: API calls related to a specific User.
  - name: Users
    description: API calls related to Users.
